--[[
*****************************************************************************************
* Program Script Name	:	B738.trim
* Author Name			:	Jim Gregory
*
*   Revisions:
*   -- DATE --	--- REV NO ---		--- DESCRIPTION ---
*   2016-04-26	0.01a				Start of Dev
*
*
*
*
*****************************************************************************************
*        COPYRIGHT � 2016 JIM GREGORY / LAMINAR RESEARCH - ALL RIGHTS RESERVED
*****************************************************************************************
--]]


--*************************************************************************************--
--** 					              XLUA GLOBALS              				     **--
--*************************************************************************************--

--[[

SIM_PERIOD - this contains the duration of the current frame in seconds (so it is alway a
fraction).  Use this to normalize rates,  e.g. to add 3 units of fuel per second in a
per-frame callback you’d do fuel = fuel + 3 * SIM_PERIOD.

IN_REPLAY - evaluates to 0 if replay is off, 1 if replay mode is on

--]]


--*************************************************************************************--
--** 					               CONSTANTS                    				 **--
--*************************************************************************************--


-- -- CENTER GRAVITY
-- cg_1_5 = { 6, 9, 14, 18, 22, 26, 30, 32, 33, 36 }
-- flaps_1_5 = { 	[ 6] = { [80] = 6.25, [100] = 6.25, [120] = 7,    [140] = 7.75, [160] = 8.5,  [180] = 8.5 },
				-- [ 9] = { [80] = 5.75, [100] = 5.75, [120] = 6.5,  [140] = 7.25, [160] = 8,    [180] = 8.5 },
				-- [14] = { [80] = 5.25, [100] = 5.25, [120] = 5.75, [140] = 6.5,  [160] = 7.25, [180] = 7.75},
				-- [18] = { [80] = 4.5,  [100] = 4.5,  [120] = 5.25, [140] = 6,    [160] = 6.5,  [180] = 7   },
				-- [22] = { [80] = 4,    [100] = 4,    [120] = 4.75, [140] = 5.25, [160] = 5.75, [180] = 6.25},
				-- [26] = { [80] = 3.5,  [100] = 3.5,  [120] = 4,    [140] = 4.75, [160] = 5.25, [180] = 5.5 },
				-- [30] = { [80] = 3,    [100] = 3,    [120] = 3.5,  [140] = 4,    [160] = 4.5,  [180] = 5   },
				-- [32] = { [80] = 2.75, [100] = 2.75, [120] = 3.25, [140] = 3.75, [160] = 4.25, [180] = 4.5 },
				-- [33] = { [80] = 2.75, [100] = 2.75, [120] = 3,    [140] = 3.5,  [160] = 4,    [180] = 4.5 },
				-- [36] = { [80] = 2.75, [100] = 2.75, [120] = 2.75, [140] = 3,    [160] = 3.5,  [180] = 4   }
			-- }

-- cg_15 = { 6, 9, 11, 16, 24, 28, 29, 31, 33, 36 }
-- flaps_15 = { 	[ 6] = { [80] = 5.25, [100] = 5.25, [120] = 7,    [140] = 8,    [160] = 8.5,  [180] = 8.5 },
				-- [ 9] = { [80] = 4.75, [100] = 4.75, [120] = 6.5,  [140] = 7.25, [160] = 8.5,  [180] = 8.5 },
				-- [11] = { [80] = 4.5,  [100] = 4.5,  [120] = 6,    [140] = 6.75, [160] = 7.75, [180] = 8.5 },
				-- [16] = { [80] = 3.75, [100] = 3.75, [120] = 5,    [140] = 5.5,  [160] = 6,    [180] = 6.75},
				-- [24] = { [80] = 2.75, [100] = 2.75, [120] = 3.5,  [140] = 4,    [160] = 4.5,  [180] = 5   },
				-- [28] = { [80] = 2.75, [100] = 2.75, [120] = 2.75, [140] = 3.25, [160] = 3.75, [180] = 4.25},
				-- [29] = { [80] = 2.75, [100] = 2.75, [120] = 2.75, [140] = 3,    [160] = 3.5,  [180] = 4   },
				-- [31] = { [80] = 2.75, [100] = 2.75, [120] = 2.75, [140] = 2.75, [160] = 3.  , [180] = 3.5 },
				-- [33] = { [80] = 2.75, [100] = 2.75, [120] = 2.75, [140] = 2.75, [160] = 2.75, [180] = 3.25},
				-- [36] = { [80] = 2.75, [100] = 2.75, [120] = 2.75, [140] = 2.75, [160] = 2.75, [180] = 2.75}
			-- }

-- CENTER GRAVITY
cg_1_5 = { 6, 8, 9, 11, 16, 21, 26, 30, 32, 34, 36 }
flaps_1_5 = { 	[ 6] = { [85] = 8.5,  [80] = 8.5,  [75] = 8.25, [70] = 8,    [65] = 7.75, [60] = 7.25 , [55] = 6.75, [50] = 6.5,  [45] = 6,    [40] = 6},
				[ 8] = { [85] = 8.5,  [80] = 8.5,  [75] = 8,    [70] = 7.75, [65] = 7.25, [60] = 7 ,    [55] = 6.5,  [50] = 6,    [45] = 5.75, [40] = 5.75},
				[ 9] = { [85] = 8.5,  [80] = 8.25, [75] = 7.75, [70] = 7.5,  [65] = 7,    [60] = 6.75 , [55] = 6.5,  [50] = 6,    [45] = 5.5,  [40] = 5.5},
				[11] = { [85] = 8.25, [80] = 7.75, [75] = 7.5,  [70] = 7.25, [65] = 6.75, [60] = 6.5 ,  [55] = 6.25, [50] = 5.75, [45] = 5.5,  [40] = 5.5},
				[16] = { [85] = 7,    [80] = 6.75, [75] = 6.5,  [70] = 6.25, [65] = 6,    [60] = 5.75 , [55] = 5.5,  [50] = 5,    [45] = 4.75, [40] = 4.75},
				[21] = { [85] = 6.25, [80] = 6,    [75] = 5.75, [70] = 5.5,  [65] = 5.25, [60] = 5 ,    [55] = 4.75, [50] = 4.5,  [45] = 4,    [40] = 4},
				[26] = { [85] = 5.5,  [80] = 5.25, [75] = 5,    [70] = 4.75, [65] = 4.5,  [60] = 4.25 , [55] = 4.25, [50] = 3.75, [45] = 3.5,  [40] = 3.5},
				[30] = { [85] = 4.75, [80] = 4.5,  [75] = 4.5,  [70] = 4.25, [65] = 4,    [60] = 3.75 , [55] = 3.5,  [50] = 3.25, [45] = 3,    [40] = 3},
				[32] = { [85] = 4.5,  [80] = 4.25, [75] = 4,    [70] = 3.75, [65] = 3.75, [60] = 3.5 ,  [55] = 3.25, [50] = 3,    [45] = 2.5,  [40] = 2.5},
				[34] = { [85] = 4.25, [80] = 4,    [75] = 3.75, [70] = 3.5,  [65] = 3.25, [60] = 3.25 , [55] = 3,    [50] = 2.75, [45] = 2.5,  [40] = 2.5},
				[36] = { [85] = 3.75, [80] = 3.5,  [75] = 3.5,  [70] = 3.25, [65] = 3,    [60] = 2.75 , [55] = 2.75, [50] = 2.25, [45] = 2.25, [40] = 2.25}
			}

cg_15 = { 6, 8, 9, 11, 16, 21, 26, 30, 32, 34, 36 }
flaps_15 = { 	[ 6] = { [85] = 8.5,  [80] = 8.5,  [75] = 8.5,  [70] = 8.5,  [65] = 8.25, [60] = 7.75 , [55] = 7,    [50] = 6,    [45] = 5,    [40] = 5},
				[ 8] = { [85] = 8.5,  [80] = 8.5,  [75] = 8.5,  [70] = 8.25, [65] = 7.75, [60] = 7 ,    [55] = 6.5,  [50] = 5.75, [45] = 4.75, [40] = 4.75},
				[ 9] = { [85] = 8.5,  [80] = 8.5,  [75] = 8.5,  [70] = 8.25, [65] = 7.5,  [60] = 6.75 , [55] = 6.25, [50] = 5.5,  [45] = 4.5,  [40] = 4.5},
				[11] = { [85] = 8.5,  [80] = 8.5,  [75] = 7.75, [70] = 7.25, [65] = 6.75, [60] = 6.25 , [55] = 5.75, [50] = 5,    [45] = 4.5,  [40] = 4.5},
				[16] = { [85] = 6.5,  [80] = 6,    [75] = 5.75, [70] = 5.5,  [65] = 5.25, [60] = 4.75 , [55] = 4.5,  [50] = 4,    [45] = 3.5,  [40] = 3.5},
				[21] = { [85] = 5.5,  [80] = 5,    [75] = 4.75, [70] = 4.5,  [65] = 4.25, [60] = 4 ,    [55] = 3.75, [50] = 3.25, [45] = 2.75, [40] = 2.75},
				[26] = { [85] = 4.25, [80] = 4,    [75] = 3.75, [70] = 3.5,  [65] = 3.25, [60] = 3 ,    [55] = 2.75, [50] = 2.5,  [45] = 2.25, [40] = 2.25},
				[30] = { [85] = 3.5,  [80] = 3.25, [75] = 3,    [70] = 2.75, [65] = 2.5,  [60] = 2.25 , [55] = 2.25, [50] = 2.25, [45] = 2.25, [40] = 2.25},
				[32] = { [85] = 3,    [80] = 2.75, [75] = 2.5,  [70] = 2.5,  [65] = 2.25, [60] = 2.25 , [55] = 2.25, [50] = 2.25, [45] = 2.25, [40] = 2.25},
				[34] = { [85] = 2.5,  [80] = 2.5,  [75] = 2.25, [70] = 2.25, [65] = 2.25, [60] = 2.25 , [55] = 2.25, [50] = 2.25, [45] = 2.25, [40] = 2.25},
				[36] = { [85] = 2.25, [80] = 2.25, [75] = 2.25, [70] = 2.25, [65] = 2.25, [60] = 2.25 , [55] = 2.25, [50] = 2.25, [45] = 2.25, [40] = 2.25}
			}

-- V SPEEDS
-- oat_index -> number oat = 6
oat_idx = { 27, 38, 44, 49, 50, 60 }

-- region_alt_max -> [oat C]
region_alt_max = { 
	[27] = { [1] = 2100, [2] = 4200, [3] = 6000, [4] = 8000, [5] = 9999 },
	[38] = { [1] =    0, [2] = 3500, [3] = 4200, [4] = 6000, [5] = 8000 },
	[44] = { [1] =    0, [2] =   0,  [3] = 2100, [4] = 4600, [5] = 8000 },
	[49] = { [1] =    0, [2] =   0,  [3] =    0, [4] = 3500, [5] = 8000 },
	[50] = { [1] =    0, [2] =   0,  [3] =    0, [4] = 2800, [5] = 8000 },
	[60] = { [1] =    0, [2] =   0,  [3] =    0, [4] = 4600, [5] = 8000 }
	}

-- v1 - > [region] [flaps] [weight]
-- V1
v1_calc =
	{
	-- A
	[1] = {
	[1] =  { [90] = 107, [100] = 114, [110] = 121, [120] = 127, [130] = 133, [140] = 139, [150] = 145, [160] = 150, [170] = 155, [180] = 160 },
	[5] =  { [90] = 103, [100] = 109, [110] = 116, [120] = 122, [130] = 128, [140] = 134, [150] = 139, [160] = 144, [170] = 149, [180] = 153 },
	[15] = { [90] =  99, [100] = 106, [110] = 112, [120] = 118, [130] = 124, [140] = 130, [150] = 135, [160] = 140, [170] = 145, [180] = 150 }
		},
	-- B
	[2] = {
	[1] =  { [90] = 108, [100] = 115, [110] = 122, [120] = 128, [130] = 134, [140] = 140, [150] = 146, [160] = 151, [170] = 156, [180] = 161 },
	[5] =  { [90] = 104, [100] = 110, [110] = 117, [120] = 123, [130] = 129, [140] = 135, [150] = 140, [160] = 145, [170] = 150, [180] = 154 },
	[15] = { [90] = 100, [100] = 107, [110] = 113, [120] = 119, [130] = 125, [140] = 131, [150] = 136, [160] = 141, [170] = 146, [180] = 999 }
		},
	-- C
	[3] = {
	[1] =  { [90] = 109, [100] = 116, [110] = 123, [120] = 129, [130] = 135, [140] = 141, [150] = 147, [160] = 152, [170] = 157, [180] = 162 },
	[5] =  { [90] = 105, [100] = 111, [110] = 118, [120] = 124, [130] = 130, [140] = 136, [150] = 141, [160] = 146, [170] = 151, [180] = 999 },
	[15] = { [90] = 101, [100] = 108, [110] = 114, [120] = 120, [130] = 126, [140] = 132, [150] = 137, [160] = 142, [170] = 999, [180] = 999 }
		},
	-- D
	[4] = {
	[1] =  { [90] = 110, [100] = 117, [110] = 124, [120] = 130, [130] = 136, [140] = 142, [150] = 148, [160] = 153, [170] = 158, [180] = 999 },
	[5] =  { [90] = 106, [100] = 112, [110] = 119, [120] = 125, [130] = 131, [140] = 137, [150] = 142, [160] = 147, [170] = 999, [180] = 999 },
	[15] = { [90] = 102, [100] = 109, [110] = 115, [120] = 121, [130] = 127, [140] = 133, [150] = 138, [160] = 999, [170] = 999, [180] = 999 }
		},
	-- E
	[5] = {
	[1] =  { [90] = 112, [100] = 119, [110] = 126, [120] = 132, [130] = 138, [140] = 144, [150] = 150, [160] = 155, [170] = 999, [180] = 999 },
	[5] =  { [90] = 108, [100] = 114, [110] = 121, [120] = 127, [130] = 133, [140] = 139, [150] = 999, [160] = 999, [170] = 999, [180] = 999 },
	[15] = { [90] = 104, [100] = 111, [110] = 117, [120] = 123, [130] = 129, [140] = 999, [150] = 999, [160] = 999, [170] = 999, [180] = 999 }
		}
	}

-- VR
vr_calc =
	{
	-- A
	[1] = {
	[1] =  { [90] = 108, [100] = 115, [110] = 122, [120] = 128, [130] = 135, [140] = 141, [150] = 147, [160] = 152, [170] = 157, [180] = 162 },
	[5] =  { [90] = 103, [100] = 110, [110] = 117, [120] = 123, [130] = 129, [140] = 135, [150] = 141, [160] = 146, [170] = 151, [180] = 156 },
	[15] = { [90] = 100, [100] = 107, [110] = 113, [120] = 119, [130] = 125, [140] = 131, [150] = 136, [160] = 141, [170] = 146, [180] = 150 }
		},
	-- B
	[2] = {
	[1] =  { [90] = 109, [100] = 116, [110] = 123, [120] = 129, [130] = 136, [140] = 142, [150] = 148, [160] = 153, [170] = 158, [180] = 163 },
	[5] =  { [90] = 104, [100] = 111, [110] = 118, [120] = 124, [130] = 130, [140] = 136, [150] = 142, [160] = 147, [170] = 152, [180] = 157 },
	[15] = { [90] = 101, [100] = 108, [110] = 114, [120] = 120, [130] = 126, [140] = 132, [150] = 137, [160] = 142, [170] = 147, [180] = 999 }
		},
	-- C
	[3] = {
	[1] =  { [90] = 110, [100] = 117, [110] = 124, [120] = 130, [130] = 137, [140] = 143, [150] = 149, [160] = 154, [170] = 159, [180] = 164 },
	[5] =  { [90] = 105, [100] = 112, [110] = 119, [120] = 125, [130] = 131, [140] = 137, [150] = 143, [160] = 148, [170] = 153, [180] = 999 },
	[15] = { [90] = 102, [100] = 109, [110] = 115, [120] = 121, [130] = 127, [140] = 133, [150] = 138, [160] = 143, [170] = 999, [180] = 999 }
		},
	-- D
	[4] = {
	[1] =  { [90] = 111, [100] = 118, [110] = 125, [120] = 131, [130] = 138, [140] = 144, [150] = 150, [160] = 155, [170] = 160, [180] = 999 },
	[5] =  { [90] = 106, [100] = 113, [110] = 120, [120] = 126, [130] = 132, [140] = 138, [150] = 144, [160] = 149, [170] = 999, [180] = 999 },
	[15] = { [90] = 103, [100] = 110, [110] = 116, [120] = 122, [130] = 128, [140] = 134, [150] = 139, [160] = 999, [170] = 999, [180] = 999 }
		},
	-- E
	[5] = {
	[1] =  { [90] = 113, [100] = 120, [110] = 127, [120] = 133, [130] = 140, [140] = 146, [150] = 152, [160] = 156, [170] = 999, [180] = 999 },
	[5] =  { [90] = 108, [100] = 115, [110] = 122, [120] = 128, [130] = 134, [140] = 140, [150] = 999, [160] = 999, [170] = 999, [180] = 999 },
	[15] = { [90] = 105, [100] = 112, [110] = 118, [120] = 124, [130] = 130, [140] = 999, [150] = 999, [160] = 999, [170] = 999, [180] = 999 }
		}
	}

-- V2
v2_calc =
	{
	-- A
	[1] = {
	[1]  = { [90] = 126, [100] = 131, [110] = 137, [120] = 142, [130] = 147, [140] = 151, [150] = 156, [160] = 160, [170] = 164, [180] = 167 },
	[5] =  { [90] = 121, [100] = 127, [110] = 132, [120] = 137, [130] = 141, [140] = 146, [150] = 150, [160] = 154, [170] = 158, [180] = 161 },
	[15] = { [90] = 118, [100] = 123, [110] = 128, [120] = 133, [130] = 137, [140] = 141, [150] = 145, [160] = 149, [170] = 153, [180] = 156 }
		},
	-- B
	[2] = {
	[1]  = { [90] = 125, [100] = 130, [110] = 136, [120] = 141, [130] = 146, [140] = 150, [150] = 155, [160] = 159, [170] = 163, [180] = 166 },
	[5] =  { [90] = 120, [100] = 126, [110] = 131, [120] = 136, [130] = 140, [140] = 145, [150] = 149, [160] = 153, [170] = 157, [180] = 160 },
	[15] = { [90] = 117, [100] = 122, [110] = 127, [120] = 132, [130] = 136, [140] = 140, [150] = 144, [160] = 148, [170] = 152, [180] = 999 }
		},
	-- C
	[3] = {
	[1]  = { [90] = 124, [100] = 129, [110] = 135, [120] = 140, [130] = 145, [140] = 149, [150] = 154, [160] = 158, [170] = 162, [180] = 165 },
	[5] =  { [90] = 119, [100] = 125, [110] = 130, [120] = 135, [130] = 139, [140] = 144, [150] = 148, [160] = 152, [170] = 156, [180] = 999 },
	[15] = { [90] = 116, [100] = 121, [110] = 126, [120] = 131, [130] = 135, [140] = 139, [150] = 143, [160] = 147, [170] = 999, [180] = 999 }
		},
	-- D
	[4] = {
	[1]  = { [90] = 124, [100] = 129, [110] = 135, [120] = 140, [130] = 145, [140] = 149, [150] = 154, [160] = 158, [170] = 162, [180] = 999 },
	[5] =  { [90] = 119, [100] = 125, [110] = 130, [120] = 135, [130] = 139, [140] = 144, [150] = 148, [160] = 152, [170] = 999, [180] = 999 },
	[15] = { [90] = 116, [100] = 121, [110] = 126, [120] = 131, [130] = 135, [140] = 139, [150] = 143, [160] = 999, [170] = 999, [180] = 999 }
		},
	-- E
	[5] = {
	[1]  = { [90] = 122, [100] = 127, [110] = 133, [120] = 138, [130] = 143, [140] = 147, [150] = 152, [160] = 156, [170] = 999, [180] = 999 },
	[5] =  { [90] = 117, [100] = 123, [110] = 128, [120] = 133, [130] = 137, [140] = 142, [150] = 999, [160] = 999, [170] = 999, [180] = 999 },
	[15] = { [90] = 114, [100] = 119, [110] = 124, [120] = 129, [130] = 133, [140] = 999, [150] = 999, [160] = 999, [170] = 999, [180] = 999 }
		}
	}

-- Minimum V1 (VR = V1 + 1)
-- v1_min - > [oat C][alt] if oat < 10 then v1_min = v1_min - 1
v1_min =
	{
	[10] = { [0] = 103, [2000] = 101, [4000] = 97, [6000] = 94, [8000] = 91, [10000] = 88},
	[15] = { [0] = 103, [2000] = 100, [4000] = 97, [6000] = 94, [8000] = 91, [10000] = 87},
	[20] = { [0] = 103, [2000] = 100, [4000] = 97, [6000] = 94, [8000] = 90, [10000] = 86},
	[25] = { [0] = 103, [2000] = 100, [4000] = 97, [6000] = 93, [8000] = 89, [10000] = 86},
	[30] = { [0] = 103, [2000] =  99, [4000] = 95, [6000] = 92, [8000] = 88, [10000] = 84},
	[35] = { [0] = 101, [2000] =  97, [4000] = 94, [6000] = 90, [8000] = 86, [10000] = 86},
	[40] = { [0] =  99, [2000] =  95, [4000] = 92, [6000] = 88, [8000] = 88, [10000] = 88},
	[45] = { [0] =  96, [2000] =  93, [4000] = 90, [6000] = 90, [8000] = 90, [10000] = 90},
	[50] = { [0] =  94, [2000] =  91, [4000] = 91, [6000] = 91, [8000] = 91, [10000] = 91}
	}

-- -- VREF [flaps] [weight]
-- vref_calc = 
	-- {
	-- [15] = { [90] = 122, [100] = 129, [110] = 135, [120] = 142, [130] = 148, [140] = 154, [150] = 159, [160] = 164, [170] = 169, [180] = 174},
	-- [30] = { [90] = 116, [100] = 123, [110] = 129, [120] = 135, [130] = 141, [140] = 146, [150] = 151, [160] = 156, [170] = 160, [180] = 165},
	-- [40] = { [90] = 109, [100] = 116, [110] = 122, [120] = 128, [130] = 133, [140] = 139, [150] = 144, [160] = 148, [170] = 153, [180] = 157}
	-- }

vmin_full = 
	{
	[0] = 145, [1] = 145, [2] = 145, [5] = 139, [10] = 134, [15] = 129, [25] = 124, [30] = 123, [40] = 122
	}

vmax =
	{
	[0] = 340, [1] = 250, [2] = 250, [5] = 250, [10] = 210, [15] = 200, [25] = 190, [30] = 175, [40] = 162
	}


---------------
-- V1, VR V2 --
---------------

-- DRY
--v1_idx [xxK]
v1_idx =
	{ 
	[26] = { 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90 },
	[24] = { 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90 },
	[22] = { 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80 }
	}

-- v1_dry [xxK] [flaps] [weight kg]
v1_dry =
	{
	[26] = {
	[1]  = { [40] = 105, [45] = 113, [50] = 121, [55] = 128, [60] = 135, [65] = 141, [70] = 147, [75] = 153, [80] = 158, [85] = 163, [90] = 169 },
	[5]  = { [40] = 101, [45] = 109, [50] = 116, [55] = 123, [60] = 129, [65] = 135, [70] = 141, [75] = 147, [80] = 152, [85] = 157, [90] = 161 },
	[10] = { [40] = 100, [45] = 108, [50] = 115, [55] = 122, [60] = 128, [65] = 134, [70] = 140, [75] = 146, [80] = 151, [85] = 156, [90] = 999 },
	[15] = { [40] =  98, [45] = 105, [50] = 112, [55] = 119, [60] = 125, [65] = 131, [70] = 137, [75] = 142, [80] = 148, [85] = 999, [90] = 999 },
	[25] = { [40] =  96, [45] = 103, [50] = 110, [55] = 117, [60] = 123, [65] = 129, [70] = 135, [75] = 140, [80] = 145, [85] = 999, [90] = 999 }
		},
	[24] = {
	[1]  = { [40] = 107, [45] = 115, [50] = 122, [55] = 130, [60] = 137, [65] = 143, [70] = 149, [75] = 155, [80] = 160, [85] = 166, [90] = 172 },
	[5]  = { [40] = 103, [45] = 110, [50] = 118, [55] = 124, [60] = 131, [65] = 137, [70] = 143, [75] = 149, [80] = 154, [85] = 159, [90] = 999 },
	[10] = { [40] = 102, [45] = 109, [50] = 116, [55] = 123, [60] = 130, [65] = 136, [70] = 142, [75] = 148, [80] = 999, [85] = 999, [90] = 999 },
	[15] = { [40] =  99, [45] = 107, [50] = 114, [55] = 121, [60] = 127, [65] = 133, [70] = 139, [75] = 145, [80] = 999, [85] = 999, [90] = 999 },
	[25] = { [40] =  97, [45] = 105, [50] = 112, [55] = 118, [60] = 125, [65] = 131, [70] = 137, [75] = 142, [80] = 999, [85] = 999, [90] = 999 }
		},
	[22] = {
	[1]  = { [40] = 108, [44] = 115, [48] = 121, [52] = 127, [56] = 132, [60] = 138, [64] = 143, [68] = 148, [72] = 153, [76] = 158, [80] = 162 },
	[5]  = { [40] = 104, [44] = 110, [48] = 116, [52] = 122, [56] = 127, [60] = 132, [64] = 138, [68] = 142, [72] = 147, [76] = 152, [80] = 156 },
	[10] = { [40] = 103, [44] = 109, [48] = 115, [52] = 121, [56] = 126, [60] = 131, [64] = 136, [68] = 141, [72] = 146, [76] = 999, [80] = 999 },
	[15] = { [40] = 100, [44] = 107, [48] = 112, [52] = 118, [56] = 123, [60] = 128, [64] = 134, [68] = 138, [72] = 142, [76] = 999, [80] = 999 },
	[25] = { [40] =  98, [44] = 105, [48] = 110, [52] = 116, [56] = 121, [60] = 126, [64] = 131, [68] = 999, [72] = 999, [76] = 999, [80] = 999 }
		}
	}

-- vr_dry [xxK] [flaps] [weight kg]
vr_dry =
	{
	[26] = {
	[1]  = { [40] = 106, [45] = 114, [50] = 122, [55] = 129, [60] = 136, [65] = 143, [70] = 149, [75] = 155, [80] = 160, [85] = 166, [90] = 171 },
	[5]  = { [40] = 102, [45] = 110, [50] = 117, [55] = 124, [60] = 131, [65] = 137, [70] = 143, [75] = 148, [80] = 154, [85] = 159, [90] = 163 },
	[10] = { [40] = 101, [45] = 108, [50] = 116, [55] = 123, [60] = 129, [65] = 136, [70] = 141, [75] = 147, [80] = 152, [85] = 157, [90] = 999 },
	[15] = { [40] =  99, [45] = 106, [50] = 113, [55] = 120, [60] = 126, [65] = 133, [70] = 138, [75] = 144, [80] = 149, [85] = 999, [90] = 999 },
	[25] = { [40] =  97, [45] = 104, [50] = 111, [55] = 118, [60] = 124, [65] = 130, [70] = 136, [75] = 141, [80] = 146, [85] = 999, [90] = 999 }
		},
	[24] = {
	[1]  = { [40] = 108, [45] = 116, [50] = 123, [55] = 131, [60] = 138, [65] = 144, [70] = 150, [75] = 156, [80] = 162, [85] = 167, [90] = 172 },
	[5]  = { [40] = 103, [45] = 111, [50] = 118, [55] = 125, [60] = 132, [65] = 138, [70] = 144, [75] = 150, [80] = 155, [85] = 160, [90] = 999 },
	[10] = { [40] = 102, [45] = 110, [50] = 117, [55] = 124, [60] = 131, [65] = 137, [70] = 143, [75] = 148, [80] = 999, [85] = 999, [90] = 999 },
	[15] = { [40] = 100, [45] = 107, [50] = 115, [55] = 121, [60] = 128, [65] = 134, [70] = 140, [75] = 145, [80] = 999, [85] = 999, [90] = 999 },
	[25] = { [40] =  98, [45] = 105, [50] = 112, [55] = 119, [60] = 125, [65] = 131, [70] = 137, [75] = 142, [80] = 999, [85] = 999, [90] = 999 }
		},
	[22] = {
	[1]  = { [40] = 108, [44] = 115, [48] = 121, [52] = 127, [56] = 133, [60] = 139, [64] = 144, [68] = 149, [72] = 154, [76] = 158, [80] = 163 },
	[5]  = { [40] = 104, [44] = 111, [48] = 116, [52] = 122, [56] = 128, [60] = 133, [64] = 138, [68] = 143, [72] = 147, [76] = 152, [80] = 156 },
	[10] = { [40] = 103, [44] = 109, [48] = 115, [52] = 121, [56] = 126, [60] = 132, [64] = 137, [68] = 141, [72] = 146, [76] = 999, [80] = 999 },
	[15] = { [40] = 101, [44] = 107, [48] = 113, [52] = 118, [56] = 124, [60] = 129, [64] = 134, [68] = 138, [72] = 142, [76] = 999, [80] = 999 },
	[25] = { [40] =  99, [44] = 105, [48] = 110, [52] = 116, [56] = 121, [60] = 126, [64] = 131, [68] = 999, [72] = 999, [76] = 999, [80] = 999 }
		}
	}

-- v2_dry [xxK] [flaps] [weight kg]
v2_dry =
	{
	[26] = {
	[1]  = { [40] = 125, [45] = 131, [50] = 137, [55] = 143, [60] = 148, [65] = 153, [70] = 158, [75] = 162, [80] = 167, [85] = 171, [90] = 175 },
	[5]  = { [40] = 120, [45] = 126, [50] = 132, [55] = 137, [60] = 143, [65] = 147, [70] = 152, [75] = 156, [80] = 160, [85] = 164, [90] = 168 },
	[10] = { [40] = 119, [45] = 125, [50] = 130, [55] = 136, [60] = 141, [65] = 146, [70] = 150, [75] = 154, [80] = 158, [85] = 162, [90] = 999 },
	[15] = { [40] = 117, [45] = 122, [50] = 128, [55] = 133, [60] = 138, [65] = 143, [70] = 147, [75] = 151, [80] = 155, [85] = 999, [90] = 999 },
	[25] = { [40] = 115, [45] = 120, [50] = 126, [55] = 131, [60] = 136, [65] = 140, [70] = 145, [75] = 149, [80] = 153, [85] = 999, [90] = 999 }
		},
	[24] = {
	[1]  = { [40] = 124, [45] = 130, [50] = 136, [55] = 142, [60] = 147, [65] = 152, [70] = 157, [75] = 161, [80] = 166, [85] = 170, [90] = 174 },
	[5]  = { [40] = 119, [45] = 125, [50] = 131, [55] = 136, [60] = 142, [65] = 147, [70] = 151, [75] = 155, [80] = 159, [85] = 163, [90] = 999 },
	[10] = { [40] = 118, [45] = 124, [50] = 129, [55] = 135, [60] = 140, [65] = 145, [70] = 149, [75] = 153, [80] = 999, [85] = 999, [90] = 999 },
	[15] = { [40] = 116, [45] = 121, [50] = 127, [55] = 132, [60] = 137, [65] = 142, [70] = 146, [75] = 150, [80] = 999, [85] = 999, [90] = 999 },
	[25] = { [40] = 114, [45] = 119, [50] = 125, [55] = 130, [60] = 135, [65] = 139, [70] = 144, [75] = 148, [80] = 999, [85] = 999, [90] = 999 }
		},
	[22] = {
	[1]  = { [40] = 123, [44] = 128, [48] = 133, [52] = 138, [56] = 142, [60] = 147, [64] = 151, [68] = 155, [72] = 158, [76] = 162, [80] = 165 },
	[5]  = { [40] = 118, [44] = 123, [48] = 128, [52] = 132, [56] = 137, [60] = 141, [64] = 145, [68] = 149, [72] = 152, [76] = 156, [80] = 159 },
	[10] = { [40] = 117, [44] = 122, [48] = 126, [52] = 131, [56] = 135, [60] = 139, [64] = 143, [68] = 147, [72] = 150, [76] = 999, [80] = 999 },
	[15] = { [40] = 115, [44] = 119, [48] = 124, [52] = 128, [56] = 132, [60] = 136, [64] = 140, [68] = 144, [72] = 147, [76] = 999, [80] = 999 },
	[25] = { [40] = 113, [44] = 117, [48] = 122, [52] = 126, [56] = 130, [60] = 134, [64] = 138, [68] = 999, [72] = 999, [76] = 999, [80] = 999 }
		}
	}

-- v1_adj_dry [xxK] [OAT C] [alt ft]
v1_adj_dry =
	{
	[26] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  2, [6000] =  3, [8000] =  4, [10000] =  5 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  2, [6000] =  3, [8000] =  4, [10000] =  5 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  2, [6000] =  4, [8000] =  5, [10000] =  6 },
	[40]  = { [-2000] =  1, [0] =  1, [2000] =  3, [4000] =  4, [6000] =  5, [8000] =  6, [10000] =  7 },
	[50]  = { [-2000] =  2, [0] =  3, [2000] =  4, [4000] =  5, [6000] =  6, [8000] =  7, [10000] =  9 },
	[60]  = { [-2000] =  4, [0] =  5, [2000] =  6, [4000] =  7, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] =  5, [0] =  6, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		},
	[24] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  1, [6000] =  2, [8000] =  3, [10000] =  4 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  1, [6000] =  2, [8000] =  4, [10000] =  5 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  3, [6000] =  4, [8000] =  5, [10000] =  6 },
	[40]  = { [-2000] =  1, [0] =  2, [2000] =  3, [4000] =  4, [6000] =  5, [8000] =  6, [10000] =  7 },
	[50]  = { [-2000] =  2, [0] =  3, [2000] =  4, [4000] =  5, [6000] =  6, [8000] =  7, [10000] =  8 },
	[60]  = { [-2000] =  4, [0] =  5, [2000] =  5, [4000] =  6, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] =  5, [0] =  6, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		},
	[22] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  0, [4000] =  1, [6000] =  2, [8000] =  2, [10000] =  3 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  0, [4000] =  1, [6000] =  2, [8000] =  3, [10000] =  5 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  2, [6000] =  3, [8000] =  5, [10000] =  6 },
	[40]  = { [-2000] =  1, [0] =  2, [2000] =  3, [4000] =  4, [6000] =  5, [8000] =  6, [10000] =  7 },
	[50]  = { [-2000] =  2, [0] =  3, [2000] =  4, [4000] =  5, [6000] =  6, [8000] =  7, [10000] =  8 },
	[60]  = { [-2000] =  4, [0] =  4, [2000] =  5, [4000] =  6, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] =  5, [0] =  5, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		}
	}

-- vr_adj_dry [xxK] [OAT C] [alt ft]
vr_adj_dry =
	{
	[26] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  2, [6000] =  3, [8000] =  4, [10000] =  5 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  2, [6000] =  3, [8000] =  4, [10000] =  5 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  3, [6000] =  4, [8000] =  5, [10000] =  6 },
	[40]  = { [-2000] =  1, [0] =  1, [2000] =  3, [4000] =  4, [6000] =  5, [8000] =  6, [10000] =  7 },
	[50]  = { [-2000] =  2, [0] =  3, [2000] =  4, [4000] =  5, [6000] =  6, [8000] =  7, [10000] =  8 },
	[60]  = { [-2000] =  3, [0] =  4, [2000] =  5, [4000] =  6, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] =  4, [0] =  5, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		},
	[24] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  1, [6000] =  2, [8000] =  3, [10000] =  4 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  1, [6000] =  2, [8000] =  4, [10000] =  5 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  2, [6000] =  4, [8000] =  5, [10000] =  6 },
	[40]  = { [-2000] =  1, [0] =  2, [2000] =  3, [4000] =  4, [6000] =  5, [8000] =  6, [10000] =  7 },
	[50]  = { [-2000] =  2, [0] =  3, [2000] =  4, [4000] =  5, [6000] =  6, [8000] =  7, [10000] =  8 },
	[60]  = { [-2000] =  3, [0] =  4, [2000] =  5, [4000] =  6, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] =  5, [0] =  5, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		},
	[22] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  1, [6000] =  2, [8000] =  3, [10000] =  3 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  1, [6000] =  2, [8000] =  3, [10000] =  5 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  2, [6000] =  3, [8000] =  5, [10000] =  6 },
	[40]  = { [-2000] =  1, [0] =  2, [2000] =  3, [4000] =  4, [6000] =  5, [8000] =  6, [10000] =  7 },
	[50]  = { [-2000] =  2, [0] =  3, [2000] =  4, [4000] =  5, [6000] =  6, [8000] =  7, [10000] =  8 },
	[60]  = { [-2000] =  4, [0] =  4, [2000] =  5, [4000] =  6, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] =  5, [0] =  5, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		}
	}

-- v2_adj_dry [xxK] [OAT C] [alt ft]
v2_adj_dry =
	{
	[26] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] = -1, [4000] = -1, [6000] = -2, [8000] = -2, [10000] = -3 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] = -1, [4000] = -1, [6000] = -2, [8000] = -3, [10000] = -3 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] = -1, [4000] = -2, [6000] = -2, [8000] = -3, [10000] = -4 },
	[40]  = { [-2000] = -1, [0] = -1, [2000] = -2, [4000] = -2, [6000] = -3, [8000] = -4, [10000] = -5 },
	[50]  = { [-2000] = -2, [0] = -2, [2000] = -3, [4000] = -3, [6000] = -4, [8000] = -5, [10000] = -6 },
	[60]  = { [-2000] = -2, [0] = -3, [2000] = -3, [4000] = -4, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] = -3, [0] = -3, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		},
	[24] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  0, [4000] = -1, [6000] = -1, [8000] = -1, [10000] = -2 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  0, [4000] = -1, [6000] = -1, [8000] = -2, [10000] = -3 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] = -1, [4000] = -1, [6000] = -2, [8000] = -3, [10000] = -4 },
	[40]  = { [-2000] = -1, [0] = -1, [2000] = -2, [4000] = -2, [6000] = -3, [8000] = -4, [10000] = -4 },
	[50]  = { [-2000] = -2, [0] = -2, [2000] = -3, [4000] = -3, [6000] = -4, [8000] = -4, [10000] = -5 },
	[60]  = { [-2000] = -2, [0] = -3, [2000] = -3, [4000] = -4, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] = -3, [0] = -4, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		},
	[22] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  0, [4000] = -1, [6000] = -1, [8000] = -1, [10000] = -2 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  0, [4000] = -1, [6000] = -1, [8000] = -2, [10000] = -3 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] = -1, [4000] = -1, [6000] = -2, [8000] = -3, [10000] = -3 },
	[40]  = { [-2000] = -1, [0] = -1, [2000] = -1, [4000] = -2, [6000] = -3, [8000] = -3, [10000] = -4 },
	[50]  = { [-2000] = -1, [0] = -2, [2000] = -2, [4000] = -3, [6000] = -3, [8000] = -4, [10000] = -5 },
	[60]  = { [-2000] = -2, [0] = -3, [2000] = -3, [4000] = -4, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] = -3, [0] = -3, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		}
	}

-- v1_slope_adj_dry [weight kg] [slope %]
v1_slope_adj_dry =
	{
	[26] = {
	[40] = { [-2] =  0, [-1] =  0, [0] =  0, [1] =  0, [2] =  0 },
	[50] = { [-2] = -1, [-1] =  0, [0] =  0, [1] =  0, [2] =  1 },
	[60] = { [-2] = -2, [-1] = -1, [0] =  0, [1] =  1, [2] =  1 },
	[70] = { [-2] = -2, [-1] = -1, [0] =  0, [1] =  1, [2] =  1 },
	[80] = { [-2] = -3, [-1] = -2, [0] =  0, [1] =  1, [2] =  1 },
	[90] = { [-2] = -4, [-1] = -2, [0] =  0, [1] =  1, [2] =  1 }
		}
	}

-- v1_wind_adj_dry [weight kg] [wind kts]
v1_wind_adj_dry =
	{
	[26] = {
	[40] = { [-15] = -2, [-10] = -1, [-5] =  0, [0] = 0, [10] = 0, [20] = 0, [30] = 0, [40] = 0 },
	[50] = { [-15] = -2, [-10] = -1, [-5] =  0, [0] = 0, [10] = 0, [20] = 1, [30] = 1, [40] = 1 },
	[60] = { [-15] = -2, [-10] = -1, [-5] = -1, [0] = 0, [10] = 0, [20] = 1, [30] = 1, [40] = 1 },
	[70] = { [-15] = -2, [-10] = -1, [-5] = -1, [0] = 0, [10] = 0, [20] = 1, [30] = 1, [40] = 1 },
	[80] = { [-15] = -2, [-10] = -1, [-5] = -1, [0] = 0, [10] = 0, [20] = 0, [30] = 1, [40] = 1 },
	[90] = { [-15] = -2, [-10] = -2, [-5] = -1, [0] = 0, [10] = 0, [20] = 0, [30] = 0, [40] = 1 }
		}
	}


-- WET
-- v1_wet [flaps] [weight kg]
v1_wet =
	{
	[26] = {
	[1]  = { [40] =  96, [45] = 104, [50] = 111, [55] = 119, [60] = 126, [65] = 133, [70] = 139, [75] = 145, [80] = 151, [85] = 157, [90] = 164 },
	[5]  = { [40] =  92, [45] =  99, [50] = 107, [55] = 114, [60] = 121, [65] = 127, [70] = 133, [75] = 139, [80] = 145, [85] = 150, [90] = 156 },
	[10] = { [40] =  91, [45] =  99, [50] = 106, [55] = 113, [60] = 120, [65] = 127, [70] = 133, [75] = 139, [80] = 145, [85] = 151, [90] = 999 },
	[15] = { [40] =  89, [45] =  96, [50] = 104, [55] = 111, [60] = 117, [65] = 124, [70] = 130, [75] = 136, [80] = 141, [85] = 999, [90] = 999 },
	[25] = { [40] =  87, [45] =  95, [50] = 102, [55] = 109, [60] = 115, [65] = 122, [70] = 128, [75] = 134, [80] = 140, [85] = 999, [90] = 999 }
		},
	[24] = {
	[1]  = { [40] =  98, [45] = 107, [50] = 114, [55] = 122, [60] = 129, [65] = 136, [70] = 142, [75] = 149, [80] = 155, [85] = 161, [90] = 167 },
	[5]  = { [40] =  94, [45] = 102, [50] = 109, [55] = 116, [60] = 123, [65] = 130, [70] = 136, [75] = 142, [80] = 148, [85] = 154, [90] = 999 },
	[10] = { [40] =  93, [45] = 101, [50] = 109, [55] = 116, [60] = 123, [65] = 129, [70] = 136, [75] = 142, [80] = 999, [85] = 999, [90] = 999 },
	[15] = { [40] =  92, [45] =  99, [50] = 106, [55] = 113, [60] = 120, [65] = 127, [70] = 133, [75] = 139, [80] = 999, [85] = 999, [90] = 999 },
	[25] = { [40] =  90, [45] =  97, [50] = 104, [55] = 111, [60] = 118, [65] = 125, [70] = 131, [75] = 137, [80] = 999, [85] = 999, [90] = 999 }
		},
	[22] = {
	[1]  = { [40] = 100, [44] = 107, [48] = 113, [52] = 119, [56] = 125, [60] = 131, [64] = 136, [68] = 142, [72] = 147, [76] = 152, [80] = 157 },
	[5]  = { [40] =  96, [44] = 102, [48] = 108, [52] = 114, [56] = 120, [60] = 125, [64] = 131, [68] = 136, [72] = 141, [76] = 146, [80] = 150 },
	[10] = { [40] =  95, [44] = 102, [48] = 108, [52] = 113, [56] = 119, [60] = 125, [64] = 130, [68] = 136, [72] = 141, [76] = 999, [80] = 999 },
	[15] = { [40] =  93, [44] =  99, [48] = 105, [52] = 111, [56] = 116, [60] = 122, [64] = 127, [68] = 133, [72] = 138, [76] = 999, [80] = 999 },
	[25] = { [40] =  92, [44] =  98, [48] = 103, [52] = 109, [56] = 115, [60] = 120, [64] = 126, [68] = 999, [72] = 999, [76] = 999, [80] = 999 }
		}
	}

-- vr_wet [flaps] [weight kg]
vr_wet =
	{
	[26] = {
	[1]  = { [40] = 106, [45] = 114, [50] = 122, [55] = 129, [60] = 136, [65] = 143, [70] = 149, [75] = 155, [80] = 160, [85] = 166, [90] = 171 },
	[5]  = { [40] = 102, [45] = 110, [50] = 117, [55] = 124, [60] = 131, [65] = 137, [70] = 143, [75] = 148, [80] = 154, [85] = 159, [90] = 163 },
	[10] = { [40] = 101, [45] = 108, [50] = 116, [55] = 123, [60] = 129, [65] = 136, [70] = 141, [75] = 147, [80] = 152, [85] = 157, [90] = 999 },
	[15] = { [40] =  99, [45] = 106, [50] = 113, [55] = 120, [60] = 126, [65] = 133, [70] = 138, [75] = 144, [80] = 149, [85] = 999, [90] = 999 },
	[25] = { [40] =  97, [45] = 104, [50] = 111, [55] = 118, [60] = 124, [65] = 130, [70] = 136, [75] = 141, [80] = 146, [85] = 999, [90] = 999 }
		},
	[24] = {
	[1]  = { [40] = 108, [45] = 116, [50] = 123, [55] = 131, [60] = 138, [65] = 144, [70] = 150, [75] = 156, [80] = 162, [85] = 167, [90] = 172 },
	[5]  = { [40] = 103, [45] = 111, [50] = 118, [55] = 125, [60] = 132, [65] = 138, [70] = 144, [75] = 150, [80] = 155, [85] = 160, [90] = 999 },
	[10] = { [40] = 102, [45] = 110, [50] = 117, [55] = 124, [60] = 131, [65] = 137, [70] = 143, [75] = 148, [80] = 999, [85] = 999, [90] = 999 },
	[15] = { [40] = 100, [45] = 107, [50] = 115, [55] = 121, [60] = 128, [65] = 134, [70] = 140, [75] = 145, [80] = 999, [85] = 999, [90] = 999 },
	[25] = { [40] =  98, [45] = 105, [50] = 112, [55] = 119, [60] = 125, [65] = 131, [70] = 137, [75] = 142, [80] = 999, [85] = 999, [90] = 999 }
		},
	[22] = {
	[1]  = { [40] = 108, [44] = 115, [48] = 121, [52] = 127, [56] = 133, [60] = 139, [64] = 144, [68] = 149, [72] = 154, [76] = 158, [80] = 163 },
	[5]  = { [40] = 104, [44] = 111, [48] = 116, [52] = 122, [56] = 128, [60] = 133, [64] = 138, [68] = 143, [72] = 147, [76] = 152, [80] = 156 },
	[10] = { [40] = 103, [44] = 109, [48] = 115, [52] = 121, [56] = 126, [60] = 132, [64] = 137, [68] = 141, [72] = 146, [76] = 999, [80] = 999 },
	[15] = { [40] = 101, [44] = 107, [48] = 113, [52] = 118, [56] = 124, [60] = 129, [64] = 134, [68] = 138, [72] = 142, [76] = 999, [80] = 999 },
	[25] = { [40] =  99, [44] = 105, [48] = 110, [52] = 116, [56] = 121, [60] = 126, [64] = 131, [68] = 999, [72] = 999, [76] = 999, [80] = 999 }
		}
	}

-- v2_wet [flaps] [weight kg]
v2_wet =
	{
	[26] = {
	[1]  = { [40] = 125, [45] = 131, [50] = 137, [55] = 143, [60] = 148, [65] = 153, [70] = 158, [75] = 162, [80] = 167, [85] = 171, [90] = 175 },
	[5]  = { [40] = 120, [45] = 126, [50] = 132, [55] = 137, [60] = 143, [65] = 147, [70] = 152, [75] = 156, [80] = 160, [85] = 164, [90] = 168 },
	[10] = { [40] = 119, [45] = 125, [50] = 130, [55] = 136, [60] = 141, [65] = 146, [70] = 150, [75] = 154, [80] = 158, [85] = 162, [90] = 999 },
	[15] = { [40] = 117, [45] = 122, [50] = 128, [55] = 133, [60] = 138, [65] = 143, [70] = 147, [75] = 151, [80] = 155, [85] = 999, [90] = 999 },
	[25] = { [40] = 115, [45] = 120, [50] = 126, [55] = 131, [60] = 136, [65] = 140, [70] = 145, [75] = 149, [80] = 153, [85] = 999, [90] = 999 }
		},
	[24] = {
	[1]  = { [40] = 124, [45] = 130, [50] = 136, [55] = 142, [60] = 147, [65] = 152, [70] = 157, [75] = 161, [80] = 166, [85] = 170, [90] = 174 },
	[5]  = { [40] = 119, [45] = 125, [50] = 131, [55] = 136, [60] = 142, [65] = 147, [70] = 151, [75] = 155, [80] = 159, [85] = 163, [90] = 999 },
	[10] = { [40] = 118, [45] = 124, [50] = 129, [55] = 135, [60] = 140, [65] = 145, [70] = 149, [75] = 153, [80] = 999, [85] = 999, [90] = 999 },
	[15] = { [40] = 116, [45] = 121, [50] = 127, [55] = 132, [60] = 137, [65] = 142, [70] = 146, [75] = 150, [80] = 999, [85] = 999, [90] = 999 },
	[25] = { [40] = 114, [45] = 119, [50] = 125, [55] = 130, [60] = 135, [65] = 139, [70] = 144, [75] = 148, [80] = 999, [85] = 999, [90] = 999 }
		},
	[22] = {
	[1]  = { [40] = 123, [44] = 128, [48] = 133, [52] = 138, [56] = 142, [60] = 147, [64] = 151, [68] = 155, [72] = 158, [76] = 162, [80] = 165 },
	[5]  = { [40] = 118, [44] = 123, [48] = 128, [52] = 132, [56] = 137, [60] = 141, [64] = 145, [68] = 149, [72] = 152, [76] = 156, [80] = 159 },
	[10] = { [40] = 117, [44] = 122, [48] = 126, [52] = 131, [56] = 135, [60] = 139, [64] = 143, [68] = 147, [72] = 150, [76] = 999, [80] = 999 },
	[15] = { [40] = 115, [44] = 119, [48] = 124, [52] = 128, [56] = 132, [60] = 136, [64] = 140, [68] = 144, [72] = 147, [76] = 999, [80] = 999 },
	[25] = { [40] = 113, [44] = 117, [48] = 122, [52] = 126, [56] = 130, [60] = 134, [64] = 138, [68] = 999, [72] = 999, [76] = 999, [80] = 999 }
		}
	}

-- v1_adj_wet [xxK] [OAT C] [alt ft]
v1_adj_wet =
	{
	[26] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  2, [6000] =  4, [8000] =  5, [10000] =  7 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  2, [6000] =  4, [8000] =  5, [10000] =  6 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  3, [6000] =  4, [8000] =  6, [10000] =  7 },
	[40]  = { [-2000] =  1, [0] =  2, [2000] =  3, [4000] =  4, [6000] =  6, [8000] =  7, [10000] =  9 },
	[50]  = { [-2000] =  3, [0] =  4, [2000] =  5, [4000] =  6, [6000] =  8, [8000] =  9, [10000] = 12 },
	[60]  = { [-2000] =  5, [0] =  6, [2000] =  7, [4000] =  9, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] =  7, [0] =  8, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		},
	[24] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  1, [6000] =  2, [8000] =  3, [10000] =  4 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  1, [6000] =  2, [8000] =  4, [10000] =  5 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  3, [6000] =  4, [8000] =  6, [10000] =  7 },
	[40]  = { [-2000] =  1, [0] =  2, [2000] =  3, [4000] =  5, [6000] =  6, [8000] =  7, [10000] =  9 },
	[50]  = { [-2000] =  3, [0] =  4, [2000] =  5, [4000] =  7, [6000] =  8, [8000] = 10, [10000] = 11 },
	[60]  = { [-2000] =  5, [0] =  6, [2000] =  8, [4000] =  9, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] =  8, [0] =  8, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		},
	[22] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  0, [4000] =  1, [6000] =  2, [8000] =  3, [10000] =  4 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  0, [4000] =  1, [6000] =  2, [8000] =  4, [10000] =  5 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  2, [6000] =  4, [8000] =  6, [10000] =  7 },
	[40]  = { [-2000] =  1, [0] =  2, [2000] =  3, [4000] =  4, [6000] =  6, [8000] =  8, [10000] =  9 },
	[50]  = { [-2000] =  4, [0] =  4, [2000] =  5, [4000] =  6, [6000] =  8, [8000] = 10, [10000] = 11 },
	[60]  = { [-2000] =  6, [0] =  6, [2000] =  7, [4000] =  9, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] =  8, [0] =  8, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		}
	}

-- vr_adj_wet [xxK] [OAT C] [alt ft]
vr_adj_wet =
	{
	[26] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  2, [6000] =  3, [8000] =  4, [10000] =  5 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  2, [6000] =  3, [8000] =  4, [10000] =  5 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  3, [6000] =  4, [8000] =  5, [10000] =  6 },
	[40]  = { [-2000] =  1, [0] =  1, [2000] =  3, [4000] =  4, [6000] =  5, [8000] =  6, [10000] =  7 },
	[50]  = { [-2000] =  2, [0] =  3, [2000] =  4, [4000] =  5, [6000] =  6, [8000] =  7, [10000] =  8 },
	[60]  = { [-2000] =  3, [0] =  4, [2000] =  5, [4000] =  6, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] =  4, [0] =  5, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		},
	[24] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  1, [6000] =  2, [8000] =  3, [10000] =  4 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  1, [6000] =  2, [8000] =  4, [10000] =  5 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  3, [6000] =  4, [8000] =  5, [10000] =  6 },
	[40]  = { [-2000] =  1, [0] =  2, [2000] =  3, [4000] =  4, [6000] =  5, [8000] =  6, [10000] =  7 },
	[50]  = { [-2000] =  2, [0] =  3, [2000] =  4, [4000] =  5, [6000] =  6, [8000] =  7, [10000] =  8 },
	[60]  = { [-2000] =  3, [0] =  4, [2000] =  5, [4000] =  6, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] =  5, [0] =  5, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		},
	[22] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  1, [6000] =  2, [8000] =  3, [10000] =  3 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  1, [6000] =  2, [8000] =  3, [10000] =  5 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] =  1, [4000] =  2, [6000] =  3, [8000] =  5, [10000] =  6 },
	[40]  = { [-2000] =  1, [0] =  2, [2000] =  3, [4000] =  4, [6000] =  5, [8000] =  6, [10000] =  7 },
	[50]  = { [-2000] =  2, [0] =  3, [2000] =  4, [4000] =  5, [6000] =  6, [8000] =  7, [10000] =  8 },
	[60]  = { [-2000] =  4, [0] =  4, [2000] =  5, [4000] =  6, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] =  5, [0] =  5, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		}
	}

-- v2_adj_wet [xxK] [OAT C] [alt ft]
v2_adj_wet =
	{
	[26] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] = -1, [4000] = -1, [6000] = -2, [8000] = -2, [10000] = -3 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] = -1, [4000] = -1, [6000] = -2, [8000] = -3, [10000] = -3 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] = -1, [4000] = -2, [6000] = -2, [8000] = -3, [10000] = -4 },
	[40]  = { [-2000] = -1, [0] = -1, [2000] = -2, [4000] = -2, [6000] = -3, [8000] = -4, [10000] = -5 },
	[50]  = { [-2000] = -2, [0] = -2, [2000] = -3, [4000] = -3, [6000] = -4, [8000] = -5, [10000] = -6 },
	[60]  = { [-2000] = -2, [0] = -3, [2000] = -3, [4000] = -4, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] = -3, [0] = -3, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		},
	[24] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  0, [4000] = -1, [6000] = -1, [8000] = -1, [10000] = -2 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  0, [4000] = -1, [6000] = -1, [8000] = -2, [10000] = -3 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] = -1, [4000] = -1, [6000] = -2, [8000] = -3, [10000] = -4 },
	[40]  = { [-2000] = -1, [0] = -1, [2000] = -2, [4000] = -2, [6000] = -3, [8000] = -4, [10000] = -4 },
	[50]  = { [-2000] = -2, [0] = -2, [2000] = -3, [4000] = -3, [6000] = -4, [8000] = -4, [10000] = -5 },
	[60]  = { [-2000] = -2, [0] = -3, [2000] = -3, [4000] = -4, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] = -3, [0] = -4, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		},
	[22] = {
	[-60] = { [-2000] =  0, [0] =  0, [2000] =  0, [4000] = -1, [6000] = -1, [8000] = -1, [10000] = -2 },
	[20]  = { [-2000] =  0, [0] =  0, [2000] =  0, [4000] = -1, [6000] = -1, [8000] = -2, [10000] = -3 },
	[30]  = { [-2000] =  0, [0] =  0, [2000] = -1, [4000] = -1, [6000] = -2, [8000] = -3, [10000] = -3 },
	[40]  = { [-2000] = -1, [0] = -1, [2000] = -1, [4000] = -2, [6000] = -3, [8000] = -3, [10000] = -4 },
	[50]  = { [-2000] = -1, [0] = -2, [2000] = -2, [4000] = -3, [6000] = -3, [8000] = -4, [10000] = -5 },
	[60]  = { [-2000] = -2, [0] = -3, [2000] = -3, [4000] = -4, [6000] = 99, [8000] = 99, [10000] = 99 },
	[70]  = { [-2000] = -3, [0] = -3, [2000] = 99, [4000] = 99, [6000] = 99, [8000] = 99, [10000] = 99 }
		}
	}

-- v1_slope_adj_wet [xxK] [weight kg] [slope %]
v1_slope_adj_wet =
	{
	[26] = {
	[40] = { [-2] = -1, [-1] =  0, [0] =  0, [1] =  1, [2] =  2 },
	[50] = { [-2] = -2, [-1] = -1, [0] =  0, [1] =  1, [2] =  3 },
	[60] = { [-2] = -3, [-1] = -1, [0] =  0, [1] =  2, [2] =  3 },
	[70] = { [-2] = -4, [-1] = -2, [0] =  0, [1] =  2, [2] =  4 },
	[80] = { [-2] = -5, [-1] = -2, [0] =  0, [1] =  3, [2] =  5 },
	[90] = { [-2] = -5, [-1] = -3, [0] =  0, [1] =  3, [2] =  6 }
		}
	}

-- v1_wind_adj_wet [xxK] [weight kg] [wind kts]
v1_wind_adj_wet =
	{
	[26] = {
	[40] = { [-15] = -5, [-10] = -3, [-5] = -1, [0] = 0, [10] = 1, [20] = 3, [30] = 4, [40] = 5 },
	[50] = { [-15] = -4, [-10] = -3, [-5] = -1, [0] = 0, [10] = 1, [20] = 2, [30] = 3, [40] = 4 },
	[60] = { [-15] = -4, [-10] = -3, [-5] = -1, [0] = 0, [10] = 1, [20] = 2, [30] = 2, [40] = 3 },
	[70] = { [-15] = -4, [-10] = -2, [-5] = -1, [0] = 0, [10] = 1, [20] = 1, [30] = 2, [40] = 3 },
	[80] = { [-15] = -4, [-10] = -2, [-5] = -1, [0] = 0, [10] = 1, [20] = 2, [30] = 2, [40] = 3 },
	[90] = { [-15] = -3, [-10] = -2, [-5] = -1, [0] = 0, [10] = 1, [20] = 2, [30] = 2, [40] = 3 }
		}
	}

-------------
-- V1 MCG  --
-------------

-- v1_mcg [OAT C] [alt ft]
v1_mcg = 
	{
	[-60] = { [-2000] = 106, [0] = 105, [2000] = 102, [4000] =  99, [6000] =  95, [8000] =  92, [10000] =  89 },
	[20]  = { [-2000] = 104, [0] = 104, [2000] = 101, [4000] =  98, [6000] =  94, [8000] =  90, [10000] =  87 },
	[30]  = { [-2000] = 104, [0] = 103, [2000] = 100, [4000] =  96, [6000] =  92, [8000] =  88, [10000] =  85 },
	[40]  = { [-2000] = 101, [0] =  99, [2000] =  96, [4000] =  93, [6000] =  89, [8000] =  86, [10000] =  83 },
	[50]  = { [-2000] =  97, [0] =  95, [2000] =  92, [4000] =  90, [6000] = 999, [8000] = 999, [10000] = 999 },
	[60]  = { [-2000] =  95, [0] =  93, [2000] =  92, [4000] =  90, [6000] = 999, [8000] = 999, [10000] = 999 },
	[70]  = { [-2000] =  95, [0] =  93, [2000] = 999, [4000] = 999, [6000] = 999, [8000] = 999, [10000] = 999 }
	}


------------------
-- STAB TRIM    --
------------------

-- stab_trim_idx [xxK]
stab_trim_idx = 
	{
	[26] = { 11, 6, 8, 9, 11, 16, 21, 26, 30, 32, 34, 36 },
	[24] = { 10, 6, 8, 10, 16, 21, 26, 30, 32, 34, 36 },
	[22] = { 10, 6, 8, 10, 16, 21, 26, 30, 33, 35, 36 }
	}

-- stab_trim_1 [weight kg] [C.G. %MAC] for flaps 1 and 5
stab_trim_1 =
	{
	[26] = {
	[40] = { [6] = 6.00, [8] = 5.75, [9] = 5.50, [11] = 5.50, [16] = 4.75, [21] = 4.00, [26] = 3.50, [30] = 3.00, [32] = 2.50, [34] = 2.50, [36] = 2.25 },
	[45] = { [6] = 6.00, [8] = 5.75, [9] = 5.50, [11] = 5.50, [16] = 4.75, [21] = 4.00, [26] = 3.50, [30] = 3.00, [32] = 2.50, [34] = 2.50, [36] = 2.25 },
	[50] = { [6] = 6.50, [8] = 6.00, [9] = 6.00, [11] = 5.75, [16] = 5.00, [21] = 4.50, [26] = 3.75, [30] = 3.25, [32] = 3.00, [34] = 2.75, [36] = 2.25 },
	[55] = { [6] = 6.75, [8] = 6.50, [9] = 6.50, [11] = 6.25, [16] = 5.50, [21] = 4.75, [26] = 4.25, [30] = 3.50, [32] = 3.25, [34] = 3.00, [36] = 2.75 },
	[60] = { [6] = 7.25, [8] = 7.00, [9] = 6.75, [11] = 6.50, [16] = 5.75, [21] = 5.00, [26] = 4.25, [30] = 3.75, [32] = 3.50, [34] = 3.25, [36] = 2.75 },
	[65] = { [6] = 7.75, [8] = 7.25, [9] = 7.00, [11] = 6.75, [16] = 6.00, [21] = 5.25, [26] = 4.50, [30] = 4.00, [32] = 3.75, [34] = 3.25, [36] = 3.00 },
	[70] = { [6] = 8.00, [8] = 7.75, [9] = 7.50, [11] = 7.25, [16] = 6.25, [21] = 5.50, [26] = 4.75, [30] = 4.25, [32] = 3.75, [34] = 3.50, [36] = 3.25 },
	[75] = { [6] = 8.25, [8] = 8.00, [9] = 7.75, [11] = 7.50, [16] = 6.50, [21] = 5.75, [26] = 5.00, [30] = 4.50, [32] = 4.00, [34] = 3.75, [36] = 3.50 },
	[80] = { [6] = 8.50, [8] = 8.50, [9] = 8.25, [11] = 7.75, [16] = 6.75, [21] = 6.00, [26] = 5.25, [30] = 4.50, [32] = 4.25, [34] = 4.00, [36] = 3.50 },
	[85] = { [6] = 8.50, [8] = 8.50, [9] = 8.50, [11] = 8.25, [16] = 7.00, [21] = 6.25, [26] = 5.50, [30] = 4.75, [32] = 4.50, [34] = 4.25, [36] = 3.75 }
		}
	}

-- stab_trim_10 [weight kg] [C.G. %MAC] for flaps 10, 15 and 25
stab_trim_10 =
	{
	[26] = {
	[40] = { [6] = 5.00, [8] = 4.75, [9] = 4.50, [11] = 4.50, [16] = 3.50, [21] = 2.75, [26] = 2.25, [30] = 2.25, [32] = 2.25, [34] = 2.25, [36] = 2.25 },
	[45] = { [6] = 5.00, [8] = 4.75, [9] = 4.50, [11] = 4.50, [16] = 3.50, [21] = 2.75, [26] = 2.25, [30] = 2.25, [32] = 2.25, [34] = 2.25, [36] = 2.25 },
	[50] = { [6] = 6.00, [8] = 5.75, [9] = 5.50, [11] = 5.00, [16] = 4.00, [21] = 3.25, [26] = 2.50, [30] = 2.25, [32] = 2.25, [34] = 2.25, [36] = 2.25 },
	[55] = { [6] = 7.00, [8] = 6.50, [9] = 6.25, [11] = 5.75, [16] = 4.50, [21] = 3.75, [26] = 2.75, [30] = 2.25, [32] = 2.25, [34] = 2.25, [36] = 2.25 },
	[60] = { [6] = 7.75, [8] = 7.00, [9] = 6.75, [11] = 6.25, [16] = 4.75, [21] = 4.00, [26] = 3.00, [30] = 2.25, [32] = 2.25, [34] = 2.25, [36] = 2.25 },
	[65] = { [6] = 8.25, [8] = 7.75, [9] = 7.50, [11] = 6.75, [16] = 5.25, [21] = 4.25, [26] = 3.25, [30] = 2.50, [32] = 2.25, [34] = 2.25, [36] = 2.25 },
	[70] = { [6] = 8.50, [8] = 8.25, [9] = 8.25, [11] = 7.25, [16] = 5.50, [21] = 4.50, [26] = 3.50, [30] = 2.75, [32] = 2.50, [34] = 2.25, [36] = 2.25 },
	[75] = { [6] = 8.50, [8] = 8.50, [9] = 8.50, [11] = 7.75, [16] = 5.75, [21] = 4.75, [26] = 3.75, [30] = 3.00, [32] = 2.50, [34] = 2.25, [36] = 2.25 },
	[80] = { [6] = 8.50, [8] = 8.50, [9] = 8.50, [11] = 8.50, [16] = 6.00, [21] = 5.00, [26] = 4.00, [30] = 3.75, [32] = 2.75, [34] = 2.50, [36] = 2.25 },
	[85] = { [6] = 8.50, [8] = 8.50, [9] = 8.50, [11] = 8.50, [16] = 6.50, [21] = 5.50, [26] = 4.25, [30] = 3.50, [32] = 3.00, [34] = 2.50, [36] = 2.25 }
		}
	}



-------------
-- VREF    --
-------------

-- vref_calc [flaps] [weight kg]
vref_calc = 
	{
	[15] = { [40] = 121, [45] = 128, [50] = 136, [55] = 143, [60] = 149, [65] = 156, [70] = 161, [75] = 167, [80] = 172, [85] = 177 },
	[30] = { [40] = 115, [45] = 122, [50] = 129, [55] = 136, [60] = 142, [65] = 148, [70] = 153, [75] = 158, [80] = 163, [85] = 168 },
	[40] = { [40] = 108, [45] = 115, [50] = 122, [55] = 128, [60] = 135, [65] = 141, [70] = 146, [75] = 151, [80] = 155, [85] = 160 }
	}


-------------
-- TAKEOFF --
-------------

-- Takeoff thrust %N1
-- takeoff_thrust = [xxK] [OAT C] [alt ft] -> pack: on, engine and wing anti-ice: on or off
takeoff_thrust =
	{
	-- 26K
	[26] = {
	[60] = { 	[-2000] = 94.8, [-1000] = 95.4, [0] = 95.8, [1000] = 95.9, [2000] = 96.0, [3000] = 96.1, [4000] = 96.2,
				[5000] = 96.3, [6000] = 96.2, [7000] = 95.9, [8000] = 95.8, [9000] = 95.7, [10000] = 95.7 },
	[55] = { 	[-2000] = 95.4, [-1000] = 96.0, [0] = 96.5, [1000] = 96.6, [2000] = 96.7, [3000] = 96.8, [4000] = 96.9,
				[5000] = 97.1, [6000] = 96.9, [7000] = 96.6, [8000] = 96.3, [9000] = 95.7, [10000] = 95.0 },
	[50] = { 	[-2000] = 96.0, [-1000] = 96.6, [0] = 97.1, [1000] = 97.3, [2000] = 97.4, [3000] = 97.6, [4000] = 97.7,
				[5000] = 97.8, [6000] = 97.7, [7000] = 97.4, [8000] = 97.1, [9000] = 96.6, [10000] = 96.1 },
	[45] = { 	[-2000] = 96.8, [-1000] = 97.4, [0] = 97.8, [1000] = 98.0, [2000] = 98.1, [3000] = 98.3, [4000] = 98.4,
				[5000] = 98.5, [6000] = 98.4, [7000] = 98.1, [8000] = 97.8, [9000] = 97.5, [10000] = 97.1 },
	[40] = { 	[-2000] = 97.4, [-1000] = 98.1, [0] = 98.6, [1000] = 98.7, [2000] = 98.8, [3000] = 98.9, [4000] = 99.0,
				[5000] = 99.2, [6000] = 99.1, [7000] = 98.8, [8000] = 98.5, [9000] = 98.4, [10000] = 98.1 },
	[35] = { 	[-2000] = 98.0, [-1000] = 98.7, [0] = 99.4, [1000] = 99.5, [2000] = 99.6, [3000] = 99.7, [4000] = 99.8,
				[5000] = 99.9, [6000] = 99.8, [7000] = 99.5, [8000] = 99.2, [9000] = 99.1, [10000] = 99.0 },
	[30] = { 	[-2000] = 97.6, [-1000] = 98.8, [0] = 100.3, [1000] = 100.3, [2000] = 100.4, [3000] = 100.4, [4000] = 100.5,
				[5000] = 100.5, [6000] = 100.4, [7000] = 100.3, [8000] = 100.0, [9000] = 99.9, [10000] = 99.9 },
	[25] = { 	[-2000] = 96.8, [-1000] = 98.1, [0] =  99.5, [1000] = 100.1, [2000] = 100.7, [3000] = 100.8, [4000] = 100.7,
				[5000] = 100.7, [6000] = 100.7, [7000] = 100.7, [8000] = 100.6, [9000] = 100.6, [10000] = 100.7 },
	[20] = { 	[-2000] = 96.0, [-1000] = 97.3, [0] = 98.8, [1000] = 99.3, [2000] = 99.9, [3000] = 100.2, [4000] = 100.5,
				[5000] = 100.8, [6000] = 100.8, [7000] = 100.9, [8000] = 100.8, [9000] = 100.8, [10000] = 100.8 },
	[15] = { 	[-2000] = 95.2, [-1000] = 96.5, [0] = 98.0, [1000] = 98.6, [2000] = 99.2, [3000] = 99.5, [4000] = 99.8,
				[5000] = 100.1, [6000] = 100.5, [7000] = 100.9, [8000] = 101.1, [9000] = 101.1, [10000] = 101.1 },
	[10] = { 	[-2000] = 94.5, [-1000] = 95.8, [0] = 97.2, [1000] = 97.8, [2000] = 98.4, [3000] = 98.7, [4000] = 99.0,
				[5000] = 99.4, [6000] = 99.7, [7000] = 100.1, [8000] = 100.5, [9000] = 101.0, [10000] = 101.5 },
	[5] = { 	[-2000] = 93.7, [-1000] = 95.0, [0] = 96.4, [1000] = 97.0, [2000] = 97.6, [3000] = 98.0, [4000] = 98.3,
				[5000] = 98.6, [6000] = 99.0, [7000] = 99.4, [8000] = 99.8, [9000] = 100.3, [10000] = 100.7 },
	[0] = { 	[-2000] = 92.9, [-1000] = 94.2, [0] = 95.6, [1000] = 96.3, [2000] = 96.9, [3000] = 97.2, [4000] = 97.5,
				[5000] = 97.9, [6000] = 98.2, [7000] = 98.6, [8000] = 99.0, [9000] = 99.5, [10000] = 100.0 },
	[-5] = { 	[-2000] = 92.0, [-1000] = 93.4, [0] = 94.8, [1000] = 95.5, [2000] = 96.1, [3000] = 96.4, [4000] = 96.7,
				[5000] = 97.1, [6000] = 97.5, [7000] = 97.9, [8000] = 98.3, [9000] = 98.7, [10000] = 99.2 },
	[-10] = { 	[-2000] = 91.2, [-1000] = 92.6, [0] = 94.0, [1000] = 94.7, [2000] = 95.3, [3000] = 95.6, [4000] = 96.0,
				[5000] = 96.3, [6000] = 96.7, [7000] = 97.1, [8000] = 97.5, [9000] = 98.0, [10000] = 98.4 },
	[-15] = { 	[-2000] = 90.4, [-1000] = 91.7, [0] = 93.2, [1000] = 93.9, [2000] = 94.5, [3000] = 94.8, [4000] = 95.2,
				[5000] = 95.6, [6000] = 95.9, [7000] = 96.3, [8000] = 96.7, [9000] = 97.2, [10000] = 97.6 },
	[-20] = { 	[-2000] = 89.6, [-1000] = 90.9, [0] = 92.4, [1000] = 93.0, [2000] = 93.7, [3000] = 94.0, [4000] = 94.4,
				[5000] = 94.8, [6000] = 95.2, [7000] = 95.6, [8000] = 95.9, [9000] = 96.4, [10000] = 96.8 },
	[-25] = { 	[-2000] = 88.7, [-1000] = 90.1, [0] = 91.6, [1000] = 92.2, [2000] = 92.9, [3000] = 93.2, [4000] = 93.6,
				[5000] = 94.0, [6000] = 94.4, [7000] = 94.8, [8000] = 95.2, [9000] = 95.6, [10000] = 96.0 },
	[-30] = { 	[-2000] = 87.9, [-1000] = 89.2, [0] = 90.7, [1000] = 91.4, [2000] = 92.0, [3000] = 92.4, [4000] = 92.8,
				[5000] = 93.2, [6000] = 93.6, [7000] = 94.0, [8000] = 94.3, [9000] = 94.8, [10000] = 95.2 },
	[-35] = { 	[-2000] = 87.0, [-1000] = 88.4, [0] = 89.9, [1000] = 90.5, [2000] = 91.2, [3000] = 91.6, [4000] = 91.9,
				[5000] = 92.4, [6000] = 92.8, [7000] = 93.1, [8000] = 93.5, [9000] = 94.0, [10000] = 94.4 },
	[-40] = { 	[-2000] = 86.1, [-1000] = 87.5, [0] = 89.0, [1000] = 89.7, [2000] = 90.3, [3000] = 90.7, [4000] = 91.1,
				[5000] = 91.5, [6000] = 91.9, [7000] = 92.3, [8000] = 92.7, [9000] = 93.1, [10000] = 93.6 },
	[-45] = { 	[-2000] = 85.3, [-1000] = 86.6, [0] = 88.2, [1000] = 88.8, [2000] = 89.5, [3000] = 89.9, [4000] = 90.3,
				[5000] = 90.7, [6000] = 91.1, [7000] = 91.5, [8000] = 91.9, [9000] = 92.3, [10000] = 92.7 },
	[-50] = { 	[-2000] = 84.4, [-1000] = 85.7, [0] = 87.3, [1000] = 87.9, [2000] = 88.6, [3000] = 89.0, [4000] = 89.4,
				[5000] = 89.9, [6000] = 90.3, [7000] = 90.6, [8000] = 91.0, [9000] = 91.5, [10000] = 91.9 }
			},
	-- 24K
	[24] = {
	[60] = { 	[-2000] = 90.3, [-1000] = 90.8, [0] = 91.2, [1000] = 91.2, [2000] = 91.1, [3000] = 91.1, [4000] = 91.1,
				[5000] = 91.1, [6000] = 91.2, [7000] = 91.0, [8000] = 91.2, [9000] = 91.3, [10000] = 91.4 },
	[55] = { 	[-2000] = 91.0, [-1000] = 91.6, [0] = 92.0, [1000] = 92.0, [2000] = 92.0, [3000] = 91.9, [4000] = 91.9,
				[5000] = 91.9, [6000] = 92.0, [7000] = 91.9, [8000] = 91.7, [9000] = 91.3, [10000] = 90.8 },
	[50] = { 	[-2000] = 91.8, [-1000] = 92.4, [0] = 92.8, [1000] = 92.8, [2000] = 92.8, [3000] = 92.7, [4000] = 92.7,
				[5000] = 92.7, [6000] = 92.7, [7000] = 92.6, [8000] = 92.6, [9000] = 92.2, [10000] = 91.8 },
	[45] = { 	[-2000] = 92.6, [-1000] = 93.2, [0] = 93.6, [1000] = 93.6, [2000] = 93.6, [3000] = 93.6, [4000] = 93.5,
				[5000] = 93.5, [6000] = 93.5, [7000] = 93.4, [8000] = 93.3, [9000] = 93.1, [10000] = 92.8 },
	[40] = { 	[-2000] = 93.4, [-1000] = 94.0, [0] = 94.4, [1000] = 94.4, [2000] = 94.4, [3000] = 94.3, [4000] = 94.3,
				[5000] = 94.2, [6000] = 94.2, [7000] = 94.1, [8000] = 94.1, [9000] = 94.0, [10000] = 93.8 },
	[35] = { 	[-2000] = 94.2, [-1000] = 94.8, [0] = 95.2, [1000] = 95.2, [2000] = 95.2, [3000] = 95.1, [4000] = 95.1,
				[5000] = 95.0, [6000] = 95.0, [7000] = 94.9, [8000] = 94.8, [9000] = 94.8, [10000] = 94.7 },
	[30] = { 	[-2000] = 93.8, [-1000] = 95.0, [0] =  96.1, [1000] =  96.0, [2000] =  96.0, [3000] =  96.0, [4000] =  95.9,
				[5000] =  95.8, [6000] =  95.8, [7000] =  95.7, [8000] =  95.7, [9000] = 95.6, [10000] = 95.6 },
	[25] = { 	[-2000] = 93.1, [-1000] = 94.3, [0] =  95.4, [1000] =  95.9, [2000] =  96.4, [3000] =  96.7, [4000] =  96.7,
				[5000] =  96.8, [6000] =  96.6, [7000] =  96.5, [8000] =  96.4, [9000] =  96.4, [10000] =  96.3 },
	[20] = { 	[-2000] = 92.3, [-1000] = 93.5, [0] = 94.6, [1000] = 95.1, [2000] = 95.7, [3000] =  96.3, [4000] =  96.9,
				[5000] =  97.6, [6000] =  97.5, [7000] =  97.5, [8000] =  97.4, [9000] =  97.3, [10000] =  97.2 },
	[15] = { 	[-2000] = 91.6, [-1000] = 92.7, [0] = 93.8, [1000] = 94.3, [2000] = 94.9, [3000] = 95.5, [4000] = 96.1,
				[5000] =  96.8, [6000] =  97.5, [7000] =  98.2, [8000] =  98.6, [9000] =  98.6, [10000] =  98.5 },
	[10] = { 	[-2000] = 90.8, [-1000] = 92.0, [0] = 93.0, [1000] = 93.6, [2000] = 94.1, [3000] = 94.7, [4000] = 95.3,
				[5000] = 96.0, [6000] = 96.7, [7000] =  97.5, [8000] =  98.2, [9000] =  99.1, [10000] = 100.0 },
	[5] = { 	[-2000] = 90.0, [-1000] = 91.2, [0] = 92.2, [1000] = 92.8, [2000] = 93.3, [3000] = 93.9, [4000] = 94.5,
				[5000] = 95.2, [6000] = 95.9, [7000] = 96.7, [8000] = 97.4, [9000] =  98.4, [10000] =  99.3 },
	[0] = { 	[-2000] = 89.2, [-1000] = 90.4, [0] = 91.4, [1000] = 92.0, [2000] = 92.5, [3000] = 93.1, [4000] = 93.7,
				[5000] = 94.4, [6000] = 95.1, [7000] = 95.9, [8000] = 96.7, [9000] = 97.6, [10000] =  98.5 },
	[-5] = { 	[-2000] = 88.4, [-1000] = 89.6, [0] = 90.6, [1000] = 91.2, [2000] = 91.7, [3000] = 92.3, [4000] = 92.9,
				[5000] = 93.6, [6000] = 94.3, [7000] = 95.1, [8000] = 95.9, [9000] = 96.8, [10000] = 97.7 },
	[-10] = { 	[-2000] = 87.6, [-1000] = 88.8, [0] = 89.8, [1000] = 90.4, [2000] = 90.9, [3000] = 91.5, [4000] = 92.1,
				[5000] = 92.8, [6000] = 93.5, [7000] = 94.3, [8000] = 95.1, [9000] = 96.7, [10000] = 97.0 },
	[-15] = { 	[-2000] = 86.8, [-1000] = 88.0, [0] = 89.0, [1000] = 89.5, [2000] = 90.0, [3000] = 90.6, [4000] = 91.3,
				[5000] = 92.0, [6000] = 92.7, [7000] = 93.5, [8000] = 94.3, [9000] = 95.3, [10000] = 96.2 },
	[-20] = { 	[-2000] = 86.0, [-1000] = 87.1, [0] = 88.2, [1000] = 88.7, [2000] = 89.2, [3000] = 89.8, [4000] = 90.5,
				[5000] = 91.2, [6000] = 91.9, [7000] = 92.6, [8000] = 93.5, [9000] = 94.5, [10000] = 95.4 },
	[-25] = { 	[-2000] = 85.2, [-1000] = 86.3, [0] = 87.3, [1000] = 87.9, [2000] = 88.4, [3000] = 89.0, [4000] = 89.6,
				[5000] = 90.3, [6000] = 91.0, [7000] = 91.8, [8000] = 92.6, [9000] = 93.7, [10000] = 94.6 },
	[-30] = { 	[-2000] = 84.4, [-1000] = 85.5, [0] = 86.5, [1000] = 87.0, [2000] = 87.5, [3000] = 88.1, [4000] = 88.8,
				[5000] = 89.5, [6000] = 90.2, [7000] = 91.0, [8000] = 91.8, [9000] = 92.9, [10000] = 93.8 },
	[-35] = { 	[-2000] = 83.5, [-1000] = 84.6, [0] = 85.6, [1000] = 86.2, [2000] = 86.6, [3000] = 87.3, [4000] = 87.9,
				[5000] = 88.6, [6000] = 89.3, [7000] = 90.1, [8000] = 91.0, [9000] = 92.1, [10000] = 93.0 },
	[-40] = { 	[-2000] = 82.7, [-1000] = 83.8, [0] = 84.8, [1000] = 85.3, [2000] = 85.8, [3000] = 86.4, [4000] = 87.0,
				[5000] = 87.8, [6000] = 88.5, [7000] = 89.3, [8000] = 90.1, [9000] = 91.2, [10000] = 92.2 },
	[-45] = { 	[-2000] = 81.8, [-1000] = 82.9, [0] = 83.9, [1000] = 84.4, [2000] = 84.9, [3000] = 85.5, [4000] = 86.2,
				[5000] = 86.9, [6000] = 87.6, [7000] = 88.4, [8000] = 89.3, [9000] = 90.4, [10000] = 91.4 },
	[-50] = { 	[-2000] = 81.0, [-1000] = 82.0, [0] = 83.0, [1000] = 83.5, [2000] = 84.0, [3000] = 84.6, [4000] = 85.3,
				[5000] = 86.0, [6000] = 86.7, [7000] = 87.5, [8000] = 88.4, [9000] = 89.5, [10000] = 90.5 }
			},
	-- 22K
	[22] = {
	[60] = { 	[-2000] = 87.7, [-1000] = 88.3, [0] = 88.7, [1000] = 88.8, [2000] = 88.9, [3000] = 89.1, [4000] = 89.2,
				[5000] = 89.2, [6000] = 89.1, [7000] = 88.6, [8000] = 88.3, [9000] = 88.7, [10000] = 89.2 },
	[55] = { 	[-2000] = 88.5, [-1000] = 89.1, [0] = 89.5, [1000] = 89.7, [2000] = 89.8, [3000] = 89.9, [4000] = 90.0,
				[5000] = 90.0, [6000] = 90.0, [7000] = 89.5, [8000] = 89.0, [9000] = 88.8, [10000] = 88.6 },
	[50] = { 	[-2000] = 89.3, [-1000] = 89.8, [0] = 90.4, [1000] = 90.5, [2000] = 90.6, [3000] = 90.7, [4000] = 90.9,
				[5000] = 90.8, [6000] = 90.8, [7000] = 90.4, [8000] = 89.9, [9000] = 89.7, [10000] = 89.6 },
	[45] = { 	[-2000] = 90.2, [-1000] = 90.7, [0] = 91.2, [1000] = 91.3, [2000] = 91.4, [3000] = 91.5, [4000] = 91.7,
				[5000] = 91.6, [6000] = 91.6, [7000] = 91.2, [8000] = 90.8, [9000] = 90.7, [10000] = 90.5 },
	[40] = { 	[-2000] = 91.1, [-1000] = 91.6, [0] = 92.1, [1000] = 92.2, [2000] = 92.3, [3000] = 92.4, [4000] = 92.5,
				[5000] = 92.4, [6000] = 92.4, [7000] = 92.1, [8000] = 91.7, [9000] = 91.6, [10000] = 91.5 },
	[35] = { 	[-2000] = 91.9, [-1000] = 92.5, [0] = 93.0, [1000] = 93.1, [2000] = 93.2, [3000] = 93.2, [4000] = 93.3,
				[5000] = 93.3, [6000] = 93.2, [7000] = 92.9, [8000] = 92.5, [9000] = 92.5, [10000] = 92.4 },
	[30] = { 	[-2000] = 91.5, [-1000] = 92.6, [0] =  93.8, [1000] =  93.9, [2000] =  94.0, [3000] =  94.0, [4000] =  94.1,
				[5000] =  94.0, [6000] =  93.9, [7000] =  93.7, [8000] =  93.4, [9000] = 93.3, [10000] = 93.2 },
	[25] = { 	[-2000] = 90.8, [-1000] = 91.9, [0] =  93.1, [1000] =  93.7, [2000] =  94.4, [3000] =  94.8, [4000] =  94.9,
				[5000] =  94.8, [6000] =  94.8, [7000] =  94.4, [8000] =  94.0, [9000] =  94.0, [10000] =  94.0 },
	[20] = { 	[-2000] = 90.0, [-1000] = 91.1, [0] = 92.3, [1000] = 93.0, [2000] = 93.6, [3000] =  94.3, [4000] =  95.0,
				[5000] =  95.6, [6000] =  95.6, [7000] =  95.3, [8000] =  94.9, [9000] =  94.8, [10000] =  94.7 },
	[15] = { 	[-2000] = 89.3, [-1000] = 90.4, [0] = 91.6, [1000] = 92.2, [2000] = 92.8, [3000] = 93.6, [4000] = 94.3,
				[5000] =  94.8, [6000] =  95.3, [7000] =  95.9, [8000] =  96.1, [9000] =  95.9, [10000] =  95.5 },
	[10] = { 	[-2000] = 88.5, [-1000] = 89.6, [0] = 90.8, [1000] = 91.4, [2000] = 92.1, [3000] = 92.8, [4000] = 93.5,
				[5000] = 94.0, [6000] = 94.5, [7000] =  95.1, [8000] =  95.7, [9000] =  96.4, [10000] =  97.1 },
	[5] = { 	[-2000] = 87.8, [-1000] = 88.9, [0] = 90.0, [1000] = 90.7, [2000] = 91.3, [3000] = 92.0, [4000] = 92.7,
				[5000] = 93.2, [6000] = 93.7, [7000] = 94.3, [8000] = 94.9, [9000] =  95.6, [10000] =  96.3 },
	[0] = { 	[-2000] = 87.0, [-1000] = 88.1, [0] = 89.2, [1000] = 89.9, [2000] = 90.5, [3000] = 91.2, [4000] = 91.9,
				[5000] = 92.4, [6000] = 92.9, [7000] = 93.5, [8000] = 94.1, [9000] = 94.8, [10000] =  95.5 },
	[-5] = { 	[-2000] = 86.2, [-1000] = 87.3, [0] = 88.4, [1000] = 89.1, [2000] = 89.7, [3000] = 90.4, [4000] = 91.1,
				[5000] = 91.6, [6000] = 92.1, [7000] = 92.7, [8000] = 93.3, [9000] = 94.0, [10000] = 94.7 },
	[-10] = { 	[-2000] = 85.4, [-1000] = 86.5, [0] = 87.6, [1000] = 88.3, [2000] = 88.9, [3000] = 89.6, [4000] = 90.3,
				[5000] = 90.8, [6000] = 91.3, [7000] = 91.9, [8000] = 92.5, [9000] = 93.2, [10000] = 93.9 },
	[-15] = { 	[-2000] = 84.6, [-1000] = 85.7, [0] = 86.8, [1000] = 87.5, [2000] = 88.1, [3000] = 88.8, [4000] = 89.4,
				[5000] = 90.0, [6000] = 90.5, [7000] = 91.1, [8000] = 91.7, [9000] = 92.4, [10000] = 93.1 },
	[-20] = { 	[-2000] = 83.8, [-1000] = 84.9, [0] = 86.0, [1000] = 86.6, [2000] = 87.3, [3000] = 87.9, [4000] = 88.6,
				[5000] = 89.1, [6000] = 89.7, [7000] = 90.3, [8000] = 90.8, [9000] = 91.6, [10000] = 92.3 },
	[-25] = { 	[-2000] = 83.0, [-1000] = 84.1, [0] = 85.2, [1000] = 85.8, [2000] = 86.4, [3000] = 87.1, [4000] = 87.8,
				[5000] = 88.3, [6000] = 88.8, [7000] = 89.4, [8000] = 90.0, [9000] = 90.7, [10000] = 91.5 },
	[-30] = { 	[-2000] = 82.2, [-1000] = 83.3, [0] = 84.4, [1000] = 85.0, [2000] = 85.6, [3000] = 86.3, [4000] = 86.9,
				[5000] = 87.4, [6000] = 88.0, [7000] = 88.6, [8000] = 89.2, [9000] = 89.9, [10000] = 90.6 },
	[-35] = { 	[-2000] = 81.4, [-1000] = 82.4, [0] = 83.5, [1000] = 84.1, [2000] = 84.7, [3000] = 85.4, [4000] = 86.1,
				[5000] = 86.6, [6000] = 87.1, [7000] = 87.7, [8000] = 88.3, [9000] = 89.0, [10000] = 89.8 },
	[-40] = { 	[-2000] = 80.6, [-1000] = 81.6, [0] = 82.7, [1000] = 83.3, [2000] = 83.9, [3000] = 84.5, [4000] = 85.2,
				[5000] = 85.7, [6000] = 86.2, [7000] = 86.8, [8000] = 87.4, [9000] = 88.2, [10000] = 88.9 },
	[-45] = { 	[-2000] = 79.7, [-1000] = 80.7, [0] = 81.8, [1000] = 82.4, [2000] = 83.0, [3000] = 83.7, [4000] = 84.3,
				[5000] = 84.8, [6000] = 85.3, [7000] = 86.0, [8000] = 86.6, [9000] = 87.3, [10000] = 88.0 },
	[-50] = { 	[-2000] = 78.9, [-1000] = 79.9, [0] = 80.9, [1000] = 81.5, [2000] = 82.1, [3000] = 82.8, [4000] = 83.4,
				[5000] = 83.9, [6000] = 84.5, [7000] = 85.1, [8000] = 85.7, [9000] = 86.4, [10000] = 87.2 }
			}
	}

-- takeoff_adj [alt ft] -> pack: off
takeoff_adj =
	{
	[-2000] = 0.7, [-1000] = 0.7, [0] = 0.7, [1000] = 0.7, [2000] = 0.7, [3000] = 0.7, [4000] = 0.8,
				[5000] = 0.8, [6000] = 0.8, [7000] = 0.8, [8000] = 0.8, [9000] = 0.9, [10000] = 1.0
	}

-- Maximum Assumed Temperature
-- assumed_max_tmp [xxK] [OAT C] [alt ft]
assumed_max_temp =
	{
	-- 26K
	[26] = {
	[55] = { 	[-1000] = 73, [0] = 71, [1000] = 69, [2000] = 67, [3000] = 99, [4000] = 99,
				[5000]  = 99, [6000] = 99, [7000] = 99, [8000] = 99, [9000] = 99, [10000] = 99 },
	[50] = { 	[-1000] = 73, [0] = 71, [1000] = 69, [2000] = 67, [3000] = 65, [4000] = 63,
				[5000]  = 99, [6000] = 99, [7000] = 99, [8000] = 99, [9000] = 99, [10000] = 99 },
	[45] = { 	[-1000] = 73, [0] = 71, [1000] = 69, [2000] = 67, [3000] = 65, [4000] = 63,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 99, [9000] = 99, [10000] = 99 },
	[40] = { 	[-1000] = 73, [0] = 71, [1000] = 69, [2000] = 67, [3000] = 65, [4000] = 63,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 55, [9000] = 99, [10000] = 99 },
	[35] = { 	[-1000] = 71, [0] = 71, [1000] = 69, [2000] = 67, [3000] = 65, [4000] = 63,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 55, [9000] = 53, [10000] = 99 },
	[30] = { 	[-1000] = 69, [0] = 67, [1000] = 67, [2000] = 67, [3000] = 65, [4000] = 63,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 55, [9000] = 53, [10000] = 51 },
	[25] = { 	[-1000] = 69, [0] = 67, [1000] = 66, [2000] = 64, [3000] = 65, [4000] = 63,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 55, [9000] = 53, [10000] = 51 },
	[20] = { 	[-1000] = 69, [0] = 67, [1000] = 66, [2000] = 64, [3000] = 64, [4000] = 63,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 55, [9000] = 53, [10000] = 51 },
	[15] = { 	[-1000] = 69, [0] = 67, [1000] = 66, [2000] = 64, [3000] = 64, [4000] = 63,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 55, [9000] = 53, [10000] = 51 },
	[10] = { 	[-1000] = 69, [0] = 67, [1000] = 66, [2000] = 64, [3000] = 64, [4000] = 63,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 55, [9000] = 53, [10000] = 51 }
		},
	-- 24K
	[24] = {
	[55] = { 	[-1000] = 73, [0] = 71, [1000] = 69, [2000] = 67, [3000] = 99, [4000] = 99,
				[5000]  = 99, [6000] = 99, [7000] = 99, [8000] = 99, [9000] = 99, [10000] = 99 },
	[50] = { 	[-1000] = 73, [0] = 71, [1000] = 69, [2000] = 67, [3000] = 65, [4000] = 63,
				[5000]  = 99, [6000] = 99, [7000] = 99, [8000] = 99, [9000] = 99, [10000] = 99 },
	[45] = { 	[-1000] = 73, [0] = 71, [1000] = 69, [2000] = 67, [3000] = 65, [4000] = 63,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 99, [9000] = 99, [10000] = 99 },
	[40] = { 	[-1000] = 73, [0] = 71, [1000] = 69, [2000] = 67, [3000] = 65, [4000] = 63,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 55, [9000] = 99, [10000] = 99 },
	[35] = { 	[-1000] = 67, [0] = 67, [1000] = 67, [2000] = 67, [3000] = 65, [4000] = 63,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 55, [9000] = 53, [10000] = 99 },
	[30] = { 	[-1000] = 64, [0] = 61, [1000] = 62, [2000] = 61, [3000] = 61, [4000] = 61,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 55, [9000] = 53, [10000] = 51 },
	[25] = { 	[-1000] = 64, [0] = 61, [1000] = 59, [2000] = 57, [3000] = 56, [4000] = 56,
				[5000]  = 57, [6000] = 57, [7000] = 57, [8000] = 55, [9000] = 53, [10000] = 51 },
	[20] = { 	[-1000] = 64, [0] = 61, [1000] = 59, [2000] = 57, [3000] = 56, [4000] = 54,
				[5000]  = 53, [6000] = 53, [7000] = 53, [8000] = 53, [9000] = 52, [10000] = 51 },
	[15] = { 	[-1000] = 64, [0] = 61, [1000] = 59, [2000] = 57, [3000] = 56, [4000] = 54,
				[5000]  = 53, [6000] = 52, [7000] = 50, [8000] = 49, [9000] = 48, [10000] = 47 },
	[10] = { 	[-1000] = 64, [0] = 61, [1000] = 59, [2000] = 57, [3000] = 56, [4000] = 54,
				[5000]  = 53, [6000] = 52, [7000] = 50, [8000] = 48, [9000] = 45, [10000] = 43 }
		},
	-- 22K
	[22] = {
	[55] = { 	[-1000] = 73, [0] = 71, [1000] = 69, [2000] = 67, [3000] = 99, [4000] = 99,
				[5000]  = 99, [6000] = 99, [7000] = 99, [8000] = 99, [9000] = 99, [10000] = 99 },
	[50] = { 	[-1000] = 73, [0] = 71, [1000] = 69, [2000] = 67, [3000] = 65, [4000] = 63,
				[5000]  = 99, [6000] = 99, [7000] = 99, [8000] = 99, [9000] = 99, [10000] = 99 },
	[45] = { 	[-1000] = 73, [0] = 71, [1000] = 69, [2000] = 67, [3000] = 65, [4000] = 63,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 99, [9000] = 99, [10000] = 99 },
	[40] = { 	[-1000] = 72, [0] = 71, [1000] = 69, [2000] = 67, [3000] = 65, [4000] = 63,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 55, [9000] = 99, [10000] = 99 },
	[35] = { 	[-1000] = 66, [0] = 66, [1000] = 66, [2000] = 66, [3000] = 65, [4000] = 63,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 55, [9000] = 53, [10000] = 99 },
	[30] = { 	[-1000] = 63, [0] = 61, [1000] = 61, [2000] = 61, [3000] = 61, [4000] = 61,
				[5000]  = 61, [6000] = 59, [7000] = 57, [8000] = 55, [9000] = 53, [10000] = 51 },
	[25] = { 	[-1000] = 63, [0] = 61, [1000] = 59, [2000] = 57, [3000] = 56, [4000] = 56,
				[5000]  = 56, [6000] = 56, [7000] = 56, [8000] = 55, [9000] = 53, [10000] = 51 },
	[20] = { 	[-1000] = 63, [0] = 61, [1000] = 59, [2000] = 57, [3000] = 55, [4000] = 53,
				[5000]  = 51, [6000] = 51, [7000] = 51, [8000] = 50, [9000] = 50, [10000] = 50 },
	[15] = { 	[-1000] = 63, [0] = 61, [1000] = 59, [2000] = 57, [3000] = 55, [4000] = 53,
				[5000]  = 51, [6000] = 50, [7000] = 47, [8000] = 45, [9000] = 45, [10000] = 45 },
	[10] = { 	[-1000] = 63, [0] = 61, [1000] = 59, [2000] = 57, [3000] = 55, [4000] = 53,
				[5000]  = 51, [6000] = 50, [7000] = 47, [8000] = 45, [9000] = 43, [10000] = 41 }
		}
	}

-- Minimum Assumed Temperature
-- assumed_min_tmp [xxK] [alt ft]
assumed_min_temp =
	{
	-- 26K
	[26] = { 	[-1000] = 32, [0] = 30, [1000] = 28, [2000] = 26, [3000] = 24, [4000] = 22,
				[5000] = 20, [6000] = 18, [7000] = 16, [8000] = 15, [9000] = 12, [10000] = 10 },
	-- 24K
	[24] = { 	[-1000] = 32, [0] = 30, [1000] = 28, [2000] = 26, [3000] = 24, [4000] = 22,
				[5000] = 20, [6000] = 18, [7000] = 16, [8000] = 15, [9000] = 12, [10000] = 10 },
	-- 22K
	[22] = { 	[-1000] = 32, [0] = 30, [1000] = 28, [2000] = 26, [3000] = 24, [4000] = 22,
				[5000] = 20, [6000] = 18, [7000] = 16, [8000] = 15, [9000] = 12, [10000] = 10 }
	}


-- Reduced Takeoff thrust %N1
-- takeoff_thrust_red = [xxK] [Assum temp C] [alt ft] -> pack: on, engine and wing anti-ice: on or off
takeoff_thrust_red = 
	{
	-- 26K
	[26] = {
	[75] = { 	[-1000] = 93.4, [0] = 93.7, [1000] = 94.2, [2000] = 94.7, [3000] = 95.4, [4000] = 96.1,
				[5000] = 96.9, [6000] = 97.3, [7000] = 97.6, [8000] = 97.8, [9000] = 97.8, [10000] = 97.7 },
	[70] = { 	[-1000] = 94.1, [0] = 94.4, [1000] = 94.4, [2000] = 94.4, [3000] = 94.7, [4000] = 95.4,
				[5000] = 96.2, [6000] = 96.6, [7000] = 96.9, [8000] = 97.1, [9000] = 97.1, [10000] = 97.1 },
	[65] = { 	[-1000] = 94.8, [0] = 95.1, [1000] = 95.2, [2000] = 95.2, [3000] = 95.3, [4000] = 95.4,
				[5000] = 95.5, [6000] = 96.0, [7000] = 96.2, [8000] = 96.5, [9000] = 96.4, [10000] = 96.4 },
	[60] = { 	[-1000] = 95.4, [0] = 95.8, [1000] = 95.9, [2000] = 96.0, [3000] = 96.1, [4000] = 96.2,
				[5000] = 96.3, [6000] = 96.2, [7000] = 95.9, [8000] = 95.8, [9000] = 95.7, [10000] = 95.7 },
	[55] = { 	[-1000] = 96.0, [0] = 96.5, [1000] = 96.6, [2000] = 96.7, [3000] = 96.8, [4000] = 96.9,
				[5000] = 97.1, [6000] = 96.9, [7000] = 96.6, [8000] = 96.3, [9000] = 95.7, [10000] = 95.0 },
	[50] = { 	[-1000] = 96.6, [0] = 97.1, [1000] = 97.3, [2000] = 97.4, [3000] = 97.6, [4000] = 97.7,
				[5000] = 97.8, [6000] = 97.7, [7000] = 97.4, [8000] = 97.1, [9000] = 96.6, [10000] = 96.1 },
	[45] = { 	[-1000] = 97.4, [0] = 97.8, [1000] = 98.0, [2000] = 98.1, [3000] = 98.3, [4000] = 98.4,
				[5000] = 98.5, [6000] = 98.4, [7000] = 98.1, [8000] = 97.8, [9000] = 97.5, [10000] = 97.1 },
	[40] = { 	[-1000] = 98.1, [0] = 98.6, [1000] = 98.7, [2000] = 98.8, [3000] = 98.9, [4000] = 99.0,
				[5000] = 99.2, [6000] = 99.1, [7000] = 98.8, [8000] = 98.5, [9000] = 98.4, [10000] = 98.1 },
	[35] = { 	[-1000] = 98.7, [0] = 99.4, [1000] = 99.5, [2000] = 99.6, [3000] = 99.7, [4000] = 99.8,
				[5000] = 99.9, [6000] = 99.8, [7000] = 99.5, [8000] = 99.2, [9000] = 99.1, [10000] = 99.0 },
	[30] = { 	[-1000] = 98.8, [0] = 100.3, [1000] = 100.3, [2000] = 100.4, [3000] = 100.4, [4000] = 100.5,
				[5000] = 100.5, [6000] = 100.4, [7000] = 100.3, [8000] = 100.0, [9000] = 99.9, [10000] = 99.9 },
	[25] = { 	[-1000] = 98.1, [0] = 99.5, [1000] = 100.1, [2000] = 100.7, [3000] = 100.8, [4000] = 100.7,
				[5000] = 100.7, [6000] = 100.7, [7000] = 100.7, [8000] = 100.6, [9000] = 100.6, [10000] = 100.7 },
	[20] = { 	[-1000] = 97.3, [0] = 98.8, [1000] = 99.3, [2000] = 99.9, [3000] = 100.2, [4000] = 100.5,
				[5000] = 100.8, [6000] = 100.8, [7000] = 100.9, [8000] = 100.8, [9000] = 100.8, [10000] = 100.8 },
	[15] = { 	[-1000] = 96.5, [0] = 98.0, [1000] = 98.6, [2000] = 99.2, [3000] = 99.5, [4000] = 99.8,
				[5000] = 100.1, [6000] = 100.5, [7000] = 100.9, [8000] = 101.1, [9000] = 101.1, [10000] = 101.1 },
	[10] = { 	[-1000] = 95.8, [0] = 97.2, [1000] = 97.8, [2000] = 98.4, [3000] = 98.7, [4000] = 99.0,
				[5000] = 99.4, [6000] = 99.7, [7000] = 100.1, [8000] = 100.5, [9000] = 101.0, [10000] = 101.5 }
		},
	-- 24K
	[24] = {
	[75] = { 	[-1000] = 88.3, [0] = 88.6, [1000] = 89.1, [2000] = 89.6, [3000] = 90.2, [4000] = 90.8,
				[5000] = 91.5, [6000] = 92.2, [7000] = 92.7, [8000] = 93.1, [9000] = 93.3, [10000] = 93.4 },
	[70] = { 	[-1000] = 89.1, [0] = 89.5, [1000] = 89.4, [2000] = 89.3, [3000] = 89.6, [4000] = 90.1,
				[5000] = 90.8, [6000] = 91.6, [7000] = 92.0, [8000] = 92.5, [9000] = 92.6, [10000] = 92.7 },
	[65] = { 	[-1000] = 90.0, [0] = 90.4, [1000] = 90.3, [2000] = 90.2, [3000] = 90.2, [4000] = 90.1,
				[5000] = 90.2, [6000] = 90.9, [7000] = 91.4, [8000] = 91.8, [9000] = 91.9, [10000] = 92.1 },
	[60] = { 	[-1000] = 90.8, [0] = 91.2, [1000] = 91.2, [2000] = 91.1, [3000] = 91.1, [4000] = 91.0,
				[5000] = 91.1, [6000] = 91.2, [7000] = 91.0, [8000] = 91.2, [9000] = 91.3, [10000] = 91.4 },
	[55] = { 	[-1000] = 91.6, [0] = 92.0, [1000] = 92.0, [2000] = 92.0, [3000] = 91.9, [4000] = 91.9,
				[5000] = 91.9, [6000] = 92.0, [7000] = 91.9, [8000] = 91.7, [9000] = 91.3, [10000] = 90.8 },
	[50] = { 	[-1000] = 92.4, [0] = 92.8, [1000] = 92.8, [2000] = 92.8, [3000] = 92.7, [4000] = 92.7,
				[5000] = 92.7, [6000] = 92.7, [7000] = 92.6, [8000] = 92.6, [9000] = 92.2, [10000] = 91.8 },
	[45] = { 	[-1000] = 93.2, [0] = 93.6, [1000] = 93.6, [2000] = 93.6, [3000] = 93.6, [4000] = 93.5,
				[5000] = 93.5, [6000] = 93.5, [7000] = 93.4, [8000] = 93.3, [9000] = 93.1, [10000] = 92.8 },
	[40] = { 	[-1000] = 94.0, [0] = 94.4, [1000] = 94.4, [2000] = 94.4, [3000] = 94.3, [4000] = 94.3,
				[5000] = 94.2, [6000] = 94.2, [7000] = 94.1, [8000] = 94.1, [9000] = 94.0, [10000] = 93.8 },
	[35] = { 	[-1000] = 94.8, [0] = 95.2, [1000] = 95.2, [2000] = 95.2, [3000] = 95.1, [4000] = 95.1,
				[5000] = 95.0, [6000] = 95.0, [7000] = 94.9, [8000] = 94.8, [9000] = 94.8, [10000] = 94.7 },
	[30] = { 	[-1000] = 95.0, [0] =  96.1, [1000] =  96.0, [2000] =  96.0, [3000] =  96.0, [4000] =  95.9,
				[5000] =  95.8, [6000] =  95.8, [7000] =  95.7, [8000] =  95.7, [9000] = 95.6, [10000] = 95.6 },
	[25] = { 	[-1000] = 94.3, [0] = 95.4, [1000] =  95.9, [2000] =  96.4, [3000] =  96.7, [4000] =  96.7,
				[5000] =  96.6, [6000] =  96.6, [7000] =  96.5, [8000] =  96.4, [9000] =  96.4, [10000] =  96.3 },
	[20] = { 	[-1000] = 93.5, [0] = 94.6, [1000] = 95.1, [2000] = 95.7, [3000] =  96.3, [4000] =  96.9,
				[5000] =  97.6, [6000] =  97.5, [7000] =  97.5, [8000] =  97.4, [9000] =  97.3, [10000] =  97.2 },
	[15] = { 	[-1000] = 92.7, [0] = 93.8, [1000] = 94.3, [2000] = 94.9, [3000] = 95.5, [4000] = 96.1,
				[5000] =  96.8, [6000] =  97.5, [7000] =  98.2, [8000] =  98.6, [9000] =  98.6, [10000] =  98.5 },
	[10] = { 	[-1000] = 92.0, [0] = 93.0, [1000] = 93.6, [2000] = 94.1, [3000] = 94.7, [4000] = 95.3,
				[5000] = 96.0, [6000] = 96.7, [7000] =  97.5, [8000] =  98.2, [9000] =  99.1, [10000] = 100.0 }
		},
	-- 22K
	[22] = {
	[75] = { 	[-1000] = 85.7, [0] = 86.0, [1000] = 86.7, [2000] = 87.4, [3000] = 88.2, [4000] = 88.9,
				[5000] = 89.5, [6000] = 90.1, [7000] = 90.2, [8000] = 90.2, [9000] = 90.6, [10000] = 91.1 },
	[70] = { 	[-1000] = 86.6, [0] = 87.0, [1000] = 87.1, [2000] = 87.1, [3000] = 87.5, [4000] = 88.3,
				[5000] = 88.9, [6000] = 89.4, [7000] = 89.5, [8000] = 89.6, [9000] = 90.0, [10000] = 90.4 },
	[65] = { 	[-1000] = 87.4, [0] = 87.8, [1000] = 88.0, [2000] = 88.0, [3000] = 88.2, [4000] = 88.3,
				[5000] = 88.3, [6000] = 88.8, [7000] = 88.9, [8000] = 88.9, [9000] = 89.4, [10000] = 89.8 },
	[60] = { 	[-1000] = 88.3, [0] = 88.7, [1000] = 88.8, [2000] = 88.9, [3000] = 89.1, [4000] = 89.2,
				[5000] = 89.2, [6000] = 89.1, [7000] = 88.6, [8000] = 88.3, [9000] = 88.7, [10000] = 89.2 },
	[55] = { 	[-1000] = 89.1, [0] = 89.5, [1000] = 89.7, [2000] = 89.8, [3000] = 89.9, [4000] = 90.0,
				[5000] = 90.0, [6000] = 90.0, [7000] = 89.5, [8000] = 89.0, [9000] = 88.8, [10000] = 88.6 },
	[50] = { 	[-1000] = 89.8, [0] = 90.4, [1000] = 90.5, [2000] = 90.6, [3000] = 90.7, [4000] = 90.9,
				[5000] = 90.8, [6000] = 90.8, [7000] = 90.4, [8000] = 89.9, [9000] = 89.7, [10000] = 89.6 },
	[45] = { 	[-1000] = 90.7, [0] = 91.2, [1000] = 91.3, [2000] = 91.4, [3000] = 91.5, [4000] = 91.7,
				[5000] = 91.6, [6000] = 91.6, [7000] = 91.2, [8000] = 90.8, [9000] = 90.7, [10000] = 90.5 },
	[40] = { 	[-1000] = 91.6, [0] = 92.1, [1000] = 92.2, [2000] = 92.3, [3000] = 92.4, [4000] = 92.5,
				[5000] = 92.4, [6000] = 92.4, [7000] = 92.1, [8000] = 91.7, [9000] = 91.6, [10000] = 91.5 },
	[35] = { 	[-1000] = 92.5, [0] = 93.0, [1000] = 93.1, [2000] = 93.2, [3000] = 93.2, [4000] = 93.3,
				[5000] = 93.3, [6000] = 93.2, [7000] = 92.9, [8000] = 92.5, [9000] = 92.5, [10000] = 92.4 },
	[30] = { 	[-1000] = 92.6, [0] =  93.8, [1000] =  93.9, [2000] =  94.0, [3000] =  94.0, [4000] =  94.1,
				[5000] =  94.0, [6000] =  93.9, [7000] =  93.7, [8000] =  93.4, [9000] = 93.3, [10000] = 93.2 },
	[25] = { 	[-1000] = 91.9, [0] = 93.1, [1000] =  93.7, [2000] =  94.4, [3000] =  94.8, [4000] =  94.9,
				[5000] =  94.8, [6000] =  94.8, [7000] =  94.4, [8000] =  94.0, [9000] =  94.0, [10000] =  94.0 },
	[20] = { 	[-1000] = 91.1, [0] = 92.3, [1000] = 93.0, [2000] = 93.6, [3000] =  94.3, [4000] =  95.0,
				[5000] =  95.6, [6000] =  95.6, [7000] =  95.3, [8000] =  94.9, [9000] =  94.8, [10000] =  94.7 },
	[15] = { 	[-1000] = 90.4, [0] = 91.6, [1000] = 92.2, [2000] = 92.8, [3000] = 93.6, [4000] = 94.3,
				[5000] =  94.8, [6000] =  95.3, [7000] =  95.9, [8000] =  96.1, [9000] =  95.9, [10000] =  95.5 },
	[10] = { 	[-1000] = 89.6, [0] = 90.8, [1000] = 91.4, [2000] = 92.1, [3000] = 92.8, [4000] = 93.5,
				[5000] = 94.0, [6000] = 94.5, [7000] =  95.1, [8000] =  95.7, [9000] =  96.4, [10000] =  97.1 }
		}
	}


-- takeof_adj_red_idx
takeoff_adj_red_idx = { -40, -20, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55 }


-- takeoff_adj_red = [xxK] [Ass temp - OAT C] [OAT C]
takeoff_adj_red = 
	{
	-- 26K
	[26] = {
	[110] = {	[-40] = 14.9, [-20] = 99, [0] = 99, [5] = 99, [10] = 99, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[100] = {	[-40] = 14.9, [-20] = 10.9, [0] = 99, [5] = 99, [10] = 99, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[90] = {	[-40] = 14.0, [-20] = 11.7, [0] = 99, [5] = 99, [10] = 99, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[80] = {	[-40] = 12.9, [-20] = 11.6, [0] = 7.8, [5] = 99, [10] = 99, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[70] = {	[-40] = 11.2, [-20] = 10.7, [0] = 8.6, [5] = 7.8, [10] = 6.3, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[60] = {	[-40] = 9.2, [-20] = 9.5, [0] = 8.5, [5] = 8.4, [10] = 7.1, [15] = 6.3, [20] = 4.9, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[50] = {	[-40] = 7.8, [-20] = 7.8, [0] = 7.5, [5] = 7.1, [10] = 6.9, [15] = 7.0, [20] = 5.6, [25] = 4.9,
				[30] = 3.4, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[40] = {	[-40] = 99, [-20] = 6.0, [0] = 6.2, [5] = 6.1, [10] = 5.9, [15] = 5.8, [20] = 5.7, [25] = 5.6,
				[30] = 4.7, [35] = 4.4, [40] = 5.3, [45] = 99, [50] = 99, [55] = 99 },
	[30] = {	[-40] = 99, [-20] = 4.6, [0] = 4.6, [5] = 4.6, [10] = 4.6, [15] = 4.5, [20] = 4.4, [25] = 4.3,
				[30] = 4.3, [35] = 4.2, [40] = 4.1, [45] = 4.0, [50] = 3.9, [55] = 99 },
	[20] = {	[-40] = 99, [-20] = 99, [0] = 2.9, [5] = 3.0, [10] = 3.0, [15] = 3.0, [20] = 3.0, [25] = 3.0,
				[30] = 2.9, [35] = 2.9, [40] = 2.8, [45] = 2.8, [50] = 2.7, [55] = 2.6 },
	[10] = {	[-40] = 99, [-20] = 99, [0] = 1.5, [5] = 1.5, [10] = 1.5, [15] = 1.5, [20] = 1.5, [25] = 1.5,
				[30] = 1.5, [35] = 1.5, [40] = 1.4, [45] = 1.4, [50] = 1.4, [55] = 1.4 },
	[0]  = {	[-40] = 99, [-20] = 99, [0] = 0, [5] = 0, [10] = 0, [15] = 0, [20] = 0, [25] = 0,
				[30] = 0, [35] = 0, [40] = 0, [45] = 0, [50] = 0, [55] = 0 }
		},
	-- 24K
	[24] = {
	[110] = {	[-40] = 12.1, [-20] = 99, [0] = 99, [5] = 99, [10] = 99, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[100] = {	[-40] = 11.3, [-20] =  8.5, [0] = 99, [5] = 99, [10] = 99, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[90] = {	[-40] = 11.7, [-20] =  8.9, [0] = 99, [5] = 99, [10] = 99, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[80] = {	[-40] = 12.5, [-20] =  8.0, [0] = 5.5, [5] = 99, [10] = 99, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[70] = {	[-40] = 11.3, [-20] =  8.4, [0] = 5.9, [5] = 5.6, [10] = 4.0, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[60] = {	[-40] = 9.7, [-20] = 9.2, [0] = 4.8, [5] = 4.7, [10] = 4.4, [15] = 4.2, [20] = 2.6, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[50] = {	[-40] = 7.8, [-20] = 7.9, [0] = 5.3, [5] = 3.5, [10] = 3.3, [15] = 3.6, [20] = 3.0, [25] = 2.7,
				[30] = 1.2, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[40] = {	[-40] = 99, [-20] = 6.4, [0] = 6.0, [5] = 5.5, [10] = 3.7, [15] = 3.2, [20] = 3.7, [25] = 3.0,
				[30] = 2.8, [35] = 3.0, [40] = 3.7, [45] = 99, [50] = 99, [55] = 99 },
	[30] = {	[-40] = 99, [-20] = 4.6, [0] = 4.6, [5] = 4.6, [10] = 4.5, [15] = 4.3, [20] = 4.2, [25] = 4.0,
				[30] = 4.1, [35] = 4.0, [40] = 3.9, [45] = 3.8, [50] = 3.7, [55] = 99 },
	[20] = {	[-40] = 99, [-20] = 99, [0] = 3.1, [5] = 3.1, [10] = 3.1, [15] = 3.0, [20] = 2.9, [25] = 2.9,
				[30] = 2.8, [35] = 2.7, [40] = 2.7, [45] = 2.6, [50] = 2.6, [55] = 2.5 },
	[10] = {	[-40] = 99, [-20] = 99, [0] = 1.5, [5] = 1.5, [10] = 1.5, [15] = 1.5, [20] = 1.5, [25] = 1.5,
				[30] = 1.5, [35] = 1.4, [40] = 1.4, [45] = 1.4, [50] = 1.3, [55] = 1.3 },
	[0]  = {	[-40] = 99, [-20] = 99, [0] = 0, [5] = 0, [10] = 0, [15] = 0, [20] = 0, [25] = 0,
				[30] = 0, [35] = 0, [40] = 0, [45] = 0, [50] = 0, [55] = 0 }
		},
	-- 22K
	[22] = {
	[110] = {	[-40] = 11.6, [-20] = 99, [0] = 99, [5] = 99, [10] = 99, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[100] = {	[-40] = 10.3, [-20] =  7.9, [0] = 99, [5] = 99, [10] = 99, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[90] = {	[-40] = 10.8, [-20] =  8.4, [0] = 99, [5] = 99, [10] = 99, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[80] = {	[-40] = 12.2, [-20] =  7.1, [0] = 5.0, [5] = 99, [10] = 99, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[70] = {	[-40] = 11.0, [-20] =  7.6, [0] = 5.4, [5] = 5.2, [10] = 3.5, [15] = 99, [20] = 99, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[60] = {	[-40] = 9.6, [-20] = 9.0, [0] = 4.1, [5] = 4.0, [10] = 3.9, [15] = 3.8, [20] = 2.1, [25] = 99,
				[30] = 99, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[50] = {	[-40] = 8.0, [-20] = 7.7, [0] = 4.5, [5] = 2.8, [10] = 2.6, [15] = 2.7, [20] = 2.6, [25] = 2.4,
				[30] = 0.8, [35] = 99, [40] = 99, [45] = 99, [50] = 99, [55] = 99 },
	[40] = {	[-40] = 99, [-20] = 6.2, [0] = 5.9, [5] = 4.7, [10] = 3.0, [15] = 2.6, [20] = 2.7, [25] = 2.8,
				[30] = 2.6, [35] = 2.5, [40] = 2.9, [45] = 99, [50] = 99, [55] = 99 },
	[30] = {	[-40] = 99, [-20] = 4.7, [0] = 4.6, [5] = 4.5, [10] = 4.4, [15] = 4.2, [20] = 4.1, [25] = 4.0,
				[30] = 4.0, [35] = 3.9, [40] = 3.8, [45] = 3.7, [50] = 3.6, [55] = 99 },
	[20] = {	[-40] = 99, [-20] = 99, [0] = 3.1, [5] = 3.0, [10] = 3.0, [15] = 3.0, [20] = 2.9, [25] = 2.8,
				[30] = 2.7, [35] = 2.7, [40] = 2.6, [45] = 2.6, [50] = 2.5, [55] = 2.4 },
	[10] = {	[-40] = 99, [-20] = 99, [0] = 1.5, [5] = 1.5, [10] = 1.5, [15] = 1.5, [20] = 1.5, [25] = 1.5,
				[30] = 1.4, [35] = 1.4, [40] = 1.4, [45] = 1.3, [50] = 1.3, [55] = 1.3 },
	[0]  = {	[-40] = 99, [-20] = 99, [0] = 0, [5] = 0, [10] = 0, [15] = 0, [20] = 0, [25] = 0,
				[30] = 0, [35] = 0, [40] = 0, [45] = 0, [50] = 0, [55] = 0 }
		}
	}



-- climb_thrust[TAT C][alt ft]
climb_thrust = 
	{
	[60] = { 	[0] = 90.2, [5000] = 90.5, [10000] = 90.4, [15000] = 90.6, [20000] = 90.4, [25000] = 92.1,
				[30000] = 93.8, [35000] = 95.1, [37000] = 95.2, [41000] = 93.5 },
	[55] = { 	[0] = 91.0, [5000] = 91.2, [10000] = 91.3, [15000] = 91.4, [20000] = 90.8, [25000] = 91.5,
				[30000] = 93.1, [35000] = 94.4, [37000] = 94.5, [41000] = 92.8 },
	[50] = { 	[0] = 91.7, [5000] = 92.0, [10000] = 92.1, [15000] = 92.2, [20000] = 91.7, [25000] = 91.5,
				[30000] = 92.4, [35000] = 93.7, [37000] = 93.8, [41000] = 92.1 },
	[45] = { 	[0] = 92.4, [5000] = 92.6, [10000] = 92.8, [15000] = 93.0, [20000] = 92.6, [25000] = 92.4,
				[30000] = 92.4, [35000] = 93.0, [37000] = 93.1, [41000] = 91.4 },
	[40] = { 	[0] = 93.1, [5000] = 93.3, [10000] = 93.6, [15000] = 93.8, [20000] = 93.4, [25000] = 93.2,
				[30000] = 93.2, [35000] = 92.3, [37000] = 92.4, [41000] = 90.7 },
	[35] = { 	[0] = 93.6, [5000] = 94.0, [10000] = 94.3, [15000] = 94.5, [20000] = 94.3, [25000] = 94.0,
				[30000] = 94.0, [35000] = 93.0, [37000] = 92.4, [41000] = 90.8 },
	[30] = { 	[0] = 92.9, [5000] = 94.8, [10000] = 95.0, [15000] = 95.2, [20000] = 95.1, [25000] = 94.8,
				[30000] = 94.7, [35000] = 93.9, [37000] = 93.3, [41000] = 91.8 },
	[25] = { 	[0] = 92.2, [5000] = 94.8, [10000] = 95.7, [15000] = 95.9, [20000] = 95.9, [25000] = 95.5,
				[30000] = 95.4, [35000] = 94.7, [37000] = 94.1, [41000] = 92.8 },
	[20] = { 	[0] = 91.4, [5000] = 94.0, [10000] = 96.5, [15000] = 96.7, [20000] = 96.6, [25000] = 96.2,
				[30000] = 96.1, [35000] = 95.4, [37000] = 94.9, [41000] = 93.7 },
	[15] = { 	[0] = 90.6, [5000] = 93.2, [10000] = 95.9, [15000] = 97.5, [20000] = 97.4, [25000] = 96.9,
				[30000] = 96.7, [35000] = 96.2, [37000] = 95.7, [41000] = 94.6 },
	[10] = { 	[0] = 89.9, [5000] = 92.5, [10000] = 95.1, [15000] = 97.8, [20000] = 98.3, [25000] = 97.7,
				[30000] = 97.4, [35000] = 96.9, [37000] = 96.5, [41000] = 95.6 },
	[5] = { 	[0] = 89.1, [5000] = 91.7, [10000] = 94.3, [15000] = 97.0, [20000] = 99.2, [25000] = 98.6,
				[30000] = 98.1, [35000] = 97.7, [37000] = 97.3, [41000] = 96.5 },
	[0] = { 	[0] = 88.3, [5000] = 90.9, [10000] = 93.5, [15000] = 96.2, [20000] = 98.6, [25000] = 99.6,
				[30000] = 99.1, [35000] = 98.5, [37000] = 98.2, [41000] = 97.5 },
	[-5] = { 	[0] = 87.6, [5000] = 90.1, [10000] = 92.7, [15000] = 95.4, [20000] = 97.8, [25000] = 99.6,
				[30000] = 100.0, [35000] = 99.2, [37000] = 99.0, [41000] = 98.4 },
	[-10] = { 	[0] = 86.8, [5000] = 89.3, [10000] = 91.9, [15000] = 94.6, [20000] = 97.1, [25000] = 98.8,
				[30000] = 100.3, [35000] = 100.2, [37000] = 99.8, [41000] = 99.4 },
	[-15] = { 	[0] = 86.0, [5000] = 88.5, [10000] = 91.0, [15000] = 93.8, [20000] = 96.3, [25000] = 98.0,
				[30000] = 99.6, [35000] = 101.1, [37000] = 100.8, [41000] = 100.4 },
	[-20] = { 	[0] = 85.2, [5000] = 87.6, [10000] = 90.2, [15000] = 93.0, [20000] = 95.5, [25000] = 97.2,
				[30000] = 98.7, [35000] = 100.8, [37000] = 101.3, [41000] = 101.0 },
	[-25] = { 	[0] = 84.3, [5000] = 86.8, [10000] = 89.4, [15000] = 92.2, [20000] = 94.7, [25000] = 96.4,
				[30000] = 97.9, [35000] = 100.0, [37000] = 100.5, [41000] = 100.1 },
	[-30] = { 	[0] = 83.5, [5000] = 86.0, [10000] = 88.5, [15000] = 91.3, [20000] = 93.9, [25000] = 95.6,
				[30000] = 97.1, [35000] = 99.1, [37000] = 99.6, [41000] = 99.3 },
	[-35] = { 	[0] = 82.7, [5000] = 85.1, [10000] = 87.7, [15000] = 90.5, [20000] = 93.1, [25000] = 94.8,
				[30000] = 96.3, [35000] = 98.3, [37000] = 98.8, [41000] = 98.4 },
	[-40] = { 	[0] = 81.8, [5000] = 84.3, [10000] = 86.8, [15000] = 89.6, [20000] = 92.3, [25000] = 93.9,
				[30000] = 95.4, [35000] = 97.4, [37000] = 97.9, [41000] = 97.6 }
	}

-- climb_adj_wing_ice[alt ft]
climb_adj_wing_ice = { [0] = -1.8, [10000] = -2.1, [20000] = -2.5, [30000] = -2.7, [35000] = -3.0, [41000 ] = -3.0 }

-- climb_adj_eng_ice[alt ft]
climb_adj_eng_ice =  { [0] = -0.6, [10000] = -0.8, [20000] = -0.9, [30000] = -0.9, [35000] = -0.8, [41000 ] = -0.8 }


-- ga_thrust[TAT C][alt ft]
ga_thrust = 
	{
	[60] = { 	[-2000] = 95.0, [0] = 96.2, [1000] = 96.8, [2000] = 999, [3000] = 999, [4000] = 999, [5000] = 999,
				[6000] = 999, [7000] = 999, [8000] = 999, [9000] = 999, [10000] = 999 },
	[55] = { 	[-2000] = 95.9, [0] = 96.7, [1000] = 96.6, [2000] = 96.8, [3000] = 97.5, [4000] = 999, [5000] = 999,
				[6000] = 999, [7000] = 999, [8000] = 999, [9000] = 999, [10000] = 999 },
	[50] = { 	[-2000] = 96.6, [0] = 97.6, [1000] = 97.8, [2000] = 97.8, [3000] = 97.7, [4000] = 97.5, [5000] = 98.2,
				[6000] = 98.8, [7000] = 999, [8000] = 999, [9000] = 999, [10000] = 999 },
	[45] = { 	[-2000] = 97.4, [0] = 98.4, [1000] = 98.5, [2000] = 98.6, [3000] = 98.7, [4000] = 98.8, [5000] = 98.7,
				[6000] = 98.5, [7000] = 98.5, [8000] = 99.0, [9000] = 999, [10000] = 999 },
	[40] = { 	[-2000] = 98.0, [0] = 99.1, [1000] = 99.2, [2000] = 99.3, [3000] = 99.4, [4000] = 99.5, [5000] = 99.6,
				[6000] = 99.5, [7000] = 99.1, [8000] = 98.9, [9000] = 98.8, [10000] = 99.1 },
	[35] = { 	[-2000] = 98.1, [0] = 99.9, [1000] = 100.0, [2000] = 100.1, [3000] = 100.1, [4000] = 100.3, [5000] = 100.3,
				[6000] = 100.2, [7000] = 99.9, [8000] = 99.6, [9000] = 99.6, [10000] = 99.5 },
	[30] = { 	[-2000] = 97.3, [0] = 99.8, [1000] = 100.4, [2000] = 100.7, [3000] = 100.7, [4000] = 100.7, [5000] = 100.7,
				[6000] = 100.7, [7000] = 100.6, [8000] = 100.4, [9000] = 100.4, [10000] = 100.3 },
	[25] = { 	[-2000] = 96.6, [0] = 99.1, [1000] = 99.7, [2000] = 100.2, [3000] = 100.6, [4000] = 100.9, [5000] = 100.9,
				[6000] = 100.9, [7000] = 100.9, [8000] = 100.9, [9000] = 100.9, [10000] = 100.8 },
	[20] = { 	[-2000] = 95.8, [0] = 98.3, [1000] = 98.9, [2000] = 99.5, [3000] = 99.8, [4000] = 100.2, [5000] = 100.5,
				[6000] = 100.9, [7000] = 101.0, [8000] = 101.1, [9000] = 101.1, [10000] = 101.0 },
	[15] = { 	[-2000] = 95.0, [0] = 97.5, [1000] = 98.1, [2000] = 98.7, [3000] = 99.1, [4000] = 99.4, [5000] = 99.8,
				[6000] = 100.1, [7000] = 100.5, [8000] = 100.9, [9000] = 101.3, [10000] = 101.2 },
	[10] = { 	[-2000] = 94.2, [0] = 96.8, [1000] = 97.4, [2000] = 98.0, [3000] = 98.3, [4000] = 98.7, [5000] = 99.0,
				[6000] = 99.4, [7000] = 99.8, [8000] = 100.2, [9000] = 100.5, [10000] = 100.9 },
	[5] = { 	[-2000] = 93.4, [0] = 96.0, [1000] = 96.6, [2000] = 97.2, [3000] = 97.6, [4000] = 97.9, [5000] = 98.3,
				[6000] = 98.7, [7000] = 99.0, [8000] = 99.4, [9000] = 99.8, [10000] = 100.2 },
	[0] = { 	[-2000] = 92.6, [0] = 95.2, [1000] = 95.8, [2000] = 96.4, [3000] = 96.8, [4000] = 97.2, [5000] = 97.5,
				[6000] = 97.9, [7000] = 98.3, [8000] = 98.7, [9000] = 99.0, [10000] = 99.4 },
	[-5] = { 	[-2000] = 91.8, [0] = 94.4, [1000] = 95.0, [2000] = 95.6, [3000] = 96.0, [4000] = 96.4, [5000] = 96.8,
				[6000] = 97.2, [7000] = 97.5, [8000] = 97.9, [9000] = 98.3, [10000] = 98.6 },
	[-10] = { 	[-2000] = 91.0, [0] = 93.6, [1000] = 94.2, [2000] = 94.8, [3000] = 95.2, [4000] = 95.6, [5000] = 96.0,
				[6000] = 96.4, [7000] = 96.8, [8000] = 97.1, [9000] = 97.5, [10000] = 97.9 },
	[-15] = { 	[-2000] = 90.2, [0] = 92.8, [1000] = 93.4, [2000] = 94.0, [3000] = 94.4, [4000] = 94.8, [5000] = 95.2,
				[6000] = 95.6, [7000] = 96.0, [8000] = 96.4, [9000] = 96.7, [10000] = 97.1 },
	[-20] = { 	[-2000] = 89.3, [0] = 92.0, [1000] = 92.6, [2000] = 93.2, [3000] = 93.6, [4000] = 94.0, [5000] = 94.4,
				[6000] = 94.8, [7000] = 95.2, [8000] = 95.6, [9000] = 95.9, [10000] = 96.3 },
	[-25] = { 	[-2000] = 88.5, [0] = 91.1, [1000] = 91.8, [2000] = 92.4, [3000] = 92.8, [4000] = 93.2, [5000] = 93.6,
				[6000] = 94.0, [7000] = 94.4, [8000] = 94.8, [9000] = 95.1, [10000] = 95.5 },
	[-30] = { 	[-2000] = 87.6, [0] = 90.3, [1000] = 90.9, [2000] = 91.6, [3000] = 92.0, [4000] = 92.4, [5000] = 92.8,
				[6000] = 93.3, [7000] = 93.6, [8000] = 94.0, [9000] = 94.3, [10000] = 94.7 },
	[-35] = { 	[-2000] = 86.8, [0] = 89.4, [1000] = 90.1, [2000] = 90.7, [3000] = 91.1, [4000] = 91.6, [5000] = 92.0,
				[6000] = 92.4, [7000] = 92.8, [8000] = 93.2, [9000] = 93.5, [10000] = 93.9 },
	[-40] = { 	[-2000] = 85.9, [0] = 88.6, [1000] = 89.2, [2000] = 89.9, [3000] = 90.3, [4000] = 90.7, [5000] = 91.2,
				[6000] = 91.6, [7000] = 92.0, [8000] = 92.4, [9000] = 92.7, [10000] = 93.0 },
	[-45] = { 	[-2000] = 85.0, [0] = 87.7, [1000] = 88.4, [2000] = 89.0, [3000] = 89.4, [4000] = 89.9, [5000] = 90.3,
				[6000] = 90.8, [7000] = 91.2, [8000] = 91.5, [9000] = 91.9, [10000] = 92.2 },
	[-50] = { 	[-2000] = 84.1, [0] = 86.8, [1000] = 87.5, [2000] = 88.2, [3000] = 88.6, [4000] = 89.0, [5000] = 89.5,
				[6000] = 90.0, [7000] = 90.3, [8000] = 90.7, [9000] = 91.0, [10000] = 91.4 }
	}

-- ga_adj_pack_off [alt ft]
ga_adj_pack_off = { [-2000] = 0.7, [0] = 0.8, [1000] = 0.8, [2000] = 0.8, [3000] = 0.8, [4000 ] = 0.9, [5000] = 0.9,
					[6000] = 0.9, [7000] = 0.9, [8000] = 0.9, [9000] = 0.9, [10000] = 0.9 }


-- cruise_thrust [weigth kg] [ alt ft]
cruise_thrust =
	{
	[85] = { [25] = 86.2, [27] = 87.5, [29] = 88.6, [31] = 90.0, [33] = 92.6, [35] = 9999, [37] = 9999, [39] = 9999, [41] = 9999 },
	[80] = { [25] = 84.8, [27] = 86.3, [29] = 87.4, [31] = 88.7, [33] = 90.4, [35] = 94.1, [37] = 9999, [39] = 9999, [41] = 9999 },
	[75] = { [25] = 83.2, [27] = 84.9, [29] = 86.2, [31] = 87.4, [33] = 88.7, [35] = 90.8, [37] = 9999, [39] = 9999, [41] = 9999 },
	[70] = { [25] = 81.5, [27] = 83.2, [29] = 84.8, [31] = 86.1, [33] = 87.2, [35] = 88.7, [37] = 91.8, [39] = 9999, [41] = 9999 },
	[65] = { [25] = 79.7, [27] = 81.3, [29] = 83.0, [31] = 84.6, [33] = 85.9, [35] = 87.1, [37] = 89.1, [39] = 93.4, [41] = 9999 },
	[60] = { [25] = 78.1, [27] = 79.4, [29] = 81.0, [31] = 82.7, [33] = 84.3, [35] = 85.6, [37] = 87.2, [39] = 89.9, [41] = 9999 },
	[55] = { [25] = 76.4, [27] = 77.6, [29] = 78.9, [31] = 80.6, [33] = 82.3, [35] = 83.9, [37] = 85.5, [39] = 87.6, [41] = 90.5 },
	[50] = { [25] = 74.6, [27] = 75.8, [29] = 77.0, [31] = 78.3, [33] = 80.0, [35] = 81.8, [37] = 83.7, [39] = 85.8, [41] = 87.9 },
	[45] = { [25] = 72.3, [27] = 73.8, [29] = 75.0, [31] = 76.2, [33] = 77.5, [35] = 79.2, [37] = 81.3, [39] = 83.8, [41] = 85.8 },
	[40] = { [25] = 69.7, [27] = 71.2, [29] = 72.7, [31] = 74.0, [33] = 75.3, [35] = 76.5, [37] = 78.5, [39] = 81.0, [41] = 83.5 }
	}

-- cruise_opt_alt [weight kg]
cruise_opt_alt = { [85] = 30300, [80] = 31600, [75] = 33000, [70] = 34500, [65] = 36000, [60] = 37700, [55] = 39500, [50] = 41000, [45] = 41000, [40] = 41000 }

-- short trip FL
cruise_short_trip_alt = { [50] = 9000, [70] = 11000, [100] = 13000, [150] = 17000, [185] = 23000, [210] = 25000, [300] = 29000 }


-- cruise_max_alt [ISA C] [weight kg]
cruise_max_alt =
	{
	[10] = { [85] = 32800, [80] = 34400, [75] = 35900, [70] = 37300, [65] = 38700, [60] = 40200, [55] = 41000, [50] = 41000, [45] = 41000, [40] = 41000 },
	[15] = { [85] = 30600, [80] = 32900, [75] = 34800, [70] = 36300, [65] = 37800, [60] = 39200, [55] = 40800, [50] = 41000, [45] = 41000, [40] = 41000 },
	[20] = { [85] = 27500, [80] = 30000, [75] = 32800, [70] = 34900, [65] = 36500, [60] = 38000, [55] = 39500, [50] = 41000, [45] = 41000, [40] = 41000 }
	}

	
--*************************************************************************************--
--** 					            GLOBAL VARIABLES                				 **--
--*************************************************************************************--


max_speed_act = 0
min_speed_act = 0
max_maneuver_speed_act = 340
min_maneuver_speed_act = 0

aircraft_was_on_air = 0
aircraft_was_on_air2 = 0

eng1_N1_cur = 0
eng2_N1_cur = 0
eng1_N2_cur = 0
eng2_N2_cur = 0

eng1_N1_sim_cur = 0
eng1_N2_sim_cur = 0
eng2_N1_sim_cur = 0
eng2_N2_sim_cur = 0
mixture1_cur = 0
mixture2_cur = 0

v1r_bugs_enable = 0

v1 = 0
vr = 0
v2 = 0
vref_15 = 0
vref_30 = 0
vref_40 = 0

min_maneuver_speed_show = 1



--*************************************************************************************--
--** 					            LOCAL VARIABLES                 				 **--
--*************************************************************************************--



--*************************************************************************************--
--** 				             FIND X-PLANE DATAREFS            			    	 **--
--*************************************************************************************--

simDR_startup_running               = find_dataref("sim/operation/prefs/startup_running")

simDR_total_weight			= find_dataref("sim/flightmodel/weight/m_total")

--simDR_flaps_ratio			= find_dataref("sim/flightmodel2/controls/flap1_deploy_ratio")
simDR_flaps_ratio				= find_dataref("sim/cockpit2/controls/flap_handle_deploy_ratio")

simDR_gear_retract			= find_dataref("sim/aircraft/parts/acf_gear_deploy[0]")

simDR_airspeed_pilot		= find_dataref("sim/cockpit2/gauges/indicators/airspeed_kts_pilot")
simDR_mach_no					= find_dataref("sim/flightmodel/misc/machno")

simDR_on_ground_0				= find_dataref("sim/flightmodel2/gear/on_ground[0]")
simDR_on_ground_1				= find_dataref("sim/flightmodel2/gear/on_ground[1]")
simDR_on_ground_2				= find_dataref("sim/flightmodel2/gear/on_ground[2]")
simDR_radio_height_pilot_ft		= find_dataref("sim/cockpit2/gauges/indicators/radio_altimeter_height_ft_pilot")

simDR_airspeed_dial				= find_dataref("sim/cockpit2/autopilot/airspeed_dial_kts_mach")

simDR_eng1_N1					= find_dataref("sim/cockpit2/engine/indicators/N1_percent[0]")
simDR_eng2_N1					= find_dataref("sim/cockpit2/engine/indicators/N1_percent[1]")
simDR_eng1_N2					= find_dataref("sim/cockpit2/engine/indicators/N2_percent[0]")
simDR_eng2_N2					= find_dataref("sim/cockpit2/engine/indicators/N2_percent[1]")

simDR_eng1_egt					= find_dataref("sim/cockpit2/engine/indicators/EGT_deg_C[0]")
simDR_eng2_egt					= find_dataref("sim/cockpit2/engine/indicators/EGT_deg_C[1]")

simDR_eng1_rot_spd				= find_dataref("sim/flightmodel2/engines/engine_rotation_speed_rad_sec[0]")
simDR_eng2_rot_spd				= find_dataref("sim/flightmodel2/engines/engine_rotation_speed_rad_sec[1]")

--simDR_air_temp					= find_dataref("sim/cockpit2/temperature/outside_air_temp_degc")

simDR_idle_speed0			= find_dataref("sim/cockpit2/engine/actuators/idle_speed[0]")
simDR_idle_speed1			= find_dataref("sim/cockpit2/engine/actuators/idle_speed[1]")

simDR_reverser_on_0				= find_dataref("sim/cockpit/warnings/annunciators/reverser_on[0]")
simDR_reverser_on_1				= find_dataref("sim/cockpit/warnings/annunciators/reverser_on[1]")

simDR_engine_mixture1		= find_dataref("sim/cockpit2/engine/actuators/mixture_ratio[0]")
simDR_engine_mixture2		= find_dataref("sim/cockpit2/engine/actuators/mixture_ratio[1]")

simDR_fail_anti_ice				= find_dataref("sim/operation/failures/rel_antice")
simDR_fail_flap					= find_dataref("sim/operation/failures/rel_flap_act")

simDR_throttle_all				= find_dataref("sim/cockpit2/engine/actuators/throttle_ratio_all")

simDR_throttle_eng1				= find_dataref("sim/flightmodel2/engines/throttle_used_ratio[0]")
simDR_throttle_eng2				= find_dataref("sim/flightmodel2/engines/throttle_used_ratio[1]")
simDR_throttle1_use				= find_dataref("sim/flightmodel/engine/ENGN_thro_use[0]")
simDR_throttle2_use				= find_dataref("sim/flightmodel/engine/ENGN_thro_use[1]")



simDR_altitude_pilot			= find_dataref("sim/cockpit2/gauges/indicators/altitude_ft_pilot")
simDR_OAT						= find_dataref("sim/cockpit2/temperature/outside_air_temp_degc")
simDR_TAT						= find_dataref("sim/cockpit2/temperature/outside_air_LE_temp_degc")
simDR_air_density				= find_dataref("sim/weather/sigma")


simDR_elevation_m				= find_dataref("sim/flightmodel/position/elevation")

--*************************************************************************************--
--** 				               FIND X-PLANE COMMANDS                   	    	 **--
--*************************************************************************************--


--*************************************************************************************--
--** 				              FIND CUSTOM DATAREFS             			    	 **--
--*************************************************************************************--

DRblink							= find_dataref("laminar/B738/autopilot/blink")

B738DR_eng1_heat_pos	= find_dataref("laminar/B738/ice/eng1_heat_pos")
B738DR_eng2_heat_pos	= find_dataref("laminar/B738/ice/eng2_heat_pos")
B738DR_wing_heat_pos		= find_dataref("laminar/B738/ice/wing_heat_pos")

B738DR_fms_takeoff_flaps	= find_dataref("laminar/B738/FMS/takeoff_flaps")
B738DR_fms_approach_flaps	= find_dataref("laminar/B738/FMS/approach_flaps")
B738DR_fms_approach_speed		= find_dataref("laminar/B738/FMS/approach_speed")
B738DR_fms_approach_wind_corr	= find_dataref("laminar/B738/FMS/approach_wind_corr")
B738DR_fmc_cruise_alt			= find_dataref("laminar/B738/autopilot/fmc_cruise_alt")

B738DR_fmc_rw_cond			= find_dataref("laminar/B738/FMS/fmc_rw_cond")


B738DR_fms_v1_set			= find_dataref("laminar/B738/FMS/v1_set")
B738DR_fms_vr_set			= find_dataref("laminar/B738/FMS/vr_set")
B738DR_fms_v2_set			= find_dataref("laminar/B738/FMS/v2_set")

B738DR_calc_spd_enable		= find_dataref("laminar/B738/FMS/calc_spd_enable")
B738DR_fmc_gw				= find_dataref("laminar/B738/FMS/fmc_gw")
B738DR_fmc_units			= find_dataref("laminar/B738/FMS/fmc_units")
B738DR_fmc_cg				= find_dataref("laminar/B738/FMS/fmc_cg")
B738DR_fms_N1_to_sel		= find_dataref("laminar/B738/FMS/N1_mode_to_sel")
B738DR_fmc_sel_temp			= find_dataref("laminar/B738/FMS/fmc_sel_temp")
B738DR_fmc_oat_temp			= find_dataref("laminar/B738/FMS/fmc_oat_temp")

B738DR_l_pack_pos			= find_dataref("laminar/B738/air/l_pack_pos")
B738DR_r_pack_pos			= find_dataref("laminar/B738/air/r_pack_pos")

B738DR_flight_phase			= find_dataref("laminar/B738/FMS/flight_phase")

B738DR_mcp_speed_dial		= find_dataref("laminar/B738/autopilot/mcp_speed_dial_kts_mach")

B738DR_isa_dev_c			= find_dataref("laminar/B738/FMS/fmc_isa_dev_c")

B738DR_fpln_dist			= find_dataref("laminar/B738/FMS/fpln_dist")

B738DR_man_v1				= find_dataref("laminar/B738/pfd/vspeed_man_v1")
B738DR_man_vr				= find_dataref("laminar/B738/pfd/vspeed_man_vr")
B738DR_man_vref				= find_dataref("laminar/B738/pfd/vspeed_man_vref")
B738DR_spd_ref 				= find_dataref("laminar/B738/toggle_switch/spd_ref")

B738DR_rw_wind_dir		= find_dataref("laminar/B738/fms/rw_wind_dir")
B738DR_rw_wind_spd		= find_dataref("laminar/B738/fms/rw_wind_spd")
B738DR_rw_slope			= find_dataref("laminar/B738/fms/rw_slope")
B738DR_rw_hdg			= find_dataref("laminar/B738/fms/rw_hdg")


--*************************************************************************************--
--** 				               FIND CUSTOM COMMANDS              			     **--
--*************************************************************************************--

--B738DR_duct_pressure_L	= find_dataref("laminar/B738/indicators/duct_press_L")
--B738DR_duct_pressure_R	= find_dataref("laminar/B738/indicators/duct_press_R")

--*************************************************************************************--
--** 				                X-PLANE DATAREFS            			    	 **--
--*************************************************************************************--



--*************************************************************************************--
--** 				        CREATE READ-ONLY CUSTOM DATAREFS               	         **--
--*************************************************************************************--

-- V1, VR, V2 speed
B738DR_fms_v1			= create_dataref("laminar/B738/FMS/v1", "number")
B738DR_fms_vr			= create_dataref("laminar/B738/FMS/vr", "number")
B738DR_fms_v2			= create_dataref("laminar/B738/FMS/v2", "number")
B738DR_fms_v2_15		= create_dataref("laminar/B738/FMS/v2_15", "number")
B738DR_fms_vref			= create_dataref("laminar/B738/FMS/vref", "number")
B738DR_fms_v1r_bugs		= create_dataref("laminar/B738/FMS/v1r_bugs", "number")
B738DR_fms_v2_bugs		= create_dataref("laminar/B738/FMS/v2_bugs", "number")
B738DR_fms_vref_bugs	= create_dataref("laminar/B738/FMS/vref_bugs", "number")
B738DR_fms_vref_15		= create_dataref("laminar/B738/FMS/vref_15", "number")
B738DR_fms_vref_25		= create_dataref("laminar/B738/FMS/vref_25", "number")
B738DR_fms_vref_30		= create_dataref("laminar/B738/FMS/vref_30", "number")
B738DR_fms_vref_40		= create_dataref("laminar/B738/FMS/vref_40", "number")

B738DR_fms_v1_calc		= create_dataref("laminar/B738/FMS/v1_calc", "number")
B738DR_fms_vr_calc		= create_dataref("laminar/B738/FMS/vr_calc", "number")
B738DR_fms_v2_calc		= create_dataref("laminar/B738/FMS/v2_calc", "number")
B738DR_trim_calc		= create_dataref("laminar/B738/FMS/trim_calc", "number")



-- flaps bugs
B738DR_pfd_flaps_up			= create_dataref("laminar/B738/pfd/flaps_up", "number")
B738DR_pfd_flaps_up_show	= create_dataref("laminar/B738/pfd/flaps_up_show", "number")
B738DR_pfd_flaps_1			= create_dataref("laminar/B738/pfd/flaps_1", "number")
B738DR_pfd_flaps_1_show		= create_dataref("laminar/B738/pfd/flaps_1_show", "number")
B738DR_pfd_flaps_5			= create_dataref("laminar/B738/pfd/flaps_5", "number")
B738DR_pfd_flaps_5_show		= create_dataref("laminar/B738/pfd/flaps_5_show", "number")
B738DR_pfd_flaps_15			= create_dataref("laminar/B738/pfd/flaps_15", "number")
B738DR_pfd_flaps_15_show	= create_dataref("laminar/B738/pfd/flaps_15_show", "number")
B738DR_pfd_spd_80			= create_dataref("laminar/B738/pfd/spd_80", "number")
B738DR_pfd_spd_80_show		= create_dataref("laminar/B738/pfd/spd_80_show", "number")
B738DR_pfd_flaps_2			= create_dataref("laminar/B738/pfd/flaps_2", "number")
B738DR_pfd_flaps_10			= create_dataref("laminar/B738/pfd/flaps_10", "number")

-- red/black tapes
B738DR_pfd_max_speed		= create_dataref("laminar/B738/pfd/max_speed", "number")
B738DR_pfd_min_speed		= create_dataref("laminar/B738/pfd/min_speed", "number")
B738DR_pfd_min_speed_show	= create_dataref("laminar/B738/pfd/min_speed_show", "number")

-- amber lines
B738DR_pfd_max_maneuver_speed		= create_dataref("laminar/B738/pfd/max_maneuver_speed", "number")
B738DR_pfd_max_maneuver_speed_show	= create_dataref("laminar/B738/pfd/max_maneuver_speed_show", "number")
B738DR_pfd_min_maneuver_speed		= create_dataref("laminar/B738/pfd/min_maneuver_speed", "number")
B738DR_pfd_min_maneuver_speed_show	= create_dataref("laminar/B738/pfd/min_maneuver_speed_show", "number")

B738DR_digit_8		= create_dataref("laminar/B738/mcp/digit_8", "number")
B738DR_digit_A		= create_dataref("laminar/B738/mcp/digit_A", "number")

B738DR_eng1_N1		= create_dataref("laminar/B738/engine/indicators/N1_percent_1", "number")
B738DR_eng2_N1		= create_dataref("laminar/B738/engine/indicators/N1_percent_2", "number")
B738DR_eng1_N2		= create_dataref("laminar/B738/engine/indicators/N2_percent_1", "number")
B738DR_eng2_N2		= create_dataref("laminar/B738/engine/indicators/N2_percent_2", "number")

B738DR_eng1_req_N1		= create_dataref("laminar/B738/engine/eng1_req_n1", "number")
B738DR_eng2_req_N1		= create_dataref("laminar/B738/engine/eng2_req_n1", "number")

B738DR_eng1_egt			= create_dataref("laminar/B738/engine/eng1_egt", "number")
B738DR_eng2_egt			= create_dataref("laminar/B738/engine/eng2_egt", "number")

B738DR_eng1_oil_filter_bypass	= create_dataref("laminar/B738/engine/eng1_oil_filter_bypass", "number")
B738DR_eng2_oil_filter_bypass	= create_dataref("laminar/B738/engine/eng2_oil_filter_bypass", "number")

B738DR_pfd_no_vspd	= create_dataref("laminar/B738/pfd/no_vspd", "number")


B738DR_thr_takeoff_N1		= create_dataref("laminar/B738/engine/calc/thr_takeoff_N1", "number")
B738DR_thr_climb_N1			= create_dataref("laminar/B738/engine/calc/thr_climb_N1", "number")
B738DR_thr_cruise_N1		= create_dataref("laminar/B738/engine/calc/thr_cruise_N1", "number")
B738DR_thr_cont_N1			= create_dataref("laminar/B738/engine/calc/thr_cont_N1", "number")
B738DR_thr_goaround_N1		= create_dataref("laminar/B738/engine/calc/thr_goaround_N1", "number")

B738DR_cruise_opt_alt		= create_dataref("laminar/B738/engine/calc/cruise_opt_alt", "number")
B738DR_cruise_max_alt		= create_dataref("laminar/B738/engine/calc/cruise_max_alt", "number")

spd_of_snd			= create_dataref("laminar/B738/pfd/spd_of_snd", "number")

--B738DR_idle_thrust 			= create_dataref("laminar/B738/engine/idle_thrust", "number")

--*************************************************************************************--
--** 				       READ-WRITE CUSTOM DATAREF HANDLERS     	        	     **--
--*************************************************************************************--


-- function B738DR_fms_takeoff_flaps_DRhandler()end
-- function B738DR_fms_approach_flaps_DRhandler()end
function B738DR_mixture_ratio1_DRhandler()end
function B738DR_mixture_ratio2_DRhandler()end

--function B738DR_idle_thrust_DRhandler()end

-- function B738DR_rw_wind_dir_hand()end
-- function B738DR_rw_wind_spd_hand()end
-- function B738DR_rw_slope_hand()end
-- function B738DR_rw_hdg_hand()end

--*************************************************************************************--
--** 				       CREATE READ-WRITE CUSTOM DATAREFS                         **--
--*************************************************************************************--

-- B738DR_rw_wind_dir		= create_dataref("laminar/B738/fms/rw_wind_dir", "number", B738DR_rw_wind_dir_hand)
-- B738DR_rw_wind_spd		= create_dataref("laminar/B738/fms/rw_wind_spd", "number", B738DR_rw_wind_spd_hand)
-- B738DR_rw_slope			= create_dataref("laminar/B738/fms/rw_slope", "number", B738DR_rw_slope_hand)
-- B738DR_rw_hdg			= create_dataref("laminar/B738/fms/rw_hdg", "number", B738DR_rw_hdg_hand)

-- B738DR_fms_takeoff_flaps	= create_dataref("laminar/B738/FMS/takeoff_flaps", "number", B738DR_fms_takeoff_flaps_DRhandler)
-- B738DR_fms_approach_flaps	= create_dataref("laminar/B738/FMS/approach_flaps", "number", B738DR_fms_approach_flaps_DRhandler)

B738DR_mixture_ratio1	= create_dataref("laminar/B738/engine/mixture_ratio1", "number", B738DR_mixture_ratio1_DRhandler)
B738DR_mixture_ratio2	= create_dataref("laminar/B738/engine/mixture_ratio2", "number", B738DR_mixture_ratio2_DRhandler)

--B738DR_idle_thrust 			= create_dataref("laminar/B738/engine/idle_thrust", "number", B738DR_idle_thrust_DRhandler)

--*************************************************************************************--
--** 				              CUSTOM COMMAND HANDLERS            			     **--
--*************************************************************************************--


-- Engine mixture
function B738_mixture1_cutoff_CMDhandler(phase, duration)
	if phase == 0 then
		B738DR_mixture_ratio1 = 0
	end
end
function B738_mixture2_cutoff_CMDhandler(phase, duration)
	if phase == 0 then
		B738DR_mixture_ratio2 = 0
	end
end
function B738_mixture1_idle_CMDhandler(phase, duration)
	if phase == 0 then
		B738DR_mixture_ratio1 = 1
	end
end
function B738_mixture2_idle_CMDhandler(phase, duration)
	if phase == 0 then
		B738DR_mixture_ratio2 = 1
	end
end
function B738_mixture1_toggle_CMDhandler(phase, duration)
	if phase == 0 then
		if B738DR_mixture_ratio1 == 0 then
			B738DR_mixture_ratio1 = 1
		else
			B738DR_mixture_ratio1 = 0
		end
	end
end
function B738_mixture2_toggle_CMDhandler(phase, duration)
	if phase == 0 then
		if B738DR_mixture_ratio2 == 0 then
			B738DR_mixture_ratio2 = 1
		else
			B738DR_mixture_ratio2 = 0
		end
	end
end


--*************************************************************************************--
--** 				              CREATE CUSTOM COMMANDS              			     **--
--*************************************************************************************--

B738CMD_mixture1_cutoff = create_command("laminar/B738/engine/mixture1_cutoff", "Engine 1 mixture cutoff", B738_mixture1_cutoff_CMDhandler)
B738CMD_mixture2_cutoff = create_command("laminar/B738/engine/mixture2_cutoff", "Engine 2 mixture cutoff", B738_mixture2_cutoff_CMDhandler)
B738CMD_mixture1_idle = create_command("laminar/B738/engine/mixture1_idle", "Engine 1 mixture idle", B738_mixture1_idle_CMDhandler)
B738CMD_mixture2_idle = create_command("laminar/B738/engine/mixture2_idle", "Engine 2 mixture idle", B738_mixture2_idle_CMDhandler)
B738CMD_mixture1_toggle = create_command("laminar/B738/engine/mixture1_toggle", "Engine 1 mixture cutoff/idle", B738_mixture1_toggle_CMDhandler)
B738CMD_mixture2_toggle = create_command("laminar/B738/engine/mixture2_toggle", "Engine 2 mixture cutoff/idle", B738_mixture2_toggle_CMDhandler)


--*************************************************************************************--
--** 				             X-PLANE COMMAND HANDLERS               	    	 **--
--*************************************************************************************--


--*************************************************************************************--
--** 				                 X-PLANE COMMANDS                   	    	 **--
--*************************************************************************************--


--*************************************************************************************--
--** 				              CREATE CUSTOM COMMANDS              			     **--
--*************************************************************************************--



--*************************************************************************************--
--** 					            OBJECT CONSTRUCTORS         		    		 **--
--*************************************************************************************--



--*************************************************************************************--
--** 				               CREATE SYSTEM OBJECTS            				 **--
--*************************************************************************************--



--*************************************************************************************--
--** 				                  SYSTEM FUNCTIONS           	    			 **--
--*************************************************************************************--

----- ANIMATION UTILITY -----------------------------------------------------------------
function B738_set_animation_position(current_value, target, min, max, speed)

    if target >= (max - 0.001) and current_value >= (max - 0.01) then
        return max
    elseif target <= (min + 0.001) and current_value <= (min + 0.01) then
        return min
    else
        return current_value + ((target - current_value) * (speed * SIM_PERIOD))
    end

end

----- RESCALE FLOAT AND CLAMP TO OUTER LIMITS -------------------------------------------
function B738_rescale(in1, out1, in2, out2, x)

    if x < in1 then return out1 end
    if x > in2 then return out2 end
    if in2 - in1 == 0 then return out1 + (out2 - out1) * (x - in1) end
    return out1 + (out2 - out1) * (x - in1) / (in2 - in1)

end

-- ROUNDING ---
function roundUpToIncrement(number, increment)

    local y = number / increment
    local q = math.ceil(y)
    local z = q * increment

    return z

end

function roundDownToIncrement(number, increment)

    local y = number / increment
    local q = math.floor(y)
    local z = q * increment

    return z

end


function Angle180(angle)
    return (angle + 180) % 360
end

------------------------------------------------------------------------------------------



function B738_rpm(rpm, idle, new_idle)

	local k = 102 - idle
	local new_k = 102 - new_idle
	
	if rpm <= idle then
		return rpm / idle * new_idle
	else
		return ((rpm - idle) / k * new_k) + new_idle 
	end

end


function B738_mode_ground()
	aircraft_was_on_air2 = 0
end

function B738_engine_rpm2()

	local eng1_N1 = simDR_eng1_N1
	local eng2_N1 = simDR_eng2_N1
	local eng1_N2 = simDR_eng1_N2
	local eng2_N2 = simDR_eng2_N2
	
--	local idle_thrust = 0
	local req_idle = 0
	local mixture1 = 1.0
	local mixture2 = 1.0
	local req1_idle = 0.0
	local req2_idle = 0.0
	
	if simDR_radio_height_pilot_ft > 400 
	and aircraft_was_on_air2 ==  0 then		-- aircraft above 400 ft RA
		aircraft_was_on_air2 = 1
	end

	local mode_ground = 0
	if simDR_on_ground_0 == 1 or simDR_on_ground_1 == 1 
	or simDR_on_ground_2 == 1 then		-- if aircraft on ground
		if aircraft_was_on_air2 == 0 then
			mode_ground = 1
		else
			if simDR_reverser_on_0 == 1 or simDR_reverser_on_1 == 1 then
				if is_timer_scheduled(B738_mode_ground) == true then
					stop_timer(B738_mode_ground)
				end
			else
				if is_timer_scheduled(B738_mode_ground) == false then
					run_after_time(B738_mode_ground, 5)
				end
			end
		end
	end
	
	local idle_mode = 0		-- 0-ground, 1-flight, 2-approach
	if mode_ground == 0 then
		idle_mode = 1
		if simDR_fail_anti_ice > 0.1 or simDR_fail_flap > 0.1 then		-- fail anti ice or flaps
			if simDR_radio_height_pilot_ft < 15000 then
				idle_mode = 2
			end
		else
			if simDR_flaps_ratio >= 0.625 
			or simDR_gear_retract > 0.98 then		-- flaps >=15 or gear down
				idle_mode = 2
			end
			if B738DR_eng1_heat_pos == 1 and B738DR_eng2_heat_pos == 1 then		-- anti ice engines on
				idle_mode = 2
			end
		end
	end
	
	if idle_mode == 0 then
		if simDR_throttle1_use > 0.50 or simDR_throttle2_use > 0.50 then -- full idle
			idle_mode = 2
			aircraft_was_on_air2 = 1
		end
	end
	if idle_mode == 0 then	-- ground mode
--		req_idle = 0.218
--		idle_thrust = 0.00
		mixture1 = 0.50 * B738DR_mixture_ratio1
		mixture2 = 0.50 * B738DR_mixture_ratio2
	elseif idle_mode == 1 then	-- flight mode
--		idle_thrust = 0.00
--		req_idle = 0.317
		mixture1 = 0.80 * B738DR_mixture_ratio1
		mixture2 = 0.80 * B738DR_mixture_ratio2
	elseif idle_mode == 2 then	-- approach mode
--		idle_thrust = 0.00
--		req_idle = 0.382
		mixture1 = 1.00 * B738DR_mixture_ratio1
		mixture2 = 1.00 * B738DR_mixture_ratio2
	end
	
	-- if idle_mode == 0 then
		-- if simDR_throttle1_use > 0.55 or simDR_throttle2_use > 0.55 then -- full idle
			-- mixture1 = B738DR_mixture_ratio1
			-- mixture2 = B738DR_mixture_ratio2
			-- mixture1_cur = B738_set_animation_position(mixture1_cur, mixture1, 0, 1.0, 1)
			-- mixture2_cur = B738_set_animation_position(mixture2_cur, mixture2, 0, 1.0, 1)
			-- simDR_engine_mixture1 = mixture1_cur
			-- simDR_engine_mixture2 = mixture2_cur
		-- else
			-- mixture1_cur = B738_set_animation_position(mixture1_cur, mixture1, 0, 1.0, 1)
			-- mixture2_cur = B738_set_animation_position(mixture2_cur, mixture2, 0, 1.0, 1)
			-- simDR_engine_mixture1 = mixture1_cur
			-- simDR_engine_mixture2 = mixture2_cur
		-- end
	-- else
		-- if simDR_throttle1_use > 0.2 or simDR_throttle2_use > 0.2 then -- full idle
			-- mixture1 = B738DR_mixture_ratio1
			-- mixture2 = B738DR_mixture_ratio2
			-- mixture1_cur = B738_set_animation_position(mixture1_cur, mixture1, 0, 1.0, 1)
			-- mixture2_cur = B738_set_animation_position(mixture2_cur, mixture2, 0, 1.0, 1)
			-- simDR_engine_mixture1 = mixture1_cur
			-- simDR_engine_mixture2 = mixture2_cur
		-- else
			-- mixture1_cur = B738_set_animation_position(mixture1_cur, mixture1, 0, 1.0, 1)
			-- mixture2_cur = B738_set_animation_position(mixture2_cur, mixture2, 0, 1.0, 1)
			-- simDR_engine_mixture1 = mixture1_cur
			-- simDR_engine_mixture2 = mixture2_cur
		-- end
	-- end

		-- mixture1 = 1.0 * B738DR_mixture_ratio1
		-- mixture2 = 1.0 * B738DR_mixture_ratio2
	mixture1_cur = B738_set_animation_position(mixture1_cur, mixture1, 0, 1.0, 1)
	mixture2_cur = B738_set_animation_position(mixture2_cur, mixture2, 0, 1.0, 1)
	simDR_engine_mixture1 = mixture1_cur
	simDR_engine_mixture2 = mixture2_cur
	
	req_idle = math.max(0.5, mixture1_cur)
	req1_idle = B738_rescale(0.5, 0.218, 1.0, 0.382, req_idle)
	req_idle = math.max(0.5, mixture2_cur)
	req2_idle = B738_rescale(0.5, 0.218, 1.0, 0.382, req_idle)
	B738DR_eng1_req_N1 = B738_rescale(0, req1_idle, 1.04, 1.06, simDR_throttle1_use)
	B738DR_eng2_req_N1 = B738_rescale(0, req2_idle, 1.04, 1.06, simDR_throttle2_use)
	
--	B738DR_idle_thrust = idle_thrust
	
	B738DR_eng1_N1 = eng1_N1
	B738DR_eng2_N1 = eng2_N1
	B738DR_eng1_N2 = eng1_N2
	B738DR_eng2_N2 = eng2_N2

end

function B738_engine_egt()
	--fix EGT temp depend outside temp
	-- if B738DR_eng1_N2 >= 0.1 then
		B738DR_eng1_egt = math.max(simDR_OAT, simDR_eng1_egt)
	-- else
		-- B738DR_eng1_egt = 0
	-- end
	-- if B738DR_eng2_N2 >= 0.1 then
		B738DR_eng2_egt = math.max(simDR_OAT, simDR_eng2_egt)
	-- else
		-- B738DR_eng2_egt = 0
	-- end
	
	-- B738DR_eng1_egt = simDR_eng1_egt
	-- B738DR_eng2_egt = simDR_eng2_egt

end

-- function B738_engine_rpm()

	-- local eng1_N1 = simDR_eng1_N1
	-- local eng2_N1 = simDR_eng2_N1
	-- local eng1_N2 = simDR_eng1_N2
	-- local eng2_N2 = simDR_eng2_N2
	-- local idle_N1 = 21.4
	-- local idle_N2 = 59.8
	-- local idle_N1_sim = 21.4
	-- local idle_N2_sim = 59.8
	-- local eng1_N1_target = 0
	-- local eng2_N1_target = 0
	-- local eng1_N2_target = 0
	-- local eng2_N2_target = 0
	
	-- if simDR_radio_height_pilot_ft > 400 
	-- and aircraft_was_on_air2 ==  0 then		-- aircraft above 400 ft RA
		-- aircraft_was_on_air2 = 1
	-- end

	-- local mode_ground = 0
	-- if simDR_on_ground_0 == 1 or simDR_on_ground_1 == 1 
	-- or simDR_on_ground_2 == 1 then		-- if aircraft on ground
		-- if aircraft_was_on_air2 == 0 then
			-- mode_ground = 1
		-- else
			-- if simDR_reverser_on_0 == 1 or simDR_reverser_on_1 == 1 then
				-- if is_timer_scheduled(B738_mode_ground) == true then
					-- stop_timer(B738_mode_ground)
				-- end
			-- else
				-- if is_timer_scheduled(B738_mode_ground) == false then
					-- run_after_time(B738_mode_ground, 5)
				-- end
			-- end
		-- end
	-- end
	

	-- local idle_mode = 0		-- 0-ground, 1-flight, 2-approach
	-- -- if mode_ground == 1 then
		-- -- if simDR_throttle_all > 0.94 then		-- mode TO
			-- -- --idle_mode = 2
			-- -- idle_mode = 0
		-- -- end
	-- -- else
	-- if mode_ground == 0 then
		-- idle_mode = 1
		-- if simDR_fail_anti_ice > 0.1 or simDR_fail_flap > 0.1 then		-- fail anti ice or flaps
			-- if simDR_radio_height_pilot_ft < 15000 then
				-- idle_mode = 2
			-- end
		-- else
			-- if simDR_flaps_ratio >= 0.374 
			-- or simDR_gear_retract > 0.98 then		-- flaps >=15 or gear down
				-- idle_mode = 2
			-- end
			-- if B738DR_eng1_heat_pos == 1 and B738DR_eng2_heat_pos == 1 then		-- anti ice engines on
				-- idle_mode = 2
			-- end
		-- end
-- --		if simDR_radio_height_pilot_ft < 3000
-- --		and simDR_throttle_eng1 > 0.9
-- --		and simDR_throttle_eng2 > 0.9 then		-- mode GA
-- --		and simDR_throttle_all > 0.94 then		-- mode GA
-- --		idle_mode = 2
-- --		end
	-- end
	
	-- local mixture1 = 1.0
	-- local mixture2 = 1.0
	-- local req1_idle = 0.0
	-- local req2_idle = 0.0
	
	-- if idle_mode == 0 then	-- ground mode
		-- idle_N1 = 22.4
		-- idle_N2 = 60.7
		-- idle_N1_sim = 22.4
		-- idle_N2_sim = 60.7
		-- mixture1 = 0.55 * B738DR_mixture_ratio1
		-- mixture2 = 0.55 * B738DR_mixture_ratio2
	-- elseif idle_mode == 1 then	-- flight mode
		-- idle_N1 = 31.8
		-- idle_N2 = 68.4
		-- idle_N1_sim = 28.4
		-- idle_N2_sim = 65.7
		-- mixture1 = 0.9 * B738DR_mixture_ratio1
		-- mixture2 = 0.9 * B738DR_mixture_ratio2
	-- elseif idle_mode == 2 then	-- approach mode
		-- idle_N1 = 38.7
		-- idle_N2 = 74.3
		-- idle_N1_sim = 30.7
		-- idle_N2_sim = 67.5
		-- mixture1 = 1.0 * B738DR_mixture_ratio1
		-- mixture2 = 1.0 * B738DR_mixture_ratio2
	-- end
	
-- --	if simDR_throttle_eng1 > 0.50 or simDR_throttle_eng2 > 0.50 and idle_mode == 0 then -- ground operations
	-- if idle_mode == 0 then
		-- if simDR_throttle1_use > 0.50 or simDR_throttle2_use > 0.50 then -- full idle
			-- mixture1 = B738DR_mixture_ratio1
			-- mixture2 = B738DR_mixture_ratio2
			-- mixture1_cur = B738_set_animation_position(mixture1_cur, mixture1, 0, 1.0, 1)
			-- mixture2_cur = B738_set_animation_position(mixture2_cur, mixture2, 0, 1.0, 1)
			-- simDR_engine_mixture1 = mixture1_cur
			-- simDR_engine_mixture2 = mixture2_cur

			-- eng1_N1_sim_cur = B738_set_animation_position(eng1_N1_sim_cur, eng1_N1, 0, 105, 1)
			-- eng1_N2_sim_cur = B738_set_animation_position(eng1_N2_sim_cur, eng1_N2, 0, 105, 1)
			-- eng2_N1_sim_cur = B738_set_animation_position(eng2_N1_sim_cur, eng2_N1, 0, 105, 1)
			-- eng2_N2_sim_cur = B738_set_animation_position(eng2_N2_sim_cur, eng2_N2, 0, 105, 1)
			
			-- eng1_N1_cur = B738_set_animation_position(eng1_N1_cur, eng1_N1_sim_cur, 0, 105, 1)
			-- eng2_N1_cur = B738_set_animation_position(eng2_N1_cur, eng2_N1_sim_cur, 0, 105, 1)
			-- eng1_N2_cur = B738_set_animation_position(eng1_N2_cur, eng1_N2_sim_cur, 0, 105, 1)
			-- eng2_N2_cur = B738_set_animation_position(eng2_N2_cur, eng2_N2_sim_cur, 0, 105, 1)
		-- else
			-- mixture1_cur = B738_set_animation_position(mixture1_cur, mixture1, 0, 1.0, 1)
			-- mixture2_cur = B738_set_animation_position(mixture2_cur, mixture2, 0, 1.0, 1)
			-- simDR_engine_mixture1 = mixture1_cur
			-- simDR_engine_mixture2 = mixture2_cur

			-- eng1_N1_target = B738_rpm(eng1_N1, idle_N1_sim, idle_N1)
			-- eng2_N1_target = B738_rpm(eng2_N1, idle_N1_sim, idle_N1)
			-- eng1_N2_target = B738_rpm(eng1_N2, idle_N2_sim, idle_N2)
			-- eng2_N2_target = B738_rpm(eng2_N2, idle_N2_sim, idle_N2)

			-- eng1_N1_cur = B738_set_animation_position(eng1_N1_cur, eng1_N1_target, 0, 105, 1)
			-- eng2_N1_cur = B738_set_animation_position(eng2_N1_cur, eng2_N1_target, 0, 105, 1)
			-- eng1_N2_cur = B738_set_animation_position(eng1_N2_cur, eng1_N2_target, 0, 105, 1)
			-- eng2_N2_cur = B738_set_animation_position(eng2_N2_cur, eng2_N2_target, 0, 105, 1)
			
			-- eng1_N1_sim_cur = eng1_N1_cur
			-- eng1_N2_sim_cur = eng1_N2_cur
			-- eng2_N1_sim_cur = eng2_N1_cur
			-- eng2_N2_sim_cur = eng2_N2_cur
		-- end
	-- elseif idle_mode == 1 then
		-- if simDR_throttle1_use > 0.20 or simDR_throttle2_use > 0.20 then -- full idle
			-- mixture1 = B738DR_mixture_ratio1
			-- mixture2 = B738DR_mixture_ratio2
			-- mixture1_cur = B738_set_animation_position(mixture1_cur, mixture1, 0, 1.0, 1)
			-- mixture2_cur = B738_set_animation_position(mixture2_cur, mixture2, 0, 1.0, 1)
			-- simDR_engine_mixture1 = mixture1_cur
			-- simDR_engine_mixture2 = mixture2_cur

			-- eng1_N1_sim_cur = B738_set_animation_position(eng1_N1_sim_cur, eng1_N1, 0, 105, 1)
			-- eng1_N2_sim_cur = B738_set_animation_position(eng1_N2_sim_cur, eng1_N2, 0, 105, 1)
			-- eng2_N1_sim_cur = B738_set_animation_position(eng2_N1_sim_cur, eng2_N1, 0, 105, 1)
			-- eng2_N2_sim_cur = B738_set_animation_position(eng2_N2_sim_cur, eng2_N2, 0, 105, 1)
			
			-- eng1_N1_cur = B738_set_animation_position(eng1_N1_cur, eng1_N1_sim_cur, 0, 105, 1)
			-- eng2_N1_cur = B738_set_animation_position(eng2_N1_cur, eng2_N1_sim_cur, 0, 105, 1)
			-- eng1_N2_cur = B738_set_animation_position(eng1_N2_cur, eng1_N2_sim_cur, 0, 105, 1)
			-- eng2_N2_cur = B738_set_animation_position(eng2_N2_cur, eng2_N2_sim_cur, 0, 105, 1)
		-- else
			-- mixture1_cur = B738_set_animation_position(mixture1_cur, mixture1, 0, 1.0, 1)
			-- mixture2_cur = B738_set_animation_position(mixture2_cur, mixture2, 0, 1.0, 1)
			-- simDR_engine_mixture1 = mixture1_cur
			-- simDR_engine_mixture2 = mixture2_cur

			-- eng1_N1_target = B738_rpm(eng1_N1, idle_N1_sim, idle_N1)
			-- eng2_N1_target = B738_rpm(eng2_N1, idle_N1_sim, idle_N1)
			-- eng1_N2_target = B738_rpm(eng1_N2, idle_N2_sim, idle_N2)
			-- eng2_N2_target = B738_rpm(eng2_N2, idle_N2_sim, idle_N2)

			-- eng1_N1_cur = B738_set_animation_position(eng1_N1_cur, eng1_N1_target, 0, 105, 1)
			-- eng2_N1_cur = B738_set_animation_position(eng2_N1_cur, eng2_N1_target, 0, 105, 1)
			-- eng1_N2_cur = B738_set_animation_position(eng1_N2_cur, eng1_N2_target, 0, 105, 1)
			-- eng2_N2_cur = B738_set_animation_position(eng2_N2_cur, eng2_N2_target, 0, 105, 1)
			
			-- eng1_N1_sim_cur = eng1_N1_cur
			-- eng1_N2_sim_cur = eng1_N2_cur
			-- eng2_N1_sim_cur = eng2_N1_cur
			-- eng2_N2_sim_cur = eng2_N2_cur
		-- end
	-- else
-- --		mixture1_cur = mixture1
-- --		mixture2_cur = mixture2
-- --		simDR_engine_mixture1 = mixture1
-- ---		simDR_engine_mixture2 = mixture2
		
		-- mixture1_cur = B738_set_animation_position(mixture1_cur, mixture1, 0, 1.0, 1)
		-- mixture2_cur = B738_set_animation_position(mixture2_cur, mixture2, 0, 1.0, 1)
		-- simDR_engine_mixture1 = mixture1_cur
		-- simDR_engine_mixture2 = mixture2_cur

		-- eng1_N1_target = B738_rpm(eng1_N1, idle_N1_sim, idle_N1)
		-- eng2_N1_target = B738_rpm(eng2_N1, idle_N1_sim, idle_N1)
		-- eng1_N2_target = B738_rpm(eng1_N2, idle_N2_sim, idle_N2)
		-- eng2_N2_target = B738_rpm(eng2_N2, idle_N2_sim, idle_N2)

		-- eng1_N1_cur = B738_set_animation_position(eng1_N1_cur, eng1_N1_target, 0, 105, 1)
		-- eng2_N1_cur = B738_set_animation_position(eng2_N1_cur, eng2_N1_target, 0, 105, 1)
		-- eng1_N2_cur = B738_set_animation_position(eng1_N2_cur, eng1_N2_target, 0, 105, 1)
		-- eng2_N2_cur = B738_set_animation_position(eng2_N2_cur, eng2_N2_target, 0, 105, 1)
		
		-- eng1_N1_sim_cur = eng1_N1_cur
		-- eng1_N2_sim_cur = eng1_N2_cur
		-- eng2_N1_sim_cur = eng2_N1_cur
		-- eng2_N2_sim_cur = eng2_N2_cur
	-- end
	
	-- req1_idle = B738_rescale(0.5, 22.4, 1, 30.7, mixture1_cur) / 100
	-- if mixture1_cur < 0.5 then
		-- B738DR_eng1_req_N1 = 0.224
	-- else
		-- B738DR_eng1_req_N1 = B738_rescale(0, req1_idle, 1.04, 1.06, simDR_throttle1_use)
	-- end
	-- req2_idle = B738_rescale(0.5, 22.4, 1, 30.7, mixture2_cur) / 100
	-- if mixture2_cur < 0.5 then
		-- B738DR_eng2_req_N1 = 0.224
	-- else
		-- B738DR_eng2_req_N1 = B738_rescale(0, req2_idle, 1.04, 1.06, simDR_throttle2_use)
	-- end
	
	-- B738DR_eng1_N1 = eng1_N1_cur
	-- B738DR_eng2_N1 = eng2_N1_cur
	-- B738DR_eng1_N2 = eng1_N2_cur
	-- B738DR_eng2_N2 = eng2_N2_cur

-- -- Default
-- --		B738DR_eng1_N1 = eng1_N1
-- --		B738DR_eng2_N1 = eng2_N1
-- --		B738DR_eng1_N2 = eng1_N2
-- --		B738DR_eng2_N2 = eng2_N2

-- end


function B738_calc_trim()

	local flaps_to = B738DR_fms_takeoff_flaps
	local cg_to = B738DR_fmc_cg
	local gw_to = B738DR_fmc_gw / 2.204	-- to x1000 kg
	local i = 0
	local cg_min = 0
	local cg_max = 0
	local trim_min = 0
	local trim_max = 0
	
	if flaps_to ~= 0 and cg_to ~= 0 and gw_to ~= 0 then
	
		local weight_max = math.min( 85, roundUpToIncrement(gw_to, 5 ))
		local weight_min = math.max( 40, weight_max - 5)

		B738DR_trim_calc = 0
		if flaps_to == 1 or flaps_to == 5 then
			for i = 1, 11 do
				if cg_to <= cg_1_5[i] then
					cg_max = cg_1_5[i]
					if i < 11 then
						cg_min = cg_1_5[i-1]
					else
						cg_min = cg_max
					end
					break
				end
			end
			trim_min = B738_rescale(weight_min, flaps_1_5[cg_min][weight_min], weight_max, flaps_1_5[cg_min][weight_max],gw_to)
			trim_max = B738_rescale(weight_min, flaps_1_5[cg_max][weight_min], weight_max, flaps_1_5[cg_max][weight_max],gw_to)
			B738DR_trim_calc = B738_rescale(cg_min, trim_min, cg_max, trim_max, cg_to)
		end
		
		if flaps_to == 10 or flaps_to == 15 or flaps_to == 25 then
			for i = 1, 11 do
				if cg_to <= cg_15[i] then
					cg_max = cg_15[i]
					if i > 1 then
						cg_min = cg_15[i-1]
					else
						cg_min = cg_max
					end
					break
				end
			end
			trim_min = B738_rescale(weight_min, flaps_15[cg_min][weight_min], weight_max, flaps_15[cg_min][weight_max],gw_to)
			trim_max = B738_rescale(weight_min, flaps_15[cg_max][weight_min], weight_max, flaps_15[cg_max][weight_max],gw_to)
			B738DR_trim_calc = B738_rescale(cg_min, trim_min, cg_max, trim_max, cg_to)
		end
	
	end

end

function B738_calc_vspeed()

	local flaps_to = B738DR_fms_takeoff_flaps
	local gw_to = B738DR_fmc_gw / 2.204	-- to x1000 kg
	local alt_entry = simDR_elevation_m * 3.281	-- meters to ft
	local oat_entry = 0
	local rwy_cond = B738DR_fmc_rw_cond
	local xxK = 26
	local weight_min = 0
	local weight_max = 0
	local alt_min = 0
	local alt_max = 0
	local oat_min = 0
	local oat_max = 0
	local v1_x = 0
	local vr_x = 0
	local v2_x = 0
	local i = 0
	local j = 0
	local v1mcg = 0
	local calc_err = 0
	local wind_head = 0
	local wind_head_corr = 0
	
	if flaps_to ~= 0 and gw_to ~= 0 then
		
		-- Thrust 26K, 24K, 22K, RED 26K, RED 24K, RED 22K
		if B738DR_fms_N1_to_sel == 1 or B738DR_fms_N1_to_sel == 4 then
			xxK = 26
			if gw_to > 90 then
				calc_err = 1
			end
		-- Weight: 40 to 90  x1000 kg
			weight_max = math.min ( 90, roundUpToIncrement(gw_to, 5 ))
			weight_max = math.max ( 40, weight_max)
			weight_min = math.max ( 40, weight_max - 5)
		elseif B738DR_fms_N1_to_sel == 2 or B738DR_fms_N1_to_sel == 5 then
			xxK = 24
			if gw_to > 90 then
				calc_err = 1
			end
			-- Weight: 40 to 90  x1000 kg
			weight_max = math.min ( 90, roundUpToIncrement(gw_to, 5 ))
			weight_max = math.max ( 40, weight_max)
			weight_min = math.max ( 40, weight_max - 5)
		elseif B738DR_fms_N1_to_sel == 3 or B738DR_fms_N1_to_sel == 6 then
			xxK = 22
			if gw_to > 80 then
				calc_err = 1
			end
			gw_to = math.min ( 80, gw_to)
			-- Weight: 40 to 80  x1000 kg
			for i = 1, 11 do
				if gw_to <= v1_idx[xxK][i] then
					if i == 1 then
						weight_max = v1_idx[xxK][1]
						weight_min = v1_idx[xxK][1]
					else
						weight_max = v1_idx[xxK][i]
						weight_min = v1_idx[xxK][i-1]
					end
					break
				end
			end
		end
		
		if rwy_cond == 0 then	-- DRY
			v1_x = B738_rescale(weight_min, v1_dry[xxK][flaps_to][weight_min], weight_max, v1_dry[xxK][flaps_to][weight_max], gw_to)
			vr_x = B738_rescale(weight_min, vr_dry[xxK][flaps_to][weight_min], weight_max, vr_dry[xxK][flaps_to][weight_max], gw_to)
			v2_x = B738_rescale(weight_min, v2_dry[xxK][flaps_to][weight_min], weight_max, v2_dry[xxK][flaps_to][weight_max], gw_to)
		else	-- WET
			v1_x = B738_rescale(weight_min, v1_wet[xxK][flaps_to][weight_min], weight_max, v1_wet[xxK][flaps_to][weight_max], gw_to)
			vr_x = B738_rescale(weight_min, vr_wet[xxK][flaps_to][weight_min], weight_max, vr_wet[xxK][flaps_to][weight_max], gw_to)
			v2_x = B738_rescale(weight_min, v2_wet[xxK][flaps_to][weight_min], weight_max, v2_wet[xxK][flaps_to][weight_max], gw_to)
		end
		
		if v1_x > 180 then
			calc_err = 1
		end
		
		-- V1, VR, V2 Adjustments
		
		if B738DR_fms_N1_to_sel < 4 then
			-- no assumed temperature
			-- OAT temp indicated / FMS entry
			if B738DR_fmc_oat_temp == 99 then
				oat_entry = simDR_OAT
			else
				oat_entry = B738DR_fmc_oat_temp
			end
		else
			-- assumed temperature
			oat_entry = B738DR_fmc_sel_temp
		end
		
		if oat_entry < -60 or oat_entry > 70 
		or alt_entry < -2000 or alt_entry > 10000 then
			calc_err = 1
		end
		oat_entry = math.min (70, oat_entry)
		oat_entry = math.max (-60, oat_entry)
		if oat_entry <= 20 then
			oat_max = 20
			oat_min = -60
		else
			oat_max = math.min ( 70, roundUpToIncrement(oat_entry, 10 ))
			oat_max = math.max (20, oat_max)
			oat_min = math.max (20, oat_max - 10)
		end
		
		alt_max = math.min (10000, roundUpToIncrement(alt_entry, 2000 ))
		alt_max = math.max (-2000, alt_max)
		alt_min = math.max (-2000, alt_max - 2000)
		
		
		if rwy_cond == 0 then	-- DRY
			i = B738_rescale(alt_min, v1_adj_dry[xxK][oat_min][alt_min], alt_max, v1_adj_dry[xxK][oat_min][alt_max], alt_entry)
			j = B738_rescale(alt_min, v1_adj_dry[xxK][oat_max][alt_min], alt_max, v1_adj_dry[xxK][oat_max][alt_max], alt_entry)
			v1_x = v1_x + B738_rescale(oat_min, i, oat_max, j, oat_entry)
			
			i = B738_rescale(alt_min, vr_adj_dry[xxK][oat_min][alt_min], alt_max, vr_adj_dry[xxK][oat_min][alt_max], alt_entry)
			j = B738_rescale(alt_min, vr_adj_dry[xxK][oat_max][alt_min], alt_max, vr_adj_dry[xxK][oat_max][alt_max], alt_entry)
			vr_x = vr_x + B738_rescale(oat_min, i, oat_max, j, oat_entry)
			
			i = B738_rescale(alt_min, v2_adj_dry[xxK][oat_min][alt_min], alt_max, v2_adj_dry[xxK][oat_min][alt_max], alt_entry)
			j = B738_rescale(alt_min, v2_adj_dry[xxK][oat_max][alt_min], alt_max, v2_adj_dry[xxK][oat_max][alt_max], alt_entry)
			v2_x = v2_x + B738_rescale(oat_min, i, oat_max, j, oat_entry)
		else
			i = B738_rescale(alt_min, v1_adj_wet[xxK][oat_min][alt_min], alt_max, v1_adj_wet[xxK][oat_min][alt_max], alt_entry)
			j = B738_rescale(alt_min, v1_adj_wet[xxK][oat_max][alt_min], alt_max, v1_adj_wet[xxK][oat_max][alt_max], alt_entry)
			v1_x = v1_x + B738_rescale(oat_min, i, oat_max, j, oat_entry)
			
			i = B738_rescale(alt_min, vr_adj_wet[xxK][oat_min][alt_min], alt_max, vr_adj_wet[xxK][oat_min][alt_max], alt_entry)
			j = B738_rescale(alt_min, vr_adj_wet[xxK][oat_max][alt_min], alt_max, vr_adj_wet[xxK][oat_max][alt_max], alt_entry)
			vr_x = vr_x + B738_rescale(oat_min, i, oat_max, j, oat_entry)
			
			i = B738_rescale(alt_min, v2_adj_wet[xxK][oat_min][alt_min], alt_max, v2_adj_wet[xxK][oat_min][alt_max], alt_entry)
			j = B738_rescale(alt_min, v2_adj_wet[xxK][oat_max][alt_min], alt_max, v2_adj_wet[xxK][oat_max][alt_max], alt_entry)
			v2_x = v2_x + B738_rescale(oat_min, i, oat_max, j, oat_entry)
		end
		if i > 10 or j > 10 then
			calc_err = 1
		end
		
		-- Weight: 40 to 90  x1000 kg
		weight_max = math.min ( 90, roundUpToIncrement(gw_to, 10 ))
		weight_max = math.max ( 40, weight_max)
		weight_min = math.max ( 40, weight_max - 10)
		if rwy_cond == 0 then	-- DRY
			-- runway wind correction
			if B738DR_rw_hdg >= 0 and B738DR_rw_wind_spd > 0 and B738DR_rw_wind_dir >= 0 then
				wind_head = B738DR_rw_wind_spd * math.cos(math.rad(Angle180(B738DR_rw_wind_dir))-math.rad(B738DR_rw_hdg))
				if wind_head <= -15 then
					wind_head_corr = v1_wind_adj_dry[26][weight_max][-15]
				elseif wind_head <= -10 then
					wind_head_corr = v1_wind_adj_dry[26][weight_max][-10]
				elseif wind_head <= -5 then
					wind_head_corr = v1_wind_adj_dry[26][weight_max][-5]
				elseif wind_head <= 0 then
					wind_head_corr = v1_wind_adj_dry[26][weight_max][0]
				elseif wind_head <= 10 then
					wind_head_corr = v1_wind_adj_dry[26][weight_max][10]
				elseif wind_head <= 20 then
					wind_head_corr = v1_wind_adj_dry[26][weight_max][20]
				elseif wind_head <= 30 then
					wind_head_corr = v1_wind_adj_dry[26][weight_max][30]
				else
					wind_head_corr = v1_wind_adj_dry[26][weight_max][40]
				end
				v1_x = v1_x + wind_head_corr
			end
			
			-- runway slope correction
			if B738DR_rw_slope <= -2 then
				wind_head_corr = v1_slope_adj_dry[26][weight_max][-2]
			elseif B738DR_rw_slope <= -1 then
				wind_head_corr = v1_slope_adj_dry[26][weight_max][-1]
			elseif B738DR_rw_slope <= 0 then
				wind_head_corr = v1_slope_adj_dry[26][weight_max][0]
			elseif B738DR_rw_slope <= 1 then
				wind_head_corr = v1_slope_adj_dry[26][weight_max][1]
			else
				wind_head_corr = v1_slope_adj_dry[26][weight_max][2]
			end
			v1_x = v1_x + wind_head_corr
		
		else	-- WET
			-- runway wind correction
			if B738DR_rw_hdg >= 0 and B738DR_rw_wind_spd > 0 and B738DR_rw_wind_dir >= 0 then
				wind_head = B738DR_rw_wind_spd * math.cos(math.rad(Angle180(B738DR_rw_wind_dir))-math.rad(B738DR_rw_hdg))
				if wind_head <= -15 then
					wind_head_corr = v1_wind_adj_wet[26][weight_max][-15]
				elseif wind_head <= -10 then
					wind_head_corr = v1_wind_adj_wet[26][weight_max][-10]
				elseif wind_head <= -5 then
					wind_head_corr = v1_wind_adj_wet[26][weight_max][-5]
				elseif wind_head <= 0 then
					wind_head_corr = v1_wind_adj_wet[26][weight_max][0]
				elseif wind_head <= 10 then
					wind_head_corr = v1_wind_adj_wet[26][weight_max][10]
				elseif wind_head <= 20 then
					wind_head_corr = v1_wind_adj_wet[26][weight_max][20]
				elseif wind_head <= 30 then
					wind_head_corr = v1_wind_adj_wet[26][weight_max][30]
				else
					wind_head_corr = v1_wind_adj_wet[26][weight_max][40]
				end
				v1_x = v1_x + wind_head_corr
			end
			
			-- runway slope correction
			if B738DR_rw_slope <= -2 then
				wind_head_corr = v1_slope_adj_wet[26][weight_max][-2]
			elseif B738DR_rw_slope <= -1 then
				wind_head_corr = v1_slope_adj_wet[26][weight_max][-1]
			elseif B738DR_rw_slope <= 0 then
				wind_head_corr = v1_slope_adj_wet[26][weight_max][0]
			elseif B738DR_rw_slope <= -1 then
				wind_head_corr = v1_slope_adj_wet[26][weight_max][1]
			else
				wind_head_corr = v1_slope_adj_wet[26][weight_max][2]
			end
			v1_x = v1_x + wind_head_corr
		
		end
		
		-- V1 MCG
		i = B738_rescale(alt_min, v1_mcg[oat_min][alt_min], alt_max, v1_mcg[oat_min][alt_max], alt_entry)
		j = B738_rescale(alt_min, v1_mcg[oat_max][alt_min], alt_max, v1_mcg[oat_max][alt_max], alt_entry)
		v1mcg = B738_rescale(oat_min, i, oat_max, j, oat_entry)
		
		if v1_x < v1mcg then
			v1_x = v1mcg
			if vr_x < v1_x then
				vr_x = v1_x
			end
		end
		
		if v1_x > v2_x or vr_x > v2_x then
			calc_err = 1
		end
		
--		B738DR_thr_cont_N1 = v1mcg
		
		
		if calc_err == 1 or B738DR_thr_takeoff_N1 == 0 then
			B738DR_fms_v1_calc = 0
			B738DR_fms_vr_calc = 0
			B738DR_fms_v2_calc = 0
		else
			B738DR_fms_v1_calc = v1_x
			B738DR_fms_vr_calc = vr_x
			B738DR_fms_v2_calc = v2_x
		end
		
	else
		B738DR_fms_v1_calc = 0
		B738DR_fms_vr_calc = 0
		B738DR_fms_v2_calc = 0
	end
	
end


function B738_calc_vref()

	local gw_to = B738DR_fmc_gw / 2.204	-- to x1000 kg
	local weight_min = 0
	local weight_max = 0
		
	if gw_to ~= 0 then
		
		-- Weight: 40 to 85  x1000 kg
		weight_max = math.min ( 85, roundUpToIncrement(gw_to, 5 ))
		weight_max = math.max ( 40, weight_max)
		weight_min = math.max ( 40, weight_max - 5)
		
		B738DR_fms_vref_15 = B738_rescale(weight_min, vref_calc[15][weight_min], weight_max, vref_calc[15][weight_max], gw_to)
		B738DR_fms_vref_30 = B738_rescale(weight_min, vref_calc[30][weight_min], weight_max, vref_calc[30][weight_max], gw_to)
		B738DR_fms_vref_40 = B738_rescale(weight_min, vref_calc[40][weight_min], weight_max, vref_calc[40][weight_max], gw_to)
		B738DR_fms_vref_25 = B738DR_fms_vref_40 + 10
		
		
		-- flaps bugs
		B738DR_pfd_flaps_up = B738DR_fms_vref_40 + 70
		B738DR_pfd_flaps_1 = B738DR_fms_vref_40 + 50
		B738DR_pfd_flaps_2 = B738DR_fms_vref_40 + 40
		B738DR_pfd_flaps_5 = B738DR_fms_vref_40 + 30
		B738DR_pfd_flaps_10 = B738DR_fms_vref_40 + 30
		B738DR_pfd_flaps_15 = B738DR_fms_vref_40 + 20
		
		-- auto
		if B738DR_spd_ref == 0 then
			if B738DR_fms_approach_speed > 0 then
				B738DR_fms_vref = B738DR_fms_approach_speed --+ B738DR_fms_approach_wind_corr
			else
				B738DR_fms_vref = 0
			end
		-- manual
		elseif B738DR_spd_ref == 6 then
			B738DR_fms_vref = B738DR_man_vref
		else
			B738DR_fms_vref = 0
		end
	else
		-- auto
		if B738DR_spd_ref == 0 then
				B738DR_fms_vref = 0
		-- manual
		elseif B738DR_spd_ref == 6 then
			B738DR_fms_vref = B738DR_man_vref
		else
			B738DR_fms_vref = 0
		end
		
		-- VREF
		B738DR_fms_vref_15 = 0
		B738DR_fms_vref_25 = 0
		B738DR_fms_vref_30 = 0
		B738DR_fms_vref_40 = 0
		-- flaps bugs
		B738DR_pfd_flaps_up = vmax[0]
		B738DR_pfd_flaps_1 = vmax[1] - 5
		B738DR_pfd_flaps_2 = vmax[2] - 5
		B738DR_pfd_flaps_5 = vmax[5] - 5
		B738DR_pfd_flaps_10 = vmax[10] - 5
		B738DR_pfd_flaps_15 = vmax[15] - 5
	end
end


function B738_vspeed_bugs()

	local flaps = simDR_flaps_ratio
	local gw_to = B738DR_fmc_gw
	local flaps_to = B738DR_fms_takeoff_flaps

	-- show V1, VR bugs
	-- if aircraft_was_on_air == 0 then
	-- and simDR_airspeed_pilot < 70 then
	-- if B738DR_flight_phase == 0
	-- and simDR_radio_height_pilot_ft < 30 then
		-- v1r_bugs_enable = 1
		-- if B738DR_fms_v1_set == 0 
		-- or B738DR_fms_vr_set == 0 then
			-- B738DR_pfd_no_vspd = 1
		-- end
	-- end
	--if aircraft_was_on_air == 0
	-- if B738DR_flight_phase == 0 then
	-- and simDR_airspeed_pilot > 80 then
-- --	and v1r_bugs_enable == 1 then
		-- if simDR_airspeed_pilot > 80 then
		-- B738DR_fms_v1r_bugs = 1
		-- if B738DR_fms_v1_set == 0 
		-- or B738DR_fms_vr_set == 0 then
			-- B738DR_pfd_no_vspd = 1
		-- end
	-- end
	-- if simDR_radio_height_pilot_ft > 30 then
		-- v1r_bugs_enable = 0
		-- B738DR_fms_v1r_bugs = 0
		-- B738DR_pfd_no_vspd = 0
	-- end
	
	-- show V2+15 bug
	local flaps_ratio = 0
	if flaps_to == 1 then
		flaps_ratio = 0.125
	elseif flaps_to == 5 then
		flaps_ratio = 0.375
	elseif flaps_to == 10 then
		flaps_ratio = 0.5
	elseif flaps_to == 15 then
		flaps_ratio = 0.625
	elseif flaps_to == 25 then
		flaps_ratio = 0.75
	end
--	if aircraft_was_on_air == 0 then
	if B738DR_flight_phase < 2 then
		B738DR_fms_v2_bugs = 1
	end
	
	-- auto
	if B738DR_spd_ref == 0 then
		if simDR_flaps_ratio < flaps_ratio then --and aircraft_was_on_air ==  1 then
			B738DR_fms_v2_bugs = 0
		end
		if B738DR_fms_vref > 0 then --and aircraft_was_on_air ==  1 then
			B738DR_fms_v2_bugs = 0
		end
	-- manual or none
	else
		B738DR_fms_v2_bugs = 0
	end
	
	-- SET V1, VR, V2, V2+20
	
	-- auto
	if B738DR_spd_ref == 0 then
		if B738DR_fms_v1_set == 0 
		or B738DR_fms_vr_set == 0 then
			B738DR_fms_v1r_bugs = 0
			B738DR_pfd_no_vspd = 1
		else
			B738DR_pfd_no_vspd = 0
			if B738DR_flight_phase == 0
			and simDR_airspeed_pilot > 80 then
				B738DR_fms_v1r_bugs = 1
				--B738DR_pfd_no_vspd = 0
			end
			B738DR_fms_v1 = B738DR_fms_v1_set
			B738DR_fms_vr = B738DR_fms_vr_set
		end
	
	-- manual
	elseif B738DR_spd_ref == 6 then
		B738DR_fms_v1 = B738DR_man_v1
		B738DR_fms_vr = B738DR_man_vr
		B738DR_pfd_no_vspd = 0
		if B738DR_flight_phase == 0
		and simDR_airspeed_pilot > 80 then
			B738DR_fms_v1r_bugs = 1
		end
	-- no set
	else
		B738DR_fms_v1r_bugs = 0
		B738DR_pfd_no_vspd = 1
	end
	
	if simDR_radio_height_pilot_ft > 30 then
		v1r_bugs_enable = 0
		B738DR_fms_v1r_bugs = 0
		B738DR_pfd_no_vspd = 0
	end
	
	if B738DR_fms_v2_set == 0 then
		B738DR_fms_v2_bugs = 0
	else
		B738DR_fms_v2 = B738DR_fms_v2_set
		B738DR_fms_v2_15 = B738DR_fms_v2_set + 20
	end
	
	-- show VREF bug
	if aircraft_was_on_air == 1
	and B738DR_fms_vref > 0 then 	-- Vref set
		B738DR_fms_vref_bugs = 1
	else
		B738DR_fms_vref_bugs = 0
	end

	-- flaps bug UP show
	if simDR_altitude_pilot < 19900 then
		B738DR_pfd_flaps_up_show = 1
	end
	if simDR_altitude_pilot > 20000 then
		B738DR_pfd_flaps_up_show = 0
	end

	-- flaps bugs 1, 5, 15 show
	local vref_4 = 0
	vref_4 = B738DR_fms_vref + 4
	if flaps > 0.75 or simDR_airspeed_pilot < vref_4 then --or B738DR_fms_vref > 0 then	-- flaps move to 30 or 40
		flap_1_show = 0
		flap_5_show = 0
		flap_15_show = 0
	else
		if flaps > 0 then		-- flaps up > 1
			flap_1_show = 1
		else
			flap_1_show = 0
		end
		if flaps > 0.25 then		-- flaps 2 > 5
			flap_5_show = 1
		else
			flap_5_show = 0
		end
		if flaps > 0.50 then		-- flaps 10 > 15
			flap_15_show = 1
			flap_1_show = 0
		else
			flap_15_show = 0
		end
	end
--	if B738DR_fms_v2_bugs == 1 then
	if B738DR_flight_phase < 2 then
		if flaps < 0.124 then		-- flaps 1
			flap_1_show = 0
		end
		if flaps < 0.374 then		-- flaps 5
			flap_5_show = 0
		end
		if flaps < 0.624 then		-- flaps 15
			flap_15_show = 0
		end
	end
	if gw_to == 0 then
		flap_1_show = 0
		flap_5_show = 0
		flap_15_show = 0
	end
	
	B738DR_pfd_flaps_1_show = flap_1_show
	B738DR_pfd_flaps_5_show = flap_5_show
	B738DR_pfd_flaps_15_show = flap_15_show
	
	-- speed 80 kts bug
	B738DR_pfd_spd_80 = 80
	-- if simDR_airspeed_pilot > 45 then
		-- B738DR_pfd_spd_80_show = B738DR_fms_v2_bugs
	-- else
		-- B738DR_pfd_spd_80_show = 0
	-- end
	if simDR_airspeed_pilot > 45 then
		B738DR_pfd_spd_80_show = 1
	else
		B738DR_pfd_spd_80_show = 0
	end
	

end

function B738_calc_min_max_spd()

	local flaps = simDR_flaps_ratio
	local max_speed = 340
	local max_spd = 340
	local min_speed = 116
	local min_speed_0 = 0
	local min_speed_1 = 0
	local min_speed_2 = 0
	local next_low_flaps_spd = 0
	local next_hi_flaps_spd = 0
	local min_maneuver_speed = 0
	local max_maneuver_speed = 0
	local min_speed_show = 0
	local max_maneuver_speed_show = 0
--	local spd_of_snd = 0
	local max_spd_kts = 0
	
	spd_of_snd = 39 * math.sqrt(273.15 + simDR_OAT)	-- speed of sound in kts
	max_spd_kts = (simDR_altitude_pilot / 1000 * 0.018) + 1
	max_spd_kts = 0.82 * spd_of_snd / max_spd_kts
--	max_spd_kts = 0.82 * spd_of_snd		-- TAS in kts (0.82 mach)
--	max_spd_kts = max_spd_kts * math.sqrt(simDR_air_density)	-- IAS in kts (0.82 mach)
	
	-- maximum red/black tape
	if simDR_gear_retract > 0.1 then	-- gear down or transit
		max_spd = 320
	else
		max_spd = max_spd_kts
		if max_spd > 340 then
			max_spd = 340
		end
	end
	
	local total_weight_t = simDR_total_weight / 1000		-- kgs
	local total_weight_lbs = total_weight_t * 2.204		-- kgs to lbs
	total_weight_lbs = math.min( 180, total_weight_lbs)
	total_weight_lbs = math.max( 90, total_weight_lbs)
	local weight_index = (total_weight_lbs - 90 ) / 90
	
	-- minimum red/black tape, min and max maneuver lines
	if flaps == 0 then				-- flaps 0
		min_speed_0 = math.max( 116, (vmin_full[0] - 27))
		min_speed = B738_rescale(0, min_speed_0, 1, vmin_full[0], weight_index)
		max_speed = max_spd
		next_low_flaps_spd = max_spd
		next_hi_flaps_spd = vmax[1] - 40
	
	elseif flaps <= 0.125 then		-- flaps 1
		min_speed_0 = math.max( 116, (vmin_full[0] - 27))
		min_speed_1 = B738_rescale(0, min_speed_0, 1, vmin_full[0], weight_index)
		min_speed_0 = math.max( 116, (vmin_full[1] - 27))
		min_speed_2 = B738_rescale(0, min_speed_0, 1, vmin_full[1], weight_index)
		min_speed = B738_rescale(0.0, min_speed_1, 0.125, min_speed_2, flaps)
		max_speed = B738_rescale(0.0, max_spd, 0.125, vmax[1], flaps)
		next_low_flaps_spd = B738_rescale(0.0, max_spd, 0.125, B738DR_pfd_flaps_up, flaps)
		next_hi_flaps_spd = B738_rescale(0.0, vmax[1] - 40, 0.125, (vmax[10]-30), flaps)
	
	elseif flaps <= 0.25 then		-- flaps 2
		min_speed_0 = math.max( 116, (vmin_full[1] - 27))
		min_speed_1 = B738_rescale(0, min_speed_0, 1, vmin_full[1], weight_index)
		min_speed_0 = math.max( 116, (vmin_full[2] - 27))
		min_speed_2 = B738_rescale(0, min_speed_0, 1, vmin_full[2], weight_index)
		min_speed = B738_rescale(0.125, min_speed_1, 0.25, min_speed_2, flaps)
		max_speed = B738_rescale(0.125, vmax[1], 0.25, vmax[2], flaps)
		next_low_flaps_spd = B738_rescale(0.125, B738DR_pfd_flaps_up, 0.25, B738DR_pfd_flaps_1, flaps)
		next_hi_flaps_spd = B738_rescale(0.125, (vmax[10]-30), 0.25, (vmax[15]-40), flaps)
	
	elseif flaps <= 0.375 then		-- flaps 5
		min_speed_0 = math.max( 116, (vmin_full[2] - 27))
		min_speed_1 = B738_rescale(0, min_speed_0, 1, vmin_full[2], weight_index)
		min_speed_0 = math.max( 116, (vmin_full[5] - 27))
		min_speed_2 = B738_rescale(0, min_speed_0, 1, vmin_full[5], weight_index)
		min_speed = B738_rescale(0.25, min_speed_1, 0.375, min_speed_2, flaps)
		max_speed = B738_rescale(0.25, vmax[2], 0.375, vmax[5], flaps)
		next_low_flaps_spd = B738_rescale(0.25, B738DR_pfd_flaps_1, 0.375, B738DR_pfd_flaps_2, flaps)
		next_hi_flaps_spd = B738_rescale(0.25, (vmax[15]-40), 0.375, (vmax[25]-40), flaps)
	
	elseif flaps <= 0.5 then		-- flaps 10
		min_speed_0 = math.max( 116, (vmin_full[5] - 27))
		min_speed_1 = B738_rescale(0, min_speed_0, 1, vmin_full[5], weight_index)
		min_speed_0 = math.max( 116, (vmin_full[10] - 27))
		min_speed_2 = B738_rescale(0, min_speed_0, 1, vmin_full[10], weight_index)
		min_speed = B738_rescale(0.375, min_speed_1, 0.5, min_speed_2, flaps)
		max_speed = B738_rescale(0.375, vmax[5], 0.5, vmax[10], flaps)
		next_low_flaps_spd = B738_rescale(0.375, B738DR_pfd_flaps_2, 0.5, B738DR_pfd_flaps_5, flaps)
		next_hi_flaps_spd = B738_rescale(0.375, (vmax[25]-40), 0.5, (vmax[30]-40), flaps)
	
	elseif flaps <= 0.625 then		-- flaps 15
		min_speed_0 = math.max( 116, (vmin_full[10] - 27))
		min_speed_1 = B738_rescale(0, min_speed_0, 1, vmin_full[10], weight_index)
		min_speed_0 = math.max( 116, (vmin_full[15] - 27))
		min_speed_2 = B738_rescale(0, min_speed_0, 1, vmin_full[15], weight_index)
		min_speed = B738_rescale(0.5, min_speed_1, 0.625, min_speed_2, flaps)
		max_speed = B738_rescale(0.5, vmax[10], 0.625, vmax[15], flaps)
		next_low_flaps_spd = B738_rescale(0.5, B738DR_pfd_flaps_5, 0.625, B738DR_pfd_flaps_10, flaps)
		next_hi_flaps_spd = B738_rescale(0.5, (vmax[30]-40), 0.625, (vmax[40]-40), flaps)
	
	elseif flaps <= 0.75 then		-- flaps 25
		min_speed_0 = math.max( 116, (vmin_full[15] - 27))
		min_speed_1 = B738_rescale(0, min_speed_0, 1, vmin_full[15], weight_index)
		min_speed_0 = math.max( 116, (vmin_full[25] - 27))
		min_speed_2 = B738_rescale(0, min_speed_0, 1, vmin_full[25], weight_index)
		min_speed = B738_rescale(0.625, min_speed_1, 0.75, min_speed_2, flaps)
		max_speed = B738_rescale(0.625, vmax[15], 0.75, vmax[25], flaps)
		next_low_flaps_spd = B738_rescale(0.625, B738DR_pfd_flaps_10, 0.75, B738DR_pfd_flaps_15, flaps)
		next_hi_flaps_spd = B738_rescale(0.625, (vmax[40]-40), 0.75, (vmax[40]-50), flaps)
	
	elseif flaps <= 0.875 then		-- flaps 30
		min_speed_0 = math.max( 116, (vmin_full[25] - 27))
		min_speed_1 = B738_rescale(0, min_speed_0, 1, vmin_full[25], weight_index)
		min_speed_0 = math.max( 116, (vmin_full[30] - 27))
		min_speed_2 = B738_rescale(0, min_speed_0, 1, vmin_full[30], weight_index)
		min_speed = B738_rescale(0.75, min_speed_1, 0.875, min_speed_2, flaps)
		max_speed = B738_rescale(0.75, vmax[25], 0.875, vmax[30], flaps)
		next_low_flaps_spd = B738DR_pfd_flaps_15 - 10
		next_hi_flaps_spd = B738_rescale(0.75, (vmax[40]-50), 0.875, (vmax[40]-60), flaps)
	
	elseif flaps <= 1.000 then		-- flaps 40
		min_speed_0 = math.max( 116, (vmin_full[30] - 27))
		min_speed_1 = B738_rescale(0, min_speed_0, 1, vmin_full[30], weight_index)
		min_speed_0 = math.max( 116, (vmin_full[40] - 27))
		min_speed_2 = B738_rescale(0, min_speed_0, 1, vmin_full[40], weight_index)
		min_speed = B738_rescale(0.875, min_speed_1, 1.0, min_speed_2, flaps)
		max_speed = B738_rescale(0.875, vmax[30], 1.0, vmax[40], flaps)
		next_low_flaps_spd = B738DR_pfd_flaps_15 - 10
		next_hi_flaps_spd = B738_rescale(0.875, (vmax[40]-60), 1.0, (vmax[40]-70), flaps)
	end
	
--	min_speed_0 = B738_rescale(0, 0, 1, 10, weight_index)
--	min_speed_1 = min_speed + 5
--	min_speed_2 = min_speed + 5
--	min_maneuver_speed = B738_rescale(0.0, min_speed_2, 1.0, min_speed_1, flaps)
--	min_maneuver_speed = math.min((max_speed + 5), (next_hi_flaps_spd))
	min_maneuver_speed = B738_rescale(0.0, (min_speed + 15), 1.0, (min_speed + 5), flaps)
	
	if gw == 0 then
		max_maneuver_speed = max_speed - 10
	else
		--min_speed_1 = max_speed - 10
		--min_speed_2 = max_speed - 15
		max_maneuver_speed = math.min((max_speed - 10), next_low_flaps_spd) --B738_rescale(0.0, min_speed_2, 1.0, min_speed_1, flaps)
	end

	B738DR_pfd_min_speed = min_speed
	B738DR_pfd_max_speed = max_speed
	B738DR_pfd_min_maneuver_speed = min_maneuver_speed
	B738DR_pfd_max_maneuver_speed = max_maneuver_speed

	if simDR_radio_height_pilot_ft > 50 
	and aircraft_was_on_air ==  0 then		-- aircraft above 100 ft RA
		aircraft_was_on_air = 1
	end

	if simDR_on_ground_0 == 1
	or simDR_on_ground_1 == 1
	or simDR_on_ground_2 == 1 then		-- touchdown
		aircraft_was_on_air = 0
		min_speed_show = 0		-- minimum speed red/black tape
		min_maneuver_speed_show = 0		-- amber line
	end


	if aircraft_was_on_air ==  1 then
		min_speed_show = 1		-- minimum speed red/black tape
		if flaps > 0.0 then 	-- flaps not up
			max_maneuver_speed_show = 1
		end
		if flaps == 1 or B738DR_fms_vref > 0 then 	-- Vref set or flaps 40
			max_maneuver_speed_show = 0
		end
	end
	
	if B738DR_fms_vref > 0 then		-- Vref set
		min_maneuver_speed_show = 0
	else
		if aircraft_was_on_air ==  1 
		and flaps <= 0.05 then
			min_maneuver_speed_show = 1		-- amber line
		end
	end
	
	B738DR_pfd_min_speed_show = min_speed_show
	B738DR_pfd_max_maneuver_speed_show = max_maneuver_speed_show
	B738DR_pfd_min_maneuver_speed_show = min_maneuver_speed_show

	-- MCP flash "8"
	if B738DR_mcp_speed_dial > max_speed then
		B738DR_digit_8 = DRblink
	else
		B738DR_digit_8 = 0
	end

	-- MCP flash "A"
	if B738DR_mcp_speed_dial < min_speed
	and simDR_radio_height_pilot_ft > 400 then
		B738DR_digit_A = DRblink
	else
		B738DR_digit_A = 0
	end

end


function B738_takeoff_n1_calc()

	local alt_entry = simDR_elevation_m * 3.281	-- meters to ft
	local oat_entry = 0
	local xxK = 26
	local thrust_n1 = 0
	local thrust_n1_adj = 0
	local thrust_n1_min = 0
	local thrust_n1_max = 0
	local oat_min = 0
	local oat_max = 0
	local alt_min = 0
	local alt_max = 0
	local max_temp = 0
	local sel_temp = 0
	local sel_temp_min = 0
	local sel_temp_max = 0
	local sel_temp_xxx = 0
	
	-- OAT temp indicated / FMS entry
	if B738DR_fmc_oat_temp == 99 then
		oat_entry = simDR_OAT
	else
		oat_entry = B738DR_fmc_oat_temp
	end
	
	-- Full thrust 26K, 24K, 22K
	if B738DR_fms_N1_to_sel < 4 then
		if B738DR_fms_N1_to_sel == 1 then
			xxK = 26
		elseif B738DR_fms_N1_to_sel == 2 then
			xxK = 24	--24
		elseif B738DR_fms_N1_to_sel == 3 then
			xxK = 22	--22
		end
		-- OAT: -50 C to 60 C
		oat_max = math.min ( 60, roundUpToIncrement(oat_entry, 5 ))
		oat_max = math.max ( -50, oat_max)
		oat_min = math.max ( -50, oat_max - 5)
		-- ALT: -2000 ft to 10000 ft
		alt_max = math.min( 10000, roundUpToIncrement(alt_entry, 1000 ))
		alt_max = math.max( -2000, alt_max)
		alt_min = math.max( -2000, alt_max - 1000)
		thrust_n1_min = B738_rescale(alt_min, takeoff_thrust[xxK][oat_min][alt_min], alt_max, takeoff_thrust[xxK][oat_min][alt_max], alt_entry)
		thrust_n1_max = B738_rescale(alt_min, takeoff_thrust[xxK][oat_max][alt_min], alt_max, takeoff_thrust[xxK][oat_max][alt_max], alt_entry)
		thrust_n1 = B738_rescale(oat_min, thrust_n1_min, oat_max, thrust_n1_max, oat_entry)
		-- adjust PACK off
		if B738DR_l_pack_pos == 0 and B738DR_r_pack_pos == 0 then
			thrust_n1 = thrust_n1 + takeoff_adj[alt_max]
		end
		
	else
		-- Reduced thrust RED 26K, RED 24K, RED 22K
		if B738DR_fms_N1_to_sel == 4 then
			xxK = 26
		elseif B738DR_fms_N1_to_sel == 5 then
			xxK = 24	--24
		elseif B738DR_fms_N1_to_sel == 6 then
			xxK = 22	--22
		end
		-- OAT: 10 C to 55 C
		oat_max = math.min ( 55, roundDownToIncrement(oat_entry, 5 ))
		oat_max = math.max ( 10, oat_max)
		oat_min = math.max ( 10, oat_max - 5)
		-- ALT: -2000 ft to 10000 ft
		alt_max = math.min( 10000, roundUpToIncrement(alt_entry, 1000 ))
		alt_max = math.max( -1000, alt_max)
		alt_min = math.max( -1000, alt_max - 1000)
		-- maximum assumed temperature
		max_temp = B738_rescale(alt_min, assumed_max_temp[xxK][oat_max][alt_min], alt_max, assumed_max_temp[xxK][oat_max][alt_max], alt_entry)
		if max_temp > 75 or B738DR_fmc_sel_temp > max_temp then
			thrust_n1 = 0
		else
			-- minimum assumed temperature
			sel_temp = math.min ( 75, roundDownToIncrement(B738DR_fmc_sel_temp, 5 ))
			sel_temp = math.max ( 10, sel_temp - 5)
			sel_temp_xxx = B738_rescale(alt_min, assumed_min_temp[xxK][alt_min], alt_max, assumed_min_temp[xxK][alt_max], alt_entry)
			
			if B738DR_fmc_sel_temp < sel_temp_xxx then
				thrust_n1 = 0
			else
				sel_temp_min = math.min ( 75, roundUpToIncrement(B738DR_fmc_sel_temp, 5 ))
				sel_temp_min = math.max ( 10, sel_temp_min)
				sel_temp_max = math.max ( 10, sel_temp_min - 5)
				thrust_n1_min = B738_rescale(alt_min, takeoff_thrust_red[xxK][sel_temp_min][alt_min], alt_max, takeoff_thrust_red[xxK][sel_temp_min][alt_max], alt_entry)
				thrust_n1_max = B738_rescale(alt_min, takeoff_thrust_red[xxK][sel_temp_max][alt_min], alt_max, takeoff_thrust_red[xxK][sel_temp_max][alt_max], alt_entry)
				thrust_n1 = B738_rescale(sel_temp_min, thrust_n1_min, sel_temp_max, thrust_n1_max, B738DR_fmc_sel_temp)
				
				-- adjust PACK off
				if B738DR_l_pack_pos == 0 and B738DR_r_pack_pos == 0 then
					thrust_n1 = thrust_n1 + 1.0
				end
				
				-- adjust temperature difference
				sel_temp = B738DR_fmc_sel_temp - oat_entry
				sel_temp_min = math.min ( 110, roundUpToIncrement(sel_temp, 10 ))
				sel_temp_min = math.max ( 0, sel_temp_min)
				sel_temp_max = math.max ( 0, sel_temp_min - 10)
				if oat_entry < 0 then
					-- OAT: -40 C to 0 C
					oat_max = math.min ( 0, roundUpToIncrement(oat_entry, 20 ))
					oat_max = math.max ( -40, oat_max)
					oat_min = math.max ( -40, oat_max - 20)
				else
					-- OAT: 0 C to 55 C
					oat_max = math.min ( 55, roundUpToIncrement(oat_entry, 5 ))
					oat_max = math.max ( 0, oat_max)
					oat_min = math.max ( 0, oat_max - 5)
				end
				thrust_n1_min = B738_rescale(oat_min, takeoff_adj_red[xxK][sel_temp_min][oat_min], oat_max, takeoff_adj_red[xxK][sel_temp_min][oat_max], oat_entry)
				thrust_n1_max = B738_rescale(oat_min, takeoff_adj_red[xxK][sel_temp_max][oat_min], oat_max, takeoff_adj_red[xxK][sel_temp_max][oat_max], oat_entry)
				thrust_n1_adj = B738_rescale(sel_temp_min, thrust_n1_min, sel_temp_max, thrust_n1_max, sel_temp)
				if thrust_n1_adj > 17 then
					thrust_n1 = 0
				else
					thrust_n1 = thrust_n1 - thrust_n1_adj
				end
			end
		end
	end
	
	thrust_n1 = math.min (99.9, thrust_n1)
	B738DR_thr_takeoff_N1 = thrust_n1 / 100
	
end


function B738_climb_n1_calc()

	local alt_entry = simDR_elevation_m * 3.281	-- meters to ft
	local tat_entry = simDR_TAT
	local thrust_n1 = 0
	local thrust_n1_min = 0
	local thrust_n1_max = 0
	local tat_max = 0
	local tat_min = 0
	local alt_min = 0
	local alt_max = 0

	-- Climb thrust 26K, 24K, 22K
		
	-- TAT: -40 C to 60 C
	tat_max = math.min ( 60, roundUpToIncrement(tat_entry, 5 ))
	tat_max = math.max ( -40, tat_max)
	tat_min = math.max ( -40, tat_max - 5)
	-- ALT: 0 ft to 41000 ft
	if alt_entry > 37000 then
		alt_max = 41000
		alt_min = 37000
	elseif alt_entry > 35000 then
		alt_max = 37000
		alt_min = 35000
	else
		alt_max = math.min( 41000, roundUpToIncrement(alt_entry, 5000 ))
		alt_max = math.max( 0, alt_max)
		alt_min = math.max( 0, alt_max - 5000)
	end
	thrust_n1_min = B738_rescale(alt_min, climb_thrust[tat_min][alt_min], alt_max, climb_thrust[tat_min][alt_max], alt_entry)
	thrust_n1_max = B738_rescale(alt_min, climb_thrust[tat_max][alt_min], alt_max, climb_thrust[tat_max][alt_max], alt_entry)
	thrust_n1 = B738_rescale(tat_min, thrust_n1_min, tat_max, thrust_n1_max, tat_entry)
	
	-- adjust ENGINES ANTI-ICE and WING ANTI-ICE
	if alt_entry > 35000 then
		alt_max = 41000
		alt_min = 35000
	elseif alt_entry > 30000 then
		alt_max = 35000
		alt_min = 30000
	else
		alt_max = math.min( 41000, roundUpToIncrement(alt_entry, 10000 ))
		alt_max = math.max( 0, alt_max)
		alt_min = math.max( 0, alt_max - 10000)
	end
	if B738DR_eng1_heat_pos == 1 or B738DR_eng2_heat_pos == 1 then
		if B738DR_wing_heat_pos == 1 then
			thrust_n1_min = B738_rescale(alt_min, climb_adj_wing_ice[alt_min], alt_max, climb_adj_wing_ice[alt_max], alt_entry)
			thrust_n1 = thrust_n1 + thrust_n1_min
		else
			thrust_n1_min = B738_rescale(alt_min, climb_adj_eng_ice[alt_min], alt_max, climb_adj_eng_ice[alt_max], alt_entry)
			thrust_n1 = thrust_n1 + thrust_n1_min
		end
	end
	--alt_min = B738_rescale(0, 0, 41000, 2, alt_entry)
	--thrust_n1 = thrust_n1 - alt_min
	thrust_n1 = math.min (99.9, thrust_n1)
	B738DR_thr_climb_N1 = thrust_n1 / 100

end

function B738_ga_n1_calc()

	local alt_entry = simDR_elevation_m * 3.281	-- meters to ft
	local tat_entry = simDR_TAT
	local thrust_n1 = 0
	local thrust_n1_min = 0
	local thrust_n1_max = 0
	local tat_max = 0
	local tat_min = 0
	local alt_min = 0
	local alt_max = 0

	-- TAT: -40 C to 60 C
	tat_max = math.min ( 60, roundUpToIncrement(tat_entry, 5 ))
	tat_max = math.max ( -50, tat_max)
	tat_min = math.max ( -50, tat_max - 5)
	-- ALT: 0 ft to 41000 ft
	if alt_entry < 0 then
		alt_max = 0
		alt_min = -2000
	else
		alt_max = math.min( 10000, roundUpToIncrement(alt_entry, 1000 ))
		alt_max = math.max( 0, alt_max)
		alt_min = math.max( 0, alt_max - 1000)
	end
	thrust_n1_min = B738_rescale(alt_min, ga_thrust[tat_min][alt_min], alt_max, ga_thrust[tat_min][alt_max], alt_entry)
	thrust_n1_max = B738_rescale(alt_min, ga_thrust[tat_max][alt_min], alt_max, ga_thrust[tat_max][alt_max], alt_entry)
	thrust_n1 = B738_rescale(tat_min, thrust_n1_min, tat_max, thrust_n1_max, tat_entry)
	
	-- adjust PACK off
	if B738DR_l_pack_pos == 0 and B738DR_r_pack_pos == 0 then
		thrust_n1_min = B738_rescale(alt_min, climb_adj_pack_off[alt_min], alt_max, climb_adj_pack_off[alt_max], alt_entry)
		thrust_n1 = thrust_n1 + thrust_n1_min
	end
	-- adjust A/C High
	if B738DR_l_pack_pos == 2 and B738DR_r_pack_pos == 2 then
		thrust_n1 = thrust_n1 - 0.1
	end
	thrust_n1 = math.min (99.9, thrust_n1)
	B738DR_thr_goaround_N1 = thrust_n1 / 100

end

function B738_cruise_n1_calc()

	local alt_entry = B738DR_fmc_cruise_alt
	local weight_entry = 0
	local thrust_n1 = 0
	local thrust_n1_min = 0
	local thrust_n1_max = 0
	local weight_max = 0
	local weight_min = 0
	local alt_min = 0
	local alt_max = 0
	local isa_dev = B738DR_isa_dev_c

	if B738DR_fmc_gw > 0 then
		weight_entry = B738DR_fmc_gw / 2.204	-- to x1000 kg
	else
		weight_entry = 85	-- if no GW then calc full weight
	end
	-- Weight: 40 to 85  x1000 kg
	weight_max = math.min ( 85, roundUpToIncrement(weight_entry, 5 ))
	weight_max = math.max ( 40, weight_max)
	weight_min = math.max ( 40, weight_max - 5)
	-- ALT: 25 ft to 41  x1000 ft
	alt_entry = alt_entry / 1000
	alt_max = math.min( 41, (roundUpToIncrement(alt_entry, 2 ) + 1))
	alt_max = math.max( 25, alt_max)
	alt_min = math.max( 25, alt_max - 2)
	thrust_n1_min = B738_rescale(alt_min, cruise_thrust[weight_min][alt_min], alt_max, cruise_thrust[weight_min][alt_max], alt_entry)
	thrust_n1_max = B738_rescale(alt_min, cruise_thrust[weight_max][alt_min], alt_max, cruise_thrust[weight_max][alt_max], alt_entry)
	thrust_n1 = B738_rescale(weight_min, thrust_n1_min, weight_max, thrust_n1_max, weight_entry)
	
	thrust_n1 = thrust_n1 + 12 	-- add 12%
	--alt_entry = simDR_elevation_m * 3.281
	--alt_min = B738_rescale(0, 0, 41000, 0.5, alt_entry)
	--thrust_n1 = thrust_n1 - alt_min
	B738DR_thr_cruise_N1 = math.min (99.9, thrust_n1)
	B738DR_thr_cruise_N1 = (B738DR_thr_cruise_N1 / 100)
	
	if B738DR_fmc_gw > 0 then
		if isa_dev <= 10 then
			isa_dev = 10
		elseif isa_dev <= 15 then
			isa_dev = 15
		else
			isa_dev = 20
		end
		thrust_n1 = B738_rescale(weight_min, cruise_max_alt[isa_dev][weight_min], weight_max, cruise_max_alt[isa_dev][weight_max], weight_entry)
		B738DR_cruise_max_alt = roundUpToIncrement(thrust_n1, 100 )
		if B738DR_fpln_dist > 300 then
			thrust_n1 = B738_rescale(weight_min, cruise_opt_alt[weight_min], weight_max, cruise_opt_alt[weight_max], weight_entry)
			B738DR_cruise_opt_alt = roundUpToIncrement(thrust_n1, 100 )
		else
			if B738DR_fpln_dist == 0 then
				B738DR_cruise_opt_alt = 0
			else
				if B738DR_fpln_dist < 50 then
					B738DR_cruise_opt_alt = 9000
				else
					if B738DR_fpln_dist <= 70 then
						alt_min = 50
						alt_max = 70
						weight_min = 9000
						weight_max = 11000
					elseif B738DR_fpln_dist <= 100 then
						alt_min = 70
						alt_max = 100
						weight_min = 11000
						weight_max = 13000
					elseif B738DR_fpln_dist <= 150 then
						alt_min = 100
						alt_max = 150
						weight_min = 13000
						weight_max = 17000
					elseif B738DR_fpln_dist <= 185 then
						alt_min = 150
						alt_max = 185
						weight_min = 17000
						weight_max = 23000
					elseif B738DR_fpln_dist <= 210 then
						alt_min = 185
						alt_max = 210
						weight_min = 23000
						weight_max = 25000
					elseif B738DR_fpln_dist <= 250 then
						alt_min = 210
						alt_max = 250
						weight_min = 25000
						weight_max = 27000
					elseif B738DR_fpln_dist <= 300 then
						alt_min = 250
						alt_max = 300
						weight_min = 27000
						weight_max = 29000
					end
					thrust_n1 = B738_rescale(alt_min, weight_min, alt_max, weight_max, B738DR_fpln_dist)
					B738DR_cruise_opt_alt = roundUpToIncrement(thrust_n1, 100 )
				end
			end
		end
	else
		B738DR_cruise_opt_alt = 0
		B738DR_cruise_max_alt = 0
	end

end

--*************************************************************************************--
--** 				               XLUA EVENT CALLBACKS       	        			 **--
--*************************************************************************************--

--function aircraft_load() end

--function aircraft_unload() end

function flight_start() 

	if simDR_startup_running == 0 then
		B738DR_mixture_ratio1 = 0.0
		B738DR_mixture_ratio2 = 0.0
	elseif simDR_startup_running == 1 then
		B738DR_mixture_ratio1 = 1.0
		B738DR_mixture_ratio2 = 1.0
	end
--	B738DR_fms_takeoff_flaps = 5
	B738DR_pfd_max_speed = 340
	max_speed_act = 340
	B738DR_pfd_min_speed = 210
	min_speed_act = 210
	B738DR_pfd_min_speed_show = 0
	aircraft_was_on_air = 0
	B738DR_digit_8 = 0
	B738DR_digit_A = 0
	aircraft_was_on_air2 = 0
	v1r_bugs_enable = 0
	B738DR_fms_v1r_bugs = 0
	B738DR_fms_v2_bugs = 0
	B738DR_fms_vref_bugs = 0
	max_maneuver_speed_act = 340
	min_maneuver_speed_act = 100
	B738DR_pfd_flaps_up_show = 0
	
	min_maneuver_speed_show = 1


	B738DR_trim_calc = 0

end

--function flight_crash() end

--function before_physics() 

--end

function after_physics() 

--	B738_engine_rpm()
	B738_engine_rpm2()
	B738_engine_egt()
	B738_calc_min_max_spd()
	B738_calc_trim()
	B738_calc_vspeed()
	B738_calc_vref()
	B738_vspeed_bugs()
	B738_takeoff_n1_calc()
	B738_climb_n1_calc()
	B738_ga_n1_calc()
	B738_cruise_n1_calc()
	-- if B738DR_fmc_gw > 0 then
		-- B738_flaps_bug()
	-- end


end

--function after_replay() end




--*************************************************************************************--
--** 				               SUB-MODULE PROCESSING       	        			 **--
--*************************************************************************************--

-- dofile("")



